//===========================================================================
// 
// Breath of War 0.99d
// 
//   Warcraft III map script
//   Generated by the Warcraft III World Editor
//   Date: Wed Oct 12 09:33:14 2011
//   Map Author: Lazarus
// 
//===========================================================================

//***************************************************************************
//*
//*  Global Variables
//*
//***************************************************************************

globals
    // User-defined
    integer                 udg_RandomHumTotalHeroes   = 0
    integer array           udg_RandomHumHeroesType
    integer                 udg_Buff_peurdeladouleur   = 0
    integer                 udg_Buff_cheminardent      = 0
    integer                 udg_Buff_formedether       = 0
    integer                 udg_Buff_liendesouffrance  = 0
    integer                 udg_Buff_poison1           = 0
    integer                 udg_Buff_poison2           = 0
    integer                 udg_Buff_cridebataille     = 0
    integer                 udg_Buff_presenceprotectrice = 0
    integer                 udg_Buff_runedesauvagerie  = 0
    integer                 udg_Buff_runederesilience  = 0
    integer                 udg_Buff_runedeferocite    = 0
    integer                 udg_Buff_runedemaintien    = 0
    integer                 udg_Buff_nuagedesang       = 0
    integer                 udg_Buff_novadefeu         = 0
    integer                 udg_Buff_runederenaissanceinterieu = 0
    integer                 udg_Buff_ragetemeraire     = 0
    integer                 udg_Buff_fleurdelame       = 0
    integer                 udg_Buff_fanatisme         = 0
    integer                 udg_Buff_sombreconstriction = 0
    integer                 udg_Buff_protectionstatique = 0
    integer                 udg_Buff_explosiondejustice = 0
    integer                 udg_Buff_coeurdegivreflammes = 0
    integer                 udg_Buff_novadegel         = 0
    integer                 udg_Buff_adrenaline        = 0
    integer                 udg_Buff_refluxdessens     = 0
    boolean array           udg_CombatState
    integer                 udg_Buff_renouveau         = 0
    integer                 udg_Buff_vigueurnouvelle   = 0
    integer                 udg_Buff_forcedelespoir    = 0
    integer                 udg_IACurrentTarget        = 0
    timer                   udg_WaveTimer              = null
    integer                 udg_WaveCount              = 0
    timerdialog             udg_WaveTimerDialog        = null
    group                   udg_NoPathingGroup         = null
    timerdialog array       udg_DeathTimerDialog
    timer array             udg_DeathTimer
    unit array              udg_Hero
    integer                 udg_PlayersCount           = 0
    multiboard              udg_Board                  = null
    integer                 udg_PlayersTeam1           = 0
    integer                 udg_PlayersTeam2           = 0
    boolean                 udg_GameStateEnd           = false
    integer                 udg_RandomOrcTotalHeroes   = 0
    integer array           udg_RandomOrcHeroesType
    location                udg_LocGetUnitZ            = null
    integer                 udg_Buff_runedudemon       = 0
    integer                 udg_Buff_bouclierdemana    = 0
    integer                 udg_Buff_rets              = 0
    group                   udg_ENUMGROUP              = null
    timer array             udg_IATimer
    integer array           udg_BoardLine
    integer array           udg_BoardDeathCount
    integer                 udg_Buff_distorsiontemporelle = 0
    boolean                 udg_GameStateStarted       = false
    boolean                 udg_ENUMBOOL               = false
    integer                 udg_Buff_anneauduconvalescent = 0
    unit                    udg_ENUMUNIT               = null
    integer                 udg_Buff_totemdepuissance  = 0
    integer                 udg_Buff_totemdefuriesanguinaire = 0
    integer                 udg_Buff_totemdefureurelementaire = 0
    player                  udg_ENUMPLAYER             = null
    integer                 udg_Buff_maindemort        = 0
    integer                 udg_Buff_ragedeguerre      = 0
    integer                 udg_Buff_failletemporelle  = 0
    integer                 udg_Buff_forceinterieure   = 0
    integer                 udg_Buff_auradepuissance   = 0
    integer                 udg_Buff_ensembledumaleficieur = 0
    integer                 udg_Buff_afflictionpandemique = 0
    integer                 udg_Buff_vapeursattachantes = 0
    integer                 udg_Buff_plaiesinfectieuses = 0
    integer                 udg_Buff_incubation        = 0
    integer                 udg_Buff_maladiesvirulentes = 0
    integer                 udg_Abil_afflictionpandemique = 0
    integer                 udg_Abil_incubation        = 0
    integer                 udg_Abil_maladiesvirulentes = 0
    integer                 udg_Abil_plaiesinfectieuses = 0
    integer                 udg_Buff_corruptionmentale = 0
    integer                 udg_Abil_corruptionmentale = 0
    integer                 udg_Buff_pestedevorante    = 0
    integer                 udg_Abil_pestedevorante    = 0
    integer                 udg_Abil_peurdeladouleur   = 0
    integer                 udg_Abil_rituelvampirique  = 0
    integer                 udg_Buff_rituelvampirique  = 0

    // Generated
    rect                    gg_rct_APC                 = null
    rect                    gg_rct_APN                 = null
    rect                    gg_rct_APS                 = null
    rect                    gg_rct_BH                  = null
    rect                    gg_rct_BO                  = null
    rect                    gg_rct_CHC                 = null
    rect                    gg_rct_CHN                 = null
    rect                    gg_rct_CHS                 = null
    rect                    gg_rct_COC                 = null
    rect                    gg_rct_CON                 = null
    rect                    gg_rct_COS                 = null
    rect                    gg_rct_PathAPC             = null
    rect                    gg_rct_PathAPN             = null
    rect                    gg_rct_PathAPS             = null
    rect                    gg_rct_PathEst             = null
    rect                    gg_rct_PathHum             = null
    rect                    gg_rct_PathNord            = null
    rect                    gg_rct_PathNW              = null
    rect                    gg_rct_PathOrc             = null
    rect                    gg_rct_PathOuest           = null
    rect                    gg_rct_PathSE              = null
    rect                    gg_rct_PathSud             = null
    rect                    gg_rct_ResAPC              = null
    rect                    gg_rct_ResAPN              = null
    rect                    gg_rct_ResAPS              = null
    rect                    gg_rct_ResHum              = null
    rect                    gg_rct_ResOrc              = null
    rect                    gg_rct_MeteoBaseOrc        = null
    rect                    gg_rct_MeteoAPSW           = null
    rect                    gg_rct_MeteoAPNE           = null
    rect                    gg_rct_MeteoBaseHum        = null
    rect                    gg_rct_MeteoAPC            = null
    rect                    gg_rct_MeteoZoneEast       = null
    rect                    gg_rct_MeteoZoneSouth      = null
    rect                    gg_rct_MeteoZoneWest       = null
    rect                    gg_rct_MeteoZoneNorth      = null
    sound                   gg_snd_NuclearLaunchDetected = null
    trigger                 gg_trg_Framework           = null
    trigger                 gg_trg_CastBar             = null
    trigger                 gg_trg_DurationBar         = null
    trigger                 gg_trg_CC_Conditions_functions = null
    trigger                 gg_trg_Units_functions     = null
    trigger                 gg_trg_CC_functions        = null
    trigger                 gg_trg_Damage_functions    = null
    trigger                 gg_trg_DoT_functions       = null
    trigger                 gg_trg_Dispel              = null
    trigger                 gg_trg_CombatState         = null
    trigger                 gg_trg_AI                  = null
    trigger                 gg_trg_Initialisation      = null
    trigger                 gg_trg_TimedEvents         = null
    trigger                 gg_trg_BeforeMapStart      = null
    trigger                 gg_trg_PeriodicEvents      = null
    trigger                 gg_trg_UnitDieEvents       = null
    trigger                 gg_trg_PlayerLeave         = null
    trigger                 gg_trg_Castles_destroyed   = null
    trigger                 gg_trg_Cheats              = null
    trigger                 gg_trg_ChangePatrolOrder   = null
    trigger                 gg_trg_Heroes_init_gui     = null
    trigger                 gg_trg_Debug               = null
    trigger                 gg_trg_Security            = null
    trigger                 gg_trg_ItemSpells          = null
    trigger                 gg_trg_ItemSystem          = null
    trigger                 gg_trg_UsingItems          = null
    trigger                 gg_trg_LearningAlchemy     = null
    trigger                 gg_trg_LearningEnchant     = null
    trigger                 gg_trg_InventorySwitch     = null
    trigger                 gg_trg_Enchants            = null
    trigger                 gg_trg_Tracking            = null
    trigger                 gg_trg_Waves               = null
    trigger                 gg_trg_CreepSpawn          = null
    trigger                 gg_trg_BossSpawn           = null
    trigger                 gg_trg_InactiveCreepsOrders = null
    trigger                 gg_trg_Orders              = null
    trigger                 gg_trg_Capping_Avant_Postes = null
    trigger                 gg_trg_Creep_Spells        = null
    trigger                 gg_trg_PorteMort           = null
    trigger                 gg_trg_DrakeDeLaGuerre     = null
    trigger                 gg_trg_MarcheurDeLhiver    = null
    trigger                 gg_trg_GardienDeLaTerre    = null
    trigger                 gg_trg_Justicier           = null
    trigger                 gg_trg_ChevalierNoir       = null
    trigger                 gg_trg_HerautDeLaPaix      = null
    trigger                 gg_trg_Barbare             = null
    trigger                 gg_trg_Vampire             = null
    trigger                 gg_trg_Assassin            = null
    trigger                 gg_trg_TisseurDeLiens      = null
    trigger                 gg_trg_DiscipleDuTemps     = null
    trigger                 gg_trg_Necromancien        = null
    trigger                 gg_trg_Chaman              = null
    trigger                 gg_trg_SorcierRenegat      = null
    trigger                 gg_trg_Incinerateur        = null
    trigger                 gg_trg_ErrantDeLombre      = null
    trigger                 gg_trg_PorteurDePeste      = null
    trigger                 gg_trg_MageDesElements     = null
    trigger                 gg_trg_TortionnaireFoudroyant = null
    trigger                 gg_trg_TunneleurDesVents   = null
    trigger                 gg_trg_ExpiateurDeMagie    = null
    trigger                 gg_trg_SemeurDeSouffrances = null
    trigger                 gg_trg_ChasseuseCrepusculaire = null
    trigger                 gg_trg_MarineDeLespace     = null
    trigger                 gg_trg_Archidruide         = null
    trigger                 gg_trg_PretreDeLespoir     = null
    trigger                 gg_trg_OnAttackSpells      = null
    trigger                 gg_trg_OnCastSpells        = null
    trigger                 gg_trg_WhenSpelledSpells   = null
    trigger                 gg_trg_WhenAttackedSpells  = null
    trigger                 gg_trg_Classes_Initialisations = null
    trigger                 gg_trg_Players_Initialisations = null
    trigger                 gg_trg_Selection           = null
    trigger                 gg_trg_Experience          = null
    trigger                 gg_trg_Repick              = null
    trigger                 gg_trg_Cercle_de_choix     = null
    trigger                 gg_trg_AutoDistrib         = null
    trigger                 gg_trg_Levelling           = null
    trigger                 gg_trg_CritSystem          = null
    trigger                 gg_trg_DeathMessageAndRespawn = null
    unit                    gg_unit_n00P_0056          = null
    unit                    gg_unit_n00P_0053          = null
    unit                    gg_unit_n00P_0052          = null
    unit                    gg_unit_n00P_0047          = null
    unit                    gg_unit_n00P_0046          = null
    unit                    gg_unit_n02U_0077          = null
    unit                    gg_unit_h000_0013          = null
    unit                    gg_unit_o000_0012          = null
    unit                    gg_unit_n02U_0076          = null
    unit                    gg_unit_n02U_0075          = null
    unit                    gg_unit_h003_0041          = null
    unit                    gg_unit_h003_0042          = null
    unit                    gg_unit_n02U_0050          = null
    unit                    gg_unit_n00J_0049          = null
    unit                    gg_unit_n01Y_0054          = null
    unit                    gg_unit_n02U_0079          = null
    unit                    gg_unit_n02U_0078          = null
    unit                    gg_unit_n02U_0004          = null
    unit                    gg_unit_n02U_0022          = null
    unit                    gg_unit_n00P_0011          = null
    unit                    gg_unit_n00P_0061          = null
    unit                    gg_unit_n00P_0066          = null
    unit                    gg_unit_n00P_0067          = null
    unit                    gg_unit_n00P_0086          = null
    unit                    gg_unit_n00P_0087          = null
    unit                    gg_unit_n00P_0088          = null
    unit                    gg_unit_n02U_0055          = null
    unit                    gg_unit_n02U_0080          = null
    unit                    gg_unit_n02U_0112          = null
    unit                    gg_unit_n02U_0113          = null
    unit                    gg_unit_h003_0114          = null
    unit                    gg_unit_n00J_0119          = null
    unit                    gg_unit_n01Y_0120          = null
    unit                    gg_unit_n01Y_0121          = null
    unit                    gg_unit_n00J_0122          = null
endglobals

function InitGlobals takes nothing returns nothing
    local integer i = 0
    set udg_RandomHumTotalHeroes = 0
    set udg_Buff_peurdeladouleur = 'B01D'
    set udg_Buff_cheminardent = 'B00V'
    set udg_Buff_formedether = 'B01I'
    set udg_Buff_liendesouffrance = 'B002'
    set udg_Buff_poison1 = 'B01X'
    set udg_Buff_poison2 = 'B01Y'
    set udg_Buff_cridebataille = 'B013'
    set udg_Buff_presenceprotectrice = 'B016'
    set udg_Buff_runedesauvagerie = 'B015'
    set udg_Buff_runederesilience = 'B012'
    set udg_Buff_runedeferocite = 'B00Z'
    set udg_Buff_runedemaintien = 'B010'
    set udg_Buff_nuagedesang = 'B00P'
    set udg_Buff_novadefeu = 'B004'
    set udg_Buff_runederenaissanceinterieu = 'B01A'
    set udg_Buff_ragetemeraire = 'B014'
    set udg_Buff_fleurdelame = 'B018'
    set udg_Buff_fanatisme = 'B00M'
    set udg_Buff_sombreconstriction = 'B007'
    set udg_Buff_protectionstatique = 'B00K'
    set udg_Buff_explosiondejustice = 'B00J'
    set udg_Buff_coeurdegivreflammes = 'B00T'
    set udg_Buff_novadegel = 'B004'
    set udg_Buff_adrenaline = 'B011'
    set udg_Buff_refluxdessens = 'B00S'
    set i = 0
    loop
        exitwhen (i > 12)
        set udg_CombatState[i] = false
        set i = i + 1
    endloop

    set udg_Buff_renouveau = 'B01W'
    set udg_Buff_vigueurnouvelle = 'B01P'
    set udg_Buff_forcedelespoir = 'B01Q'
    set udg_IACurrentTarget = 0
    set udg_WaveTimer = CreateTimer()
    set udg_WaveCount = 0
    set udg_NoPathingGroup = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 12)
        set udg_DeathTimer[i] = CreateTimer()
        set i = i + 1
    endloop

    set udg_PlayersCount = 0
    set udg_PlayersTeam1 = 0
    set udg_PlayersTeam2 = 0
    set udg_GameStateEnd = false
    set udg_RandomOrcTotalHeroes = 0
    set udg_Buff_runedudemon = 'B00N'
    set udg_Buff_bouclierdemana = 'B01H'
    set udg_Buff_rets = 'B01U'
    set udg_ENUMGROUP = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 12)
        set udg_IATimer[i] = CreateTimer()
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BoardLine[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BoardDeathCount[i] = 0
        set i = i + 1
    endloop

    set udg_Buff_distorsiontemporelle = 'B005'
    set udg_GameStateStarted = false
    set udg_ENUMBOOL = false
    set udg_Buff_anneauduconvalescent = 'B01J'
    set udg_Buff_totemdepuissance = 'B01L'
    set udg_Buff_totemdefuriesanguinaire = 'B01B'
    set udg_Buff_totemdefureurelementaire = 'B01R'
    set udg_Buff_maindemort = 'B01Z'
    set udg_Buff_ragedeguerre = 'B021'
    set udg_Buff_failletemporelle = 'B022'
    set udg_Buff_forceinterieure = 'B023'
    set udg_Buff_auradepuissance = 'B024'
    set udg_Buff_ensembledumaleficieur = 'B026'
    set udg_Buff_afflictionpandemique = 'B00B'
    set udg_Buff_vapeursattachantes = 'B029'
    set udg_Buff_plaiesinfectieuses = 'B02A'
    set udg_Buff_incubation = 'B028'
    set udg_Buff_maladiesvirulentes = 'B02B'
    set udg_Abil_afflictionpandemique = 'A02Q'
    set udg_Abil_incubation = 'A08F'
    set udg_Abil_maladiesvirulentes = 'A08G'
    set udg_Abil_plaiesinfectieuses = 'A088'
    set udg_Buff_corruptionmentale = 'B02C'
    set udg_Abil_corruptionmentale = 'A08I'
    set udg_Buff_pestedevorante = 'B02D'
    set udg_Abil_pestedevorante = 'A08J'
    set udg_Abil_peurdeladouleur = 'A08K'
    set udg_Abil_rituelvampirique = 'A08L'
    set udg_Buff_rituelvampirique = 'B02F'
endfunction

//***************************************************************************
//*
//*  Sounds
//*
//***************************************************************************

function InitSounds takes nothing returns nothing
    set gg_snd_NuclearLaunchDetected = CreateSound( "NuclearLaunchDetected.wav", false, false, false, 10, 10, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_NuclearLaunchDetected, 2337 )
    call SetSoundChannel( gg_snd_NuclearLaunchDetected, 0 )
    call SetSoundVolume( gg_snd_NuclearLaunchDetected, 127 )
    call SetSoundPitch( gg_snd_NuclearLaunchDetected, 1.0 )
endfunction

//***************************************************************************
//*
//*  Unit Creation
//*
//***************************************************************************

//===========================================================================
function CreateBuildingsForPlayer0 takes nothing returns nothing
    local player p = Player(0)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_n00P_0061 = CreateUnit( p, 'n00P', -8064.0, 6912.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer1 takes nothing returns nothing
    local player p = Player(1)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_n00P_0066 = CreateUnit( p, 'n00P', -8192.0, 6912.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer2 takes nothing returns nothing
    local player p = Player(2)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_n00P_0067 = CreateUnit( p, 'n00P', -7808.0, 6912.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer3 takes nothing returns nothing
    local player p = Player(3)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_n00P_0086 = CreateUnit( p, 'n00P', -7680.0, 6912.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer4 takes nothing returns nothing
    local player p = Player(4)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_n00P_0087 = CreateUnit( p, 'n00P', -7936.0, 6784.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer5 takes nothing returns nothing
    local player p = Player(5)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'h001', -7424.0, 4800.0, 270.000 )
    set gg_unit_h000_0013 = CreateUnit( p, 'h000', -6976.0, 6016.0, 270.000 )
    set u = CreateUnit( p, 'h009', -4224.0, 5696.0, 270.000 )
    set u = CreateUnit( p, 'h009', -4224.0, 7232.0, 270.000 )
    set u = CreateUnit( p, 'h001', -7360.0, 5952.0, 270.000 )
    set u = CreateUnit( p, 'h00D', -6848.0, 4800.0, 270.000 )
    set u = CreateUnit( p, 'h00D', -6400.0, 5376.0, 270.000 )
    set u = CreateUnit( p, 'h00D', -5824.0, 5824.0, 270.000 )
    set u = CreateUnit( p, 'h009', -7232.0, 3200.0, 270.000 )
    set u = CreateUnit( p, 'h001', -6912.0, 6400.0, 270.000 )
    set u = CreateUnit( p, 'h001', -7424.0, 6400.0, 270.000 )
    set u = CreateUnit( p, 'h009', -4224.0, 6720.0, 270.000 )
    set u = CreateUnit( p, 'h009', -4224.0, 6208.0, 270.000 )
    set u = CreateUnit( p, 'h009', -8256.0, 3200.0, 270.000 )
    set u = CreateUnit( p, 'h009', -6720.0, 3200.0, 270.000 )
    set u = CreateUnit( p, 'h002', -5696.0, 2112.0, 270.000 )
    set u = CreateUnit( p, 'h002', -3136.0, 4672.0, 270.000 )
    set u = CreateUnit( p, 'h002', -3136.0, 5568.0, 270.000 )
    set u = CreateUnit( p, 'h002', -6592.0, 2112.0, 270.000 )
    set u = CreateUnit( p, 'n01S', -8192.0, 5376.0, 270.000 )
    set gg_unit_n00P_0088 = CreateUnit( p, 'n00P', -7936.0, 6656.0, 270.000 )
    set u = CreateUnit( p, 'h001', -7936.0, 4800.0, 270.000 )
    set u = CreateUnit( p, 'h001', -8448.0, 4800.0, 270.000 )
    set u = CreateUnit( p, 'h001', -5824.0, 6400.0, 270.000 )
    set u = CreateUnit( p, 'h001', -5824.0, 6912.0, 270.000 )
    set u = CreateUnit( p, 'h001', -5824.0, 7424.0, 270.000 )
    set u = CreateUnit( p, 'n01E', -8192.0, 5888.0, 270.000 )
    set u = CreateUnit( p, 'h009', -7744.0, 3200.0, 270.000 )
    set u = CreateUnit( p, 'h009', -5568.0, 3200.0, 270.000 )
    set u = CreateUnit( p, 'h009', -5056.0, 3200.0, 270.000 )
    set u = CreateUnit( p, 'h009', -4224.0, 4544.0, 270.000 )
    set u = CreateUnit( p, 'h009', -4224.0, 4032.0, 270.000 )
    set u = CreateUnit( p, 'h002', -4160.0, 2496.0, 270.000 )
    set u = CreateUnit( p, 'h002', -3520.0, 3136.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer6 takes nothing returns nothing
    local player p = Player(6)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_n00P_0056 = CreateUnit( p, 'n00P', 5760.0, -6912.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer7 takes nothing returns nothing
    local player p = Player(7)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_n00P_0046 = CreateUnit( p, 'n00P', 5632.0, -6912.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer8 takes nothing returns nothing
    local player p = Player(8)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_n00P_0053 = CreateUnit( p, 'n00P', 6016.0, -6912.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer9 takes nothing returns nothing
    local player p = Player(9)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_n00P_0052 = CreateUnit( p, 'n00P', 6144.0, -6912.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer10 takes nothing returns nothing
    local player p = Player(10)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_n00P_0047 = CreateUnit( p, 'n00P', 5888.0, -7040.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer11 takes nothing returns nothing
    local player p = Player(11)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'n000', 3776.0, -7424.0, 270.000 )
    set gg_unit_n00P_0011 = CreateUnit( p, 'n00P', 5888.0, -7168.0, 270.000 )
    set gg_unit_o000_0012 = CreateUnit( p, 'o000', 4928.0, -5952.0, 270.000 )
    set u = CreateUnit( p, 'o003', 2176.0, -7232.0, 270.000 )
    set u = CreateUnit( p, 'n000', 3776.0, -6912.0, 270.000 )
    set u = CreateUnit( p, 'o003', 2176.0, -6720.0, 270.000 )
    set u = CreateUnit( p, 'n000', 3776.0, -6400.0, 270.000 )
    set u = CreateUnit( p, 'o003', 2176.0, -5696.0, 270.000 )
    set u = CreateUnit( p, 'o003', 2176.0, -6208.0, 270.000 )
    set u = CreateUnit( p, 'n000', 6400.0, -4800.0, 270.000 )
    set u = CreateUnit( p, 'n000', 5888.0, -4800.0, 270.000 )
    set u = CreateUnit( p, 'n000', 5376.0, -4800.0, 270.000 )
    set u = CreateUnit( p, 'o002', 3776.0, -5824.0, 270.000 )
    set u = CreateUnit( p, 'o003', 3520.0, -3200.0, 270.000 )
    set u = CreateUnit( p, 'o002', 4800.0, -4800.0, 270.000 )
    set u = CreateUnit( p, 'o002', 4352.0, -5376.0, 270.000 )
    set u = CreateUnit( p, 'n000', 4864.0, -6336.0, 270.000 )
    set u = CreateUnit( p, 'n000', 5376.0, -6400.0, 270.000 )
    set u = CreateUnit( p, 'n000', 5312.0, -5888.0, 270.000 )
    set u = CreateUnit( p, 'n01E', 6144.0, -5888.0, 270.000 )
    set u = CreateUnit( p, 'o001', 3648.0, -2112.0, 270.000 )
    set u = CreateUnit( p, 'o001', 1088.0, -5568.0, 270.000 )
    set u = CreateUnit( p, 'o001', 4544.0, -2112.0, 270.000 )
    set u = CreateUnit( p, 'o001', 1088.0, -4672.0, 270.000 )
    set u = CreateUnit( p, 'n01S', 6144.0, -5376.0, 270.000 )
    set u = CreateUnit( p, 'o003', 4672.0, -3200.0, 270.000 )
    set u = CreateUnit( p, 'o003', 5696.0, -3200.0, 270.000 )
    set u = CreateUnit( p, 'o003', 5184.0, -3200.0, 270.000 )
    set u = CreateUnit( p, 'o003', 6208.0, -3200.0, 270.000 )
    set u = CreateUnit( p, 'o003', 2176.0, -4544.0, 270.000 )
    set u = CreateUnit( p, 'o003', 2176.0, -4032.0, 270.000 )
    set u = CreateUnit( p, 'o003', 3008.0, -3200.0, 270.000 )
    set u = CreateUnit( p, 'o001', 2112.0, -2496.0, 270.000 )
    set u = CreateUnit( p, 'o001', 1472.0, -3136.0, 270.000 )
endfunction

//===========================================================================
function CreateNeutralPassiveBuildings takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_PASSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_n02U_0004 = CreateUnit( p, 'n02U', -6656.0, -5632.0, 270.000 )
    set u = CreateUnit( p, 'n00Q', 5888.0, -6656.0, 270.000 )
    call SetUnitColor( u, ConvertPlayerColor(2) )
    set gg_unit_n02U_0022 = CreateUnit( p, 'n02U', -6656.0, -4608.0, 270.000 )
    set u = CreateUnit( p, 'n00O', 5632.0, -7168.0, 270.000 )
    call SetUnitColor( u, ConvertPlayerColor(4) )
    set gg_unit_h003_0041 = CreateUnit( p, 'h003', -6144.0, -5120.0, 270.000 )
    set gg_unit_h003_0042 = CreateUnit( p, 'h003', 4096.0, 5120.0, 270.000 )
    set u = CreateUnit( p, 'n006', -3584.0, -2560.0, 270.000 )
    set u = CreateUnit( p, 'n006', 1536.0, 2560.0, 270.000 )
    set gg_unit_n00J_0049 = CreateUnit( p, 'n00J', 2816.0, 6400.0, 270.000 )
    set gg_unit_n02U_0050 = CreateUnit( p, 'n02U', -5632.0, -5632.0, 270.000 )
    set u = CreateUnit( p, 'n009', 6144.0, -7168.0, 270.000 )
    call SetUnitColor( u, ConvertPlayerColor(3) )
    set gg_unit_n01Y_0054 = CreateUnit( p, 'n01Y', -7168.0, -4096.0, 270.000 )
    set gg_unit_n02U_0055 = CreateUnit( p, 'n02U', -1920.0, 0.0, 270.000 )
    set u = CreateUnit( p, 'n01R', -7680.0, 0.0, 270.000 )
    set u = CreateUnit( p, 'n01R', -1024.0, 6656.0, 270.000 )
    set gg_unit_n02U_0075 = CreateUnit( p, 'n02U', -5632.0, -4608.0, 270.000 )
    set gg_unit_n02U_0076 = CreateUnit( p, 'n02U', 3328.0, 4352.0, 270.000 )
    set gg_unit_n02U_0077 = CreateUnit( p, 'n02U', 3328.0, 5888.0, 270.000 )
    set gg_unit_n02U_0078 = CreateUnit( p, 'n02U', 4864.0, 4352.0, 270.000 )
    set gg_unit_n02U_0079 = CreateUnit( p, 'n02U', 4864.0, 5888.0, 270.000 )
    set gg_unit_n02U_0080 = CreateUnit( p, 'n02U', -1024.0, 896.0, 270.000 )
    set u = CreateUnit( p, 'n01R', 5632.0, 0.0, 270.000 )
    set u = CreateUnit( p, 'n00Q', -7936.0, 7168.0, 270.000 )
    call SetUnitColor( u, ConvertPlayerColor(2) )
    set u = CreateUnit( p, 'n00O', -8192.0, 6656.0, 270.000 )
    call SetUnitColor( u, ConvertPlayerColor(4) )
    set u = CreateUnit( p, 'n009', -7680.0, 6656.0, 270.000 )
    call SetUnitColor( u, ConvertPlayerColor(3) )
    set u = CreateUnit( p, 'n01R', -1024.0, -6656.0, 270.000 )
    set gg_unit_n02U_0112 = CreateUnit( p, 'n02U', -128.0, 0.0, 270.000 )
    set gg_unit_n02U_0113 = CreateUnit( p, 'n02U', -1024.0, -896.0, 270.000 )
    set gg_unit_h003_0114 = CreateUnit( p, 'h003', -1024.0, 0.0, 270.000 )
    set gg_unit_n00J_0119 = CreateUnit( p, 'n00J', -5120.0, -6144.0, 270.000 )
    set gg_unit_n01Y_0120 = CreateUnit( p, 'n01Y', 5376.0, 3840.0, 270.000 )
    set gg_unit_n01Y_0121 = CreateUnit( p, 'n01Y', -2048.0, -1024.0, 270.000 )
    set gg_unit_n00J_0122 = CreateUnit( p, 'n00J', 0.0, 1024.0, 270.000 )
    set u = CreateUnit( p, 'n006', -1024.0, 3328.0, 270.000 )
    set u = CreateUnit( p, 'n006', 2304.0, 0.0, 270.000 )
    set u = CreateUnit( p, 'n006', -4352.0, 0.0, 270.000 )
    set u = CreateUnit( p, 'n006', -1024.0, -3328.0, 270.000 )
    set u = CreateUnit( p, 'n01R', -8192.0, -4096.0, 270.000 )
    set u = CreateUnit( p, 'n01R', -5120.0, -7168.0, 270.000 )
    set u = CreateUnit( p, 'n006', -8192.0, -7168.0, 270.000 )
    set u = CreateUnit( p, 'n01R', 6144.0, 4096.0, 270.000 )
    set u = CreateUnit( p, 'n01R', 3072.0, 7168.0, 270.000 )
    set u = CreateUnit( p, 'n006', 6144.0, 7168.0, 270.000 )
endfunction

//===========================================================================
function CreatePlayerBuildings takes nothing returns nothing
    call CreateBuildingsForPlayer0(  )
    call CreateBuildingsForPlayer1(  )
    call CreateBuildingsForPlayer2(  )
    call CreateBuildingsForPlayer3(  )
    call CreateBuildingsForPlayer4(  )
    call CreateBuildingsForPlayer5(  )
    call CreateBuildingsForPlayer6(  )
    call CreateBuildingsForPlayer7(  )
    call CreateBuildingsForPlayer8(  )
    call CreateBuildingsForPlayer9(  )
    call CreateBuildingsForPlayer10(  )
    call CreateBuildingsForPlayer11(  )
endfunction

//===========================================================================
function CreatePlayerUnits takes nothing returns nothing
endfunction

//===========================================================================
function CreateAllUnits takes nothing returns nothing
    call CreateNeutralPassiveBuildings(  )
    call CreatePlayerBuildings(  )
    call CreatePlayerUnits(  )
endfunction

//***************************************************************************
//*
//*  Regions
//*
//***************************************************************************

function CreateRegions takes nothing returns nothing
    local weathereffect we

    set gg_rct_APC = Rect( -1536.0, -512.0, -512.0, 512.0 )
    set gg_rct_APN = Rect( 3584.0, 4608.0, 4608.0, 5632.0 )
    set gg_rct_APS = Rect( -6656.0, -5632.0, -5632.0, -4608.0 )
    set gg_rct_BH = Rect( -9216.0, 3072.0, -4096.0, 8192.0 )
    set gg_rct_BO = Rect( 2048.0, -8192.0, 7168.0, -3072.0 )
    set gg_rct_CHC = Rect( -6912.0, 5376.0, -6400.0, 5888.0 )
    set gg_rct_CHN = Rect( -5600.0, 5152.0, -5152.0, 5600.0 )
    set gg_rct_CHS = Rect( -6624.0, 4128.0, -6176.0, 4576.0 )
    set gg_rct_COC = Rect( 4352.0, -5856.0, 4864.0, -5376.0 )
    set gg_rct_CON = Rect( 4128.0, -4576.0, 4576.0, -4128.0 )
    set gg_rct_COS = Rect( 3104.0, -5600.0, 3552.0, -5152.0 )
    set gg_rct_PathAPC = Rect( -1280.0, -256.0, -768.0, 256.0 )
    set gg_rct_PathAPN = Rect( 3840.0, 4864.0, 4352.0, 5376.0 )
    set gg_rct_PathAPS = Rect( -6400.0, -5408.0, -5888.0, -4896.0 )
    set gg_rct_PathEst = Rect( 3840.0, -256.0, 4352.0, 256.0 )
    set gg_rct_PathHum = Rect( -7008.0, 5472.0, -6496.0, 5984.0 )
    set gg_rct_PathNord = Rect( -1280.0, 4864.0, -768.0, 5376.0 )
    set gg_rct_PathNW = Rect( -3840.0, 2304.0, -3328.0, 2816.0 )
    set gg_rct_PathOrc = Rect( 4448.0, -5952.0, 4960.0, -5472.0 )
    set gg_rct_PathOuest = Rect( -6400.0, -256.0, -5888.0, 256.0 )
    set gg_rct_PathSE = Rect( 1280.0, -2816.0, 1792.0, -2304.0 )
    set gg_rct_PathSud = Rect( -1280.0, -5376.0, -768.0, -4864.0 )
    set gg_rct_ResAPC = Rect( -640.0, 384.0, -512.0, 512.0 )
    set gg_rct_ResAPN = Rect( 5280.0, 6304.0, 5408.0, 6432.0 )
    set gg_rct_ResAPS = Rect( -7520.0, -6496.0, -7392.0, -6368.0 )
    set gg_rct_ResHum = Rect( -6720.0, 7104.0, -6592.0, 7232.0 )
    set gg_rct_ResOrc = Rect( 4544.0, -7232.0, 4672.0, -7104.0 )
    set gg_rct_MeteoBaseOrc = Rect( 2048.0, -8192.0, 7168.0, -3072.0 )
    set we = AddWeatherEffect( gg_rct_MeteoBaseOrc, 'WOcw' )
    call EnableWeatherEffect( we, true )
    set gg_rct_MeteoAPSW = Rect( -9216.0, -8192.0, -4096.0, -3072.0 )
    set we = AddWeatherEffect( gg_rct_MeteoAPSW, 'FDrh' )
    call EnableWeatherEffect( we, true )
    set gg_rct_MeteoAPNE = Rect( 2048.0, 3072.0, 7168.0, 8192.0 )
    set we = AddWeatherEffect( gg_rct_MeteoAPNE, 'RAlr' )
    call EnableWeatherEffect( we, true )
    set gg_rct_MeteoBaseHum = Rect( -9216.0, 3072.0, -4096.0, 8192.0 )
    set we = AddWeatherEffect( gg_rct_MeteoBaseHum, 'RAlr' )
    call EnableWeatherEffect( we, true )
    set gg_rct_MeteoAPC = Rect( -3584.0, -2560.0, 1536.0, 2560.0 )
    set we = AddWeatherEffect( gg_rct_MeteoAPC, 'FDwh' )
    call EnableWeatherEffect( we, true )
    set gg_rct_MeteoZoneEast = Rect( 1536.0, -3072.0, 7168.0, 3072.0 )
    set we = AddWeatherEffect( gg_rct_MeteoZoneEast, 'WNcw' )
    call EnableWeatherEffect( we, true )
    set gg_rct_MeteoZoneSouth = Rect( -4096.0, -8192.0, 2048.0, -2560.0 )
    set we = AddWeatherEffect( gg_rct_MeteoZoneSouth, 'WOlw' )
    call EnableWeatherEffect( we, true )
    set gg_rct_MeteoZoneWest = Rect( -9216.0, -3072.0, -3584.0, 3072.0 )
    set we = AddWeatherEffect( gg_rct_MeteoZoneWest, 'FDgh' )
    call EnableWeatherEffect( we, true )
    set gg_rct_MeteoZoneNorth = Rect( -4096.0, 2560.0, 2048.0, 8192.0 )
    set we = AddWeatherEffect( gg_rct_MeteoZoneNorth, 'RAhr' )
    call EnableWeatherEffect( we, true )
endfunction

//***************************************************************************
//*
//*  Custom Script Code
//*
//***************************************************************************
//TESH.scrollpos=0
//TESH.alwaysfold=0

//***************************************************************************
//*
//*  Triggers
//*
//***************************************************************************

//===========================================================================
// Trigger: Framework
//
// Globals declaration & framework import
// CleanTimer(timer t)
// PlayerIsComputer() > boolean
// ModLife(unit u, real delta) > real
// ModMana(unit u, real delta) > real
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
//! import "F:\Warcraft Projects\Jass\Framework.j"
globals
  // String hash ... (Hashtable use)
    constant integer CASTBAR = 8000
    constant integer DURATIONBAR = 8001
    constant integer COMBATSTATE = 8002
    constant integer CRITICAL = 8003
    constant integer MAINTRIGGER = 1075
    constant integer SKILL = 1000
    constant integer CCFEAR = 1250
    constant integer CCBLIND = 1260
    constant integer CCMS = 1270
    constant integer CCDISARM = 1280
    constant integer CCSLOW = 1290
    constant integer CCDISORIENT = 1300
    constant integer CCSTUN = 1310
    constant integer CCMUTE = 1320
  // Others globals
    constant real INT_DIMINISHING_RETURNS_REDUCTION = 0.0025 // Intelligence reduce Crowd controls duration by 0,25%
    constant real CC_DIMINISHING_RETURNS_DURATION = 6.
    constant real CC_DIMINISHING_RETURNS_REDUCTION = 0.33
    constant integer HERO_SPELLS_ULTIMATE_TARGET_LIMIT = 15
    constant integer STAT_STR = 0
    constant integer STAT_INT = 1
    constant integer STAT_AGI = 2
    constant integer STAT_ULT = 3
    constant integer STAT_OTH = 9
    constant string CC = "!"
    // Cast Bar System :
    constant string BLANK = "|cffffffff"
    constant string YELLOW = "|cfffccc66"
    constant string ORANGE = "|c00ff8000"
    constant string BLUE = "|c000042ff"
    constant string GREEN = "|c0020c000"
    constant string PURPLE = "|c00540081"
    constant string barBit = "'"
    
  // Constants Units
    constant integer UNITID_CERCLEDECHOIX = 'n00P'

    unit ENUMUNIT = null
    unit APN = null
    unit APS = null
    unit APC = null
    unit ForgeN = null
    unit ArmurieN = null
    unit ForgeC = null
    unit ArmurieC = null
    unit ForgeS = null
    unit ArmurieS = null
    unit TOUR_APN_1 = null
    unit TOUR_APN_2 = null
    unit TOUR_APN_3 = null
    unit TOUR_APN_4 = null
    unit TOUR_APS_1 = null
    unit TOUR_APS_2 = null
    unit TOUR_APS_3 = null
    unit TOUR_APS_4 = null
    unit TOUR_APC_1 = null
    unit TOUR_APC_2 = null
    unit TOUR_APC_3 = null
    unit TOUR_APC_4 = null
    real APNX = 0.
    real APNY = 0.
    real APSX = 0.
    real APSY = 0.
    real APCX = 0.
    real APCY = 0.
    real CAS_HUM_NORD_X = 0.
    real CAS_HUM_NORD_Y = 0.
    real CAS_HUM_SUD_X = 0.
    real CAS_HUM_SUD_Y = 0.
    real CAS_HUM_CENTER_X = 0.
    real CAS_HUM_CENTER_Y = 0.
    real CAS_HUM_X = 0.
    real CAS_HUM_Y = 0.
    real CAS_ORC_NORD_X = 0.
    real CAS_ORC_NORD_Y = 0.
    real CAS_ORC_SUD_X = 0.
    real CAS_ORC_SUD_Y = 0.
    real CAS_ORC_CENTER_X = 0.
    real CAS_ORC_CENTER_Y = 0.
    real CAS_ORC_X = 0.
    real CAS_ORC_Y = 0.
endglobals
globals
    constant integer MaxTimer = 256
    constant integer MaxGroup = 64
    constant real TEXTPOSITION_X = 0.
    constant real TEXTPOSITION_Y = 0.2
    constant real AIPATROL_DETECTIONRANGE = 0.
    constant real AIPATROL_INTERVAL = 0.
endglobals
function CleanTimer takes timer t returns nothing
    call HTFlushChildHashtable(t)
    call DeleteTimer(t)
endfunction
function ModLife takes unit u, real delta returns real
    local real r = ModifyLife(u, delta)
    if(IsUnitType(u, UNIT_TYPE_HERO)==true) then
        if(R2I(r)<0) then
            call CombatText(I2S(R2I(r)), 10., u, 100., 50., 50., 45., 135.)
        elseif(R2I(r)>0) then
            call CombatText(I2S(R2I(r)), 10., u, 50., 100., 50., 225., 315.)
        endif
    endif
    return r
endfunction
function ModMana takes unit u, real delta returns real
    local real r = ModifyMana(u, delta)
    if(IsUnitType(u, UNIT_TYPE_HERO)==true) then
        if(R2I(r)!=0) then
            call CombatText(I2S(R2I(r)), 10., u, 50., 50., 100., 315., 405.)
        endif
    endif
    return r
endfunction
function IsPlayerInTeam takes player p, integer team returns boolean
    return (((GetPlayerId(p)>=0 and GetPlayerId(p)<6)or(GetPlayerId(p)==13)) and team==1) or (((GetPlayerId(p)>5 and GetPlayerId(p)<12)or(GetPlayerId(p)==14)) and team==2)
endfunction
function IsUnitInTeam takes unit u, integer team returns boolean
    return IsPlayerInTeam(GetOwningPlayer(u), team)
endfunction
function SetPlayersAlliance takes player source, player dest, boolean b returns nothing
    call SetPlayerAlliance(source, dest, ALLIANCE_PASSIVE, b)
    call SetPlayerAlliance(source, dest, ALLIANCE_HELP_REQUEST, b)
    call SetPlayerAlliance(source, dest, ALLIANCE_HELP_RESPONSE, b)
    call SetPlayerAlliance(source, dest, ALLIANCE_SHARED_XP, b)
    call SetPlayerAlliance(source, dest, ALLIANCE_SHARED_SPELLS, b)
    call SetPlayerAlliance(source, dest, ALLIANCE_SHARED_VISION, b)                                                                                   
    call SetPlayerAlliance(source, dest, ALLIANCE_SHARED_CONTROL, false)    
    call SetPlayerAlliance(source, dest, ALLIANCE_SHARED_ADVANCED_CONTROL, false)
endfunction//===========================================================================
// Trigger: CastBar
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function ConvertStringColor takes integer i returns string
    if(i==STAT_STR) then
        return ORANGE
    elseif(i==STAT_INT) then
        return BLUE
    elseif(i==STAT_AGI) then
        return GREEN
    elseif(i==STAT_ULT) then
        return PURPLE
    elseif(i==STAT_OTH) then
        return YELLOW
    else
        return BLANK
    endif
endfunction
function AddCastBarTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit u = HTLoadUnitHandle(t, UNIT)
    local texttag text = HTLoadTextTagHandle(t, TEXTTAG)
    local string bar = ConvertStringColor(HTLoadInteger(t, INTEGER))
    local boolean b = HTLoadBoolean(t, BOOLEAN)
    local integer count = HTLoadInteger(t, INDEX)
    local integer i = 0
    local real dur = HTLoadReal(t, REAL1)
    if(count>=200) then
        call CleanTimer(t)
        call HTRemoveSavedHandle(u, CASTBAR)
    else
        loop
            exitwhen i>=49
            if((not b)and(i==(count/4))) then
                set bar = bar + ENDCOLOR + BLANK
            elseif((b)and(i==-(count/4)+50)) then
                set bar = bar + ENDCOLOR + BLANK
            endif
            set bar = bar + barBit
            set i = i + 1
        endloop
        call SetTextTagText(text, bar, 0.02)
        call SetTextTagPos(text, GetUnitX(u)-50.00, GetUnitY(u), 0)
        if(IsUnitVisible(u, GetLocal())) then
            call SetTextTagVisibility(text, true)
        else
            call SetTextTagVisibility(text, false)
        endif
        call HTSaveInteger(t, INDEX, count+1)
        call TimerStart(t, dur*0.005, false, function AddCastBarTick)
    endif
    set bar = null
    set text = null
    set u = null
endfunction
function AddCastBar takes unit u, real dur, integer stat, boolean channeled returns nothing
    local timer t = NewTimer()
    local texttag text = CreateTextTag()
    call SetTextTagText(text, "", 0.02)
    call SetTextTagPos(text, GetUnitX(u)-50.0, GetUnitY(u), 0)
    call SetTextTagPermanent(text, false)
    call SetTextTagLifespan(text, dur*1.0)
    call HTSaveInteger(t, INDEX, 0)
    call HTSaveInteger(t, INTEGER, stat)
    call HTSaveReal(t, REAL1, dur)
    call HTSaveTextTagHandle(t, TEXTTAG, text)
    call HTSaveUnitHandle(t, UNIT, u)
    call HTSaveBoolean(t, BOOLEAN, channeled)
    call HTSaveTimerHandle(u, CASTBAR, t)
    call TimerStart(t, dur*0.005, false, function AddCastBarTick)
    set text = null
    set t = null
endfunction
function ADestroyCastBar takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local timer t = HTLoadTimerHandle(u, CASTBAR)
    local texttag text = HTLoadTextTagHandle(t, TEXTTAG)
    call DestroyTextTag(text)
    call HTSaveInteger(t, INDEX, 201)
    call HTRemoveSavedHandle(u, CASTBAR)
    set text = null
    set u = null
endfunction
function ACreateCastBar takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local integer abilid = GetSpellAbilityId()
    if(abilid=='A01C') then// Téléportation
        call AddCastBar(caster, 4., STAT_OTH, false)
    elseif(abilid==GardienDeLaTerreAgi) then // Tempête de sable
        call AddCastBar(caster, 5., STAT_AGI, true)
    elseif(abilid==GardienDeLaTerreUlt) then // Pluie de roc
        call AddCastBar(caster, 4., STAT_ULT, true)
    elseif(abilid==TisseurDeLiensInt) then // Rets
        call AddCastBar(caster, 0.5, STAT_INT, false)
    elseif(abilid==DiscipleDuTempsInt) then // Arrêt du temps
        call AddCastBar(caster, 0.5, STAT_INT, false)
    elseif(abilid==DiscipleDuTempsUlt) then // Vortex
        call AddCastBar(caster, 1., STAT_ULT, false)
    elseif(abilid==NecromancienAgi) then // Contact planaire
        call AddCastBar(caster, 0.5, STAT_AGI, false)
    elseif(abilid==ChamanStr) then // Chaîne d'énergie
        call AddCastBar(caster, 0.5, STAT_STR, false)
    elseif(abilid==ChamanInt) then // Maëlstrom
        call AddCastBar(caster, 0.5, STAT_INT, false)
    elseif(abilid=='A011') then // Transfert
        call AddCastBar(caster, 0.5, STAT_OTH, false)
    elseif(abilid==SorcierRenegatStr) then // Projectile ardent
        call AddCastBar(caster, 0.5, STAT_STR, false)
    elseif(abilid==IncinerateurInt) then // Conflagration
        call AddCastBar(caster, 0.5, STAT_INT, false)
    elseif(abilid==ErrantDeLombreStr) then // Sombre constriction
        call AddCastBar(caster, 1., STAT_STR, false)
    elseif(abilid==ErrantDeLombreInt) then // Ombres morbides
        call AddCastBar(caster, 4., STAT_INT, true)
    elseif(abilid==PorteurDePesteInt) then // Vapeurs attachantes
        call AddCastBar(caster, 0.5, STAT_INT, false)
    elseif(abilid==PorteurDePesteUlt) then // Vapeurs attachantes
        call AddCastBar(caster, 1., STAT_ULT, false)
    elseif(abilid==MageDesElementsStr) then // Boule de givre
        call AddCastBar(caster, 0.5, STAT_STR, false)
    elseif(abilid==TortionnaireFoudroyantStr) then // Tonnerre
        call AddCastBar(caster, 0.5, STAT_STR, false)
    elseif(abilid==TortionnaireFoudroyantInt) then // Champ électromagnétique
        call AddCastBar(caster, 4., STAT_INT, true)
    elseif(abilid==TunneleurDesVentsInt) then // Bourrasque
        call AddCastBar(caster, 0.5, STAT_INT, false)
    elseif(abilid==TunneleurDesVentsAgi) then // Courant aérien
        call AddCastBar(caster, 0.5, STAT_AGI, false)
    elseif(abilid==ExpiateurDeMagieInt) then // Zone d'instabilité magique
        call AddCastBar(caster, 1., STAT_INT, false)
    elseif(abilid==ExpiateurDeMagieUlt) then // Expiation
        call AddCastBar(caster, 1., STAT_ULT, false)
    elseif(abilid==SemeurDeSouffrancesStr) then // Fouet de l'esprit
        call AddCastBar(caster, 4., STAT_STR, true)
    elseif(abilid=='A02C') then // Visée
        call AddCastBar(caster, 2., STAT_OTH, false)
    elseif(abilid==ChasseuseCrepusculaireInt) then // Tir de barrage
        call AddCastBar(caster, 0.5, STAT_INT, false)
    elseif(abilid==MarineDeLespaceStr) then // Filet électrifié
        call AddCastBar(caster, 1., STAT_STR, false)
    elseif(abilid==MarineDeLespaceInt) then // Bombardement
        call AddCastBar(caster, 0.5, STAT_INT, false)
    elseif(abilid==MarineDeLespaceUlt) then // Missile tactique
        call AddCastBar(caster, 0.5, STAT_ULT, false)
    endif
    set caster = null
endfunction

function InitTrig_CastBar takes nothing returns nothing
    local trigger CreateCastBar = CreateTrigger()
    local trigger DestroyCastBar = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(CreateCastBar, EVENT_PLAYER_UNIT_SPELL_CHANNEL)
    call TriggerAddCondition(CreateCastBar, Condition(function IsTriggerUnitHero))
    call TriggerAddAction(CreateCastBar, function ACreateCastBar)
    call TriggerRegisterAnyUnitEventBJ(DestroyCastBar, EVENT_PLAYER_UNIT_SPELL_ENDCAST)
    call TriggerAddCondition(DestroyCastBar, Condition(function IsTriggerUnitHero))
    call TriggerAddAction(DestroyCastBar, function ADestroyCastBar)
    set CreateCastBar = null
    set DestroyCastBar = null
endfunction//===========================================================================
// Trigger: DurationBar
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function AddDurationBarTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit u = HTLoadUnitHandle(t, UNIT)
    local texttag text = HTLoadTextTagHandle(t, TEXTTAG)
    local string bar = ConvertStringColor(HTLoadInteger(t, INTEGER))
    local boolean b = HTLoadBoolean(t, BOOLEAN)
    local integer count = HTLoadInteger(t, INDEX)
    local integer i = 0
    if(count>=200) then
        call CleanTimer(t)
        call HTRemoveSavedHandle(u, CASTBAR)
    else
        loop
            exitwhen i>=49
            if((not b)and(i==(count/4))) then
                set bar = bar + ENDCOLOR + BLANK
            elseif((b)and(i==-(count/4)+50)) then
                set bar = bar + ENDCOLOR + BLANK
            endif
            set bar = bar + barBit
            set i = i + 1
        endloop
        call SetTextTagText(text, bar, 0.02)
        call SetTextTagPos(text, GetUnitX(u)-50., GetUnitY(u), 15)
        if(IsUnitVisible(u, GetLocal())) then
            call SetTextTagVisibility(text, true)
        else
            call SetTextTagVisibility(text, false)
        endif
        call HTSaveInteger(t, INDEX, count+1)
    endif
    set bar = null
    set text = null
    set u = null
endfunction
function AddDurationBar takes unit u, real dur, integer stat, boolean channeled returns nothing
    local timer t = NewTimer()
    local texttag text = CreateTextTag()
    call SetTextTagText(text, "", 0.02)
    call SetTextTagPos(text, GetUnitX(u)-50.0, GetUnitY(u), 15)
    call SetTextTagPermanent(text, false)
    call SetTextTagLifespan(text, dur*1.)
    call HTSaveInteger(t, INDEX, 0)
    call HTSaveInteger(t, INTEGER, stat)
    call HTSaveTextTagHandle(t, TEXTTAG, text)
    call HTSaveUnitHandle(t, UNIT, u)
    call HTSaveBoolean(t, BOOLEAN, channeled)
    call HTSaveTimerHandle(u, DURATIONBAR, t)
    call TimerStart(t, dur*0.005, true, function AddDurationBarTick)
    set text = null
    set t = null
endfunction
function RemoveDurationBar takes unit u returns nothing
    local timer t = HTLoadTimerHandle(u, DURATIONBAR)
    local texttag text = HTLoadTextTagHandle(t, TEXTTAG)
    call DestroyTextTag(text)
    call HTSaveInteger(t, INDEX, 201)
    call HTRemoveSavedHandle(u, CASTBAR)
    set text = null
endfunction
function ADestroyDurationBar takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local timer t = HTLoadTimerHandle(u, DURATIONBAR)
    local texttag text = HTLoadTextTagHandle(t, TEXTTAG)
    call DestroyTextTag(text)
    call HTSaveInteger(t, INDEX, 201)
    call HTRemoveSavedHandle(u, CASTBAR)
    set text = null
    set u = null
endfunction

function InitTrig_DurationBar takes nothing returns nothing
    local trigger DestroyDurationBar = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(DestroyDurationBar, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(DestroyDurationBar, Condition(function IsTriggerUnitHero))
    call TriggerAddAction(DestroyDurationBar, function ADestroyDurationBar)
    set DestroyDurationBar = null
endfunction//===========================================================================
// Trigger: CC Conditions functions
//
// IsUnitDisarmed(unit) > boolean
// IsUnitBlinded(unit) > boolean
// IsUnitFeared(unit) > boolean
// IsUnitDisoriented(unit) > boolean
// IsUnitStunned(unit) > boolean
// IsUnitSilenced(unit) > boolean
// IsUnitTakenHealReduced() > boolean
// IsUnitImmune() > boolean
// IsUnitSlowed() > boolean
// IsUnitRooted() > boolean
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function IsUnitDisarmed takes unit u returns boolean
    return GetUnitAbilityLevel(u, 'B01N')>0
endfunction
function IsUnitBlinded takes unit u returns boolean
    return GetUnitAbilityLevel(u, 'A070')>0
endfunction
function IsUnitFeared takes unit u returns boolean
    return GetUnitAbilityLevel(u, 'B01U')>0
endfunction
function IsUnitDisoriented takes unit u returns boolean
    return GetUnitAbilityLevel(u, 'B01V')>0
endfunction
function IsUnitStunned takes unit u returns boolean
    return GetUnitAbilityLevel(u, 'BPSE')>0
endfunction
function IsUnitSilenced takes unit u returns boolean
    return GetUnitAbilityLevel(u, 'B00R')>0
endfunction
function IsUnitTakenHealsReduced takes unit u returns boolean
    return GetUnitAbilityLevel(u, 'A07X')>0
endfunction
function IsUnitImmune takes unit u returns boolean
    return GetUnitAbilityLevel(u, 'A07U')>0
endfunction
function IsUnitSlowed takes unit u returns boolean
    local boolean result = false
    if(GetUnitAbilityLevel(u, 'B00H')>0) then // Lenteur
        set result = true
    elseif(GetUnitAbilityLevel(u, 'B00Q')>0) then // Archidruide - Croissance végétale
        set result = true
    elseif(GetUnitAbilityLevel(u, 'B01X')>0 or GetUnitAbilityLevel(u, 'B01Y')>0) then // Assassin - Poison
        set result = true
    elseif(GetUnitAbilityLevel(u, 'B005')>0) then // Disciple du temps - Distorsion temporelle
        set result = true
    elseif(GetUnitAbilityLevel(u, 'B014')>0) then // Drake de la guerre - Martellement
        set result = true
    elseif(GetUnitAbilityLevel(u, 'B009')>0) then // Errant de l'ombre - Brume du Styx
        set result = true
    elseif(GetUnitAbilityLevel(u, 'B00L')>0) then // Gardien de la terre - Onde de terre
        set result = true
    elseif(GetUnitAbilityLevel(u, 'B004')>0) then // Mage des éléments - Nova de feu
        set result = true
    elseif(GetUnitAbilityLevel(u, 'B01U')>0) then // Tisseur de liens - Rets
        set result = true
    elseif(GetUnitAbilityLevel(u, 'B00O')>0) then // Tortionnaire foudroyant - Champ électromagnétique
        set result = true
    elseif(GetUnitAbilityLevel(u, 'B00P')>0) then // Vampire - Nuage de sang
        set result = true
    endif
    return result
endfunction
function IsUnitRooted takes unit u returns boolean
    local boolean result = false
    if(GetUnitAbilityLevel(u, 'B007')>0) then // Errant de l'ombre - Sombre constriction
        set result = true
    elseif(GetUnitAbilityLevel(u, 'B00U')>0 or GetUnitAbilityLevel(u, 'B00W')>0) then // Marine de l'espace - Filet électrifié
        set result = true
    elseif(GetUnitAbilityLevel(u, 'B00i')>0) then // Sorcier renégat - Nova de gel
        set result = true
    endif
    return result
endfunction//===========================================================================
// Trigger: Units functions
//
// GetModelPathFromUnit(unit) > string
// GetIconPathFromUnit(unit) > string
// DefineUnitGroup(group g, real x, real y, real range, player owner, boolean forces, integer limit)
// BubbleTarget(unit u, real duration)
// EndChannelTrigger(unit u, timer t, boolexpr filter)
// RemoveAbilityAfterTime(unit caster, integer abilid, integer buffid, real dur)
// VertexColorTarget(unit target, real duration, integer alpha)
// ChangeTargetHeightOverTime(unit target, real duration, real height)
// IncreaseAttachedValueForTime(unit caster, integer value, real duration)
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function GetModelPathFromUnit takes unit u returns string
    //! textmacro GetModelPathFromUnit takes NAME, PATH
    elseif(GetUnitTypeId(u)==$NAME$ID) then
        return "$PATH$"
    //! endtextmacro
    if(GetUnitTypeId(u)==ArchidruideID) then
        return "units\\nightelf\\Furion\\Furion.mdl"
    elseif(GetUnitTypeId(u)=='N02P') then // Artificier gobelin
        return "units\\creeps\\GoblinSapper\\GoblinSapper.mdl"
    //! runtextmacro GetModelPathFromUnit("Assassin", "units\\demon\\HeroChaosBladeMaster\\HeroChaosBladeMaster.mdl")
    //! runtextmacro GetModelPathFromUnit("Barbare", "Units\\Creeps\\Beastmaster\\Beastmaster")
    //! runtextmacro GetModelPathFromUnit("Chaman", "units\\demon\\ChaosWarlock\\ChaosWarlock.mdl")
    //! runtextmacro GetModelPathFromUnit("ChasseuseCrepusculaire", "Units\\Creeps\\BansheeRanger\\BansheeRanger.mdl")
    //! runtextmacro GetModelPathFromUnit("ChevalierNoir", "KingArthas.mdl")
    //! runtextmacro GetModelPathFromUnit("DiscipleDuTemps", "units\\human\\Kael\\Kael.mdl")
    //! runtextmacro GetModelPathFromUnit("DrakeDeLaGuerre", "Units\\Creeps\\DragonSpawnGreen\\DragonSpawnGreen.mdl")
    //! runtextmacro GetModelPathFromUnit("ErrantDeLombre", "units\\undead\\Shade\\Shade.mdl")
    //! runtextmacro GetModelPathFromUnit("ExpiateurDeMagie", "units\\orc\\OrcWarlockGuldan\\OrcWarlockGuldan.mdl")
    //! runtextmacro GetModelPathFromUnit("GardienDeLaTerre", "units\\creeps\\RockGolem\\RockGolem.mdl")
    //! runtextmacro GetModelPathFromUnit("HerautDeLaPaix", "units\\human\\Uther\\Uther.mdl")
    //! runtextmacro GetModelPathFromUnit("Incinerateur", "Units\\Creeps\\HeroFlameLord\\HeroFlameLord.mdl")
    //! runtextmacro GetModelPathFromUnit("Justicier", "units\\human\\ArthaswithSword\\ArthaswithSword.mdl")
    //! runtextmacro GetModelPathFromUnit("MageDesElements", "units\\human\\Jaina\\Jaina.mdl")
    //! runtextmacro GetModelPathFromUnit("MarcheurDeLhiver", "Units\\Creeps\\MagnataurBlue\\MagnataurBlue.mdl")
    //! runtextmacro GetModelPathFromUnit("MarineDeLespace", "Units\\Critters\\Marine\\Marine.mdl")
    //! runtextmacro GetModelPathFromUnit("Necromancien", "units\\undead\\KelThuzadGhost\\KelThuzadGhost.mdl")
    //! runtextmacro GetModelPathFromUnit("PorteMort", "units\\demon\\Mannoroth\\Mannoroth.mdl")
    //! runtextmacro GetModelPathFromUnit("PorteurDePeste", "units\\undead\\HeroLich\\HeroLich_V1.mdl")
    //! runtextmacro GetModelPathFromUnit("PretreDeLespoir", "units\\creeps\\HumanMage\\HumanMage.mdl")
    //! runtextmacro GetModelPathFromUnit("SemeurDeSouffrances", "PowerLich.mdl")
    //! runtextmacro GetModelPathFromUnit("SorcierRenegat", "units\\creeps\\Medivh\\Medivh.mdl")
    //! runtextmacro GetModelPathFromUnit("TisseurDeLiens", "units\\undead\\Anubarak\\Anubarak.mdl")
    //! runtextmacro GetModelPathFromUnit("TortionnaireFoudroyant", "LightningElemental.mdl")
    //! runtextmacro GetModelPathFromUnit("TunneleurDesVents", "units\\nightelf\\DruidoftheTalon\\DruidoftheTalon.mdl")
    //! runtextmacro GetModelPathFromUnit("Vampire", "units\\demon\\DemonessBlue\\DemonessBlue.mdl")
    endif
    return null
endfunction
function GetIconPathFromUnit takes unit u returns string
    //! textmacro GetIconPathFromUnit takes NAME, PATH
    elseif(GetUnitTypeId(u)==$NAME$ID) then
        return "$PATH$"
    //! endtextmacro
    if(GetUnitTypeId(u)==ArchidruideID) then
        return "ReplaceableTextures\\CommandButtons\\BTNFurion.blp"
    elseif(GetUnitTypeId(u)=='N02P') then // Artificier gobelin
        return "ReplaceableTextures\\CommandButtons\\BTNGoblinSapper.blp"
    //! runtextmacro GetIconPathFromUnit("Assassin", "ReplaceableTextures\\CommandButtons\\BTNChaosBlademaster.blp")
    //! runtextmacro GetIconPathFromUnit("Barbare", "ReplaceableTextures\\CommandButtons\\BTNBeastMaster.blp")
    //! runtextmacro GetIconPathFromUnit("Chaman", "ReplaceableTextures\\CommandButtons\\BTNChaosWarlock.blp")
    //! runtextmacro GetIconPathFromUnit("ChasseuseCrepusculaire", "ReplaceableTextures\\CommandButtons\\BTNBansheeRanger.blp")
    //! runtextmacro GetIconPathFromUnit("ChevalierNoir", "ReplaceableTextures\\CommandButtons\\BTNKingArthas.blp")
    //! runtextmacro GetIconPathFromUnit("DiscipleDuTemps", "ReplaceableTextures\\CommandButtons\\BTNBloodMage2.blp")
    //! runtextmacro GetIconPathFromUnit("DrakeDeLaGuerre", "ReplaceableTextures\\CommandButtons\\BTNGreenDragon.blp")
    //! runtextmacro GetIconPathFromUnit("ErrantDeLombre", "ReplaceableTextures\\CommandButtons\\BTNShade.blp")
    //! runtextmacro GetIconPathFromUnit("ExpiateurDeMagie", "ReplaceableTextures\\CommandButtons\\BTNGuldan.blp")
    //! runtextmacro GetIconPathFromUnit("GardienDeLaTerre", "ReplaceableTextures\\CommandButtons\\BTNRockGolem.blp")
    //! runtextmacro GetIconPathFromUnit("HerautDeLaPaix", "ReplaceableTextures\\CommandButtons\\BTNHeroPaladin.blp")
    //! runtextmacro GetIconPathFromUnit("Incinerateur", "ReplaceableTextures\\CommandButtons\\BTNHeroAvatarOfFlame.blp")
    //! runtextmacro GetIconPathFromUnit("Justicier", "ReplaceableTextures\\CommandButtons\\BTNArthas.blp")
    //! runtextmacro GetIconPathFromUnit("MageDesElements", "ReplaceableTextures\\CommandButtons\\BTNJaina.blp")
    //! runtextmacro GetIconPathFromUnit("MarcheurDeLhiver", "ReplaceableTextures\\CommandButtons\\BTNBlueMagnataur.blp")
    //! runtextmacro GetIconPathFromUnit("MarineDeLespace", "ReplaceableTextures\\CommandButtons\\BTNMarine.blp")
    //! runtextmacro GetIconPathFromUnit("Necromancien", "ReplaceableTextures\\CommandButtons\\BTNGhostOfKelThuzad.blp")
    //! runtextmacro GetIconPathFromUnit("PorteMort", "ReplaceableTextures\\CommandButtons\\BTNMannoroth.blp")
    //! runtextmacro GetIconPathFromUnit("PorteurDePeste", "ReplaceableTextures\\CommandButtons\\BTNLichVersion2.blp")
    //! runtextmacro GetIconPathFromUnit("PretreDeLespoir", "ReplaceableTextures\\CommandButtons\\BTNBanditMage.blp")
    //! runtextmacro GetIconPathFromUnit("SemeurDeSouffrances", "ReplaceableTextures\\CommandButtons\\BTNPowerLich.blp")
    //! runtextmacro GetIconPathFromUnit("SorcierRenegat", "ReplaceableTextures\\CommandButtons\\BTNMedivh.blp")
    //! runtextmacro GetIconPathFromUnit("TisseurDeLiens", "ReplaceableTextures\\CommandButtons\\BTNHeroCryptLord.blp")
    //! runtextmacro GetIconPathFromUnit("TortionnaireFoudroyant", "ReplaceableTextures\\CommandButtons\\BTNIceCrownOverlord.blp")
    //! runtextmacro GetIconPathFromUnit("TunneleurDesVents", "ReplaceableTextures\\CommandButtons\\BTNDruidOfTheTalon.blp")
    //! runtextmacro GetIconPathFromUnit("Vampire", "ReplaceableTextures\\CommandButtons\\BTNBlueDemoness.blp")
    endif
    return null
endfunction

function FCercleDeChoix takes nothing returns boolean
    return GetUnitTypeId(GetFilterUnit())=='n00P'
endfunction
function PlayerIsPlayed takes nothing returns boolean
    return GetPlayerSlotState(GetFilterPlayer())==PLAYER_SLOT_STATE_PLAYING and (GetPlayerController(GetFilterPlayer())==MAP_CONTROL_USER or GetPlayerController(GetFilterPlayer())==MAP_CONTROL_COMPUTER)
endfunction

function EndChannelSpell takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local timer t = HTLoadTimerHandle(caster, ENDCHANNEL)
    local trigger trig = GetTriggeringTrigger()
    call HTSaveBoolean(t, ENDCHANNELSTOP, true)
    call TriggerRemoveAction(trig, HTLoadTriggerActionHandle(t, TRIGGERACTION))
    call HTRemoveSavedHandle(caster, ENDCHANNEL)
    call HTRemoveSavedHandle(t, TRIGGERACTION)
    call DestroyTrigger(trig)
    set trig = null
    set caster = null
endfunction
function EndChannelTrigger takes unit u, timer t, boolexpr filter returns nothing
    local trigger trig = CreateTrigger()
    call HTSaveTimerHandle(u, ENDCHANNEL, t)
    call HTSaveTriggerActionHandle(t, TRIGGERACTION, TriggerAddAction(trig, function EndChannelSpell))
    call TriggerRegisterUnitEvent(trig, u, EVENT_UNIT_SPELL_ENDCAST)
    call TriggerAddCondition(trig, filter)
    set trig = null
endfunction

function RemoveAbilityBuffAfterTimeEnd takes nothing returns nothing
    local timer t = GetExpiredTimer()
    call UnitRemoveAbility(HTLoadUnitHandle(t, CASTER), HTLoadInteger(t, INTEGER))
    call UnitRemoveAbility(HTLoadUnitHandle(t, CASTER), HTLoadInteger(t, INTEGER2))
    call CleanTimer(t)
endfunction
function RemoveAbilityBuffAfterTime takes unit caster, integer abilid, integer buffid, real dur returns nothing
    local timer t=NewTimer()
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveInteger(t, INTEGER, abilid)
    call HTSaveInteger(t, INTEGER2, buffid)
    call TimerStart(t, dur, false, function RemoveAbilityBuffAfterTimeEnd)
endfunction

function CUncontrolTargetTrigger takes nothing returns boolean
    local boolean b = false
    if(GetIssuedOrderId()!=OrderId("detonate")) then
        if(GetUnitAbilityLevel(GetTriggerUnit(), 'B01V')>0) then
            set b = true
        elseif(GetUnitAbilityLevel(GetTriggerUnit(), 'B01O')>0) then
            set b = true
        endif
    endif
    return b
endfunction
function AUncontrolTargetTrigger takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local real angle = GetRandomReal(0., 360.)
    call DisableTrigger(GetTriggeringTrigger())
    if(IsUnitStunned(u)==false) then
        call IssuePointOrder(u, "move", PolarX(GetUnitX(u), 500., angle), PolarY(GetUnitY(u), 500., angle))
    endif
    set u = null
    call EnableTrigger(GetTriggeringTrigger())
endfunction
function UncontrolTargetInit takes nothing returns nothing
    local trigger trig = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_ISSUED_ORDER)
    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER)
    call TriggerRegisterAnyUnitEventBJ(trig, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(trig, Condition(function CUncontrolTargetTrigger))
    call TriggerAddAction(trig, function AUncontrolTargetTrigger)
    set trig = null
endfunction

function DefineUnitGroup takes group g, real x, real y, real range, player owner, boolean forces, integer limit returns nothing
    local group final = NewGroup()
    local group filt = NewGroup()
    local group whichGroup = null
    local unit u = null
    if(forces) then
        set whichGroup = GetEnnemiesInRange(owner, x, y, range, 0)
    else
        set whichGroup = GetAlliesInRange(owner, x, y, range, 0)
    endif
    call GroupRemoveStructures(whichGroup)
    call GroupRemoveUnitsOfPlayer(whichGroup, GetPlayer(15))
    call GroupRemoveUnitsOfType(whichGroup, 'e002')
// Filtrage pour passer les héros en priorité
    call GroupAddGroup(whichGroup, filt)
    call GroupKeepHeroes(filt)
    loop
        set u = FirstOfGroup(filt)
        exitwhen u==null
        call GroupRemoveUnit(filt,u)
        if(CountUnitsInGroup(final)<limit) then
            call GroupRemoveUnit(whichGroup,u)
            call GroupAddUnit(final,u)
        endif
    endloop
    call GroupClear(filt)
// Filtrage pour ensuite prendre les unités avec le moins de vie
    call GroupAddGroup(whichGroup, filt)
    call GroupRemoveHeroes(filt)
    loop
        set u = GetWoundestUnitOfGroup(filt)
        exitwhen u==null
        call GroupRemoveUnit(filt,u)
        if(CountUnitsInGroup(final)<limit) then
            call GroupRemoveUnit(whichGroup, u)
            call GroupAddUnit(final,u)
        endif
    endloop
    call GroupAddGroup(final, g)
    call DeleteGroup(whichGroup)
    call DeleteGroup(filt)
    call DeleteGroup(final)
    set u = null
endfunction

function BubbleTargetTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, UNIT)
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = HTLoadGroupHandle(t, GROUP)
    local group temp = NewGroup()
    local integer i = HTLoadInteger(t, INDEX)
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)
    if(GetUnitState(caster, UNIT_STATE_LIFE)<=0) then
        set i = 0
    endif
    if(i<=0) then
        call CleanTimer(t)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            call KillUnit(u)
            call RemoveUnit(u)
        endloop
        call DeleteGroup(g)
    else
        set u = CreateUnit(p, 'n024', x, y, GetUnitFacing(caster))
        call UnitApplyTimedLife(u, 'BTLF', 1.5)
        call SetUnitUserData(u, 255)
        call AddSpecialEffectTarget(GetModelPathFromUnit(caster), u, "chest")
        call GroupAddUnit(g, u)
        call GroupAddGroup(g, temp)
        loop
            set u = FirstOfGroup(temp)
            exitwhen u==null
            call GroupRemoveUnit(temp, u)
            call SetUnitUserData(u, GetUnitUserData(u)-40)
            if(GetUnitUserData(u)<0) then
                call GroupRemoveUnit(g, u)
                call RemoveUnit(u)
            else
                call SetUnitVertexColor(u, 255, 255, 255, GetUnitUserData(u))
            endif
        endloop
        call HTSaveGroupHandle(t, GROUP, g)
        call HTSaveInteger(t, INDEX, i-1)
    endif
    call DeleteGroup(temp)
    set p = null
    set u = null
    set caster = null
endfunction
function BubbleTarget takes unit u, real duration returns nothing
    local timer t = null
    if(GetUnitState(u, UNIT_STATE_LIFE)>0) then
        set t = NewTimer()
        call HTSaveUnitHandle(t, UNIT, u)
        call HTSaveGroupHandle(t, GROUP, NewGroup())
        call HTSaveInteger(t, INDEX, 10)
        call TimerStart(t, duration*0.1, true, function BubbleTargetTick)
    endif
endfunction

function VertexColorTargetTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local integer i = HTLoadInteger(t, INDEX)
    local unit target = HTLoadUnitHandle(t, TARGET)
    if(GetUnitState(target, UNIT_STATE_LIFE)<=0) then
        set i = 0
    endif
    if(i<=0) then
        call SetUnitVertexColor(target, 255, 255, 255, 255)
        call CleanTimer(t)
    else
        call HTSaveInteger(t, INDEX, i-1)
    endif
    set target = null
endfunction
function VertexColorTarget takes unit target, real duration, integer alpha returns nothing
    local timer t = null
    if(GetUnitState(target, UNIT_STATE_LIFE)>0) then
        set t = NewTimer()
        call SetUnitVertexColor(target, 255, 255, 255, alpha)
        call HTSaveInteger(t, INDEX, 5)
        call HTSaveUnitHandle(t, TARGET, target)
        call TimerStart(t, duration*0.2, true, function VertexColorTargetTick)
    endif
endfunction

function ChangeTargetHeightOverTimeTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit target = HTLoadUnitHandle(t, TARGET)
    local integer i = HTLoadInteger(t, INDEX)
    local real height = HTLoadReal(t, REAL1)
    if(GetUnitState(target, UNIT_STATE_LIFE)<=0) then
        set i = -5
    endif
    if(i<=-5) then
        call SetUnitFlyHeight(target, GetUnitDefaultFlyHeight(target), 200.00)
        call CleanTimer(t)
    elseif(i>0) then
        call SetUnitFlyHeight(target, GetUnitFlyHeight(target) + (height*0.20), 500.00)
        call HTSaveInteger(t, INDEX, i-1)
    else
        call SetUnitFlyHeight(target, GetUnitFlyHeight(target) - (height*0.20), 500.00)
        call HTSaveInteger(t, INDEX, i-1)
    endif
    set target = null
endfunction
function ChangeTargetHeightOverTime takes unit target, real duration, real height returns nothing
    local timer t = null
    if(GetUnitState(target, UNIT_STATE_LIFE)>0) then
        set t = NewTimer()
        call UnitAddAbility(target, 'Arav')
        call UnitRemoveAbility(target, 'Arav')
        call HTSaveInteger(t, INDEX, 5)
        call HTSaveUnitHandle(t, TARGET, target)
        call HTSaveReal(t, REAL1, height)
        call TimerStart(t, duration*0.1, true, function ChangeTargetHeightOverTimeTick)
    endif
endfunction

function IncreaseAttachedValueForTimeEnd takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local integer value = HTLoadInteger(t, INDEX)
    if(caster != null and HTHaveSavedInteger(caster, value)) then
        call HTSaveInteger(caster, value, HTLoadInteger(caster, value)-1)
        if(HTLoadInteger(caster, value) < 1) then
            call HTRemoveSavedInteger(caster, value)
        endif
    endif
    call CleanTimer(t)
    set caster = null
endfunction
function IncreaseAttachedValueForTime takes unit caster, integer value, real duration returns nothing
    local timer t = NewTimer()
    call HTSaveInteger(t, INDEX, value)
    call HTSaveUnitHandle(t, CASTER, caster)
    if(HTHaveSavedInteger(caster, value)) then
        call HTSaveInteger(caster, value, HTLoadInteger(caster, value)+1)
    else
        call HTSaveInteger(caster, value, 1)
    endif
    call TimerStart(t, duration, true, function IncreaseAttachedValueForTimeEnd)
endfunction//===========================================================================
// Trigger: CC functions
//
// GetCrowdControlDuration(unit u, real duration) > real
// SlowTarget(unit u, real duration)
// MortalStrikeTarget()
// DisarmTarget()
// BlindTarget()
// ImmuneTarget()
// FearTarget()
// DisorientTarget()
// StunTarget()
// MuteTarget()
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function GetCrowdControlFactor takes unit target, integer cc returns real
    local real factor = 1.
    if(IsUnitHero(target)) then
        set factor = factor - I2R(GetHeroInt(target, true)) * INT_DIMINISHING_RETURNS_REDUCTION
        if(cc > -1) then
            if(HTHaveSavedInteger(target, cc)) then
                set factor = factor - I2R(HTLoadInteger(target, cc)) * CC_DIMINISHING_RETURNS_REDUCTION
            endif
            
            if(UnitHasItemOfType(target, 'I028')) then // Anneau de l'éternel
                set factor = factor - 0.4
            elseif((cc == CCMUTE or cc == CCSTUN) and UnitHasItemOfType(target, 'I02G')) then
                set factor = factor - 0.5
            elseif((cc == CCDISORIENT or cc == CCFEAR) and UnitHasItemOfType(target, 'I02I')) then
                set factor = factor - 0.5
            elseif((cc == CCBLIND or cc == CCDISARM or cc == CCMS) and UnitHasItemOfType(target, 'I02F')) then
                set factor = factor - 0.5
            endif
        endif
    endif
    return factor
endfunction

function GetCrowdControlDuration takes unit target, real dur, integer cc returns real
    local real factor = GetCrowdControlFactor(target, cc)
    local real duration = dur
    if(factor < 0.) then
        set duration = -1.
    else
        set duration = factor * duration
        if(IsUnitHero(target) and cc > -1) then
            call IncreaseAttachedValueForTime(target, cc, CC_DIMINISHING_RETURNS_DURATION)
        endif
    endif
    return duration
endfunction

function SlowTarget takes unit target, real dur returns nothing
    local unit u = null
    local real duration = GetCrowdControlDuration(target, dur, CCSLOW)
    if(GetUnitState(target, UNIT_STATE_LIFE)>0 and duration > 0.) then
        set u = CreateUnit(GetPlayer(12), 'e002', GetUnitX(target), GetUnitY(target), 0.)
        call UnitApplyTimedLife(u, 'BTLF', 0.8)
        call UnitAddAbility(u, 'A035')
        call SetUnitAbilityLevel(u, 'A035', R2I(duration*10))
        call IssueTargetOrder(u, "slow", target)
    endif
    set u = null
endfunction

function MortalStrikeTarget takes unit target, real dur returns nothing
    local real duration = GetCrowdControlDuration(target, dur, CCMS)
    if(GetUnitState(target, UNIT_STATE_LIFE)>0 and duration > 0.) then
        call AddAbilityTimed(target, duration, 'A07X')
    endif
endfunction

function DisarmTarget takes unit target, real dur returns nothing
    local unit u = null
    local real duration = GetCrowdControlDuration(target, dur, CCDISARM)
    if(GetUnitState(target, UNIT_STATE_LIFE)>0 and duration > 0.) then
        set u = CreateUnit(GetPlayer(12), 'e002', GetUnitX(target), GetUnitY(target), 0.0)
        call UnitApplyTimedLife(u, 'BTLF', 0.8)
        call UnitAddAbility(u, 'A07D')
        call SetUnitAbilityLevel(u, 'A07D', R2I(duration*10))
        call IssueTargetOrder(u, "drunkenhaze", target)
    endif
    set u = null
endfunction

function BlindTarget takes unit target, real dur returns nothing
    local real duration = GetCrowdControlDuration(target, dur, CCBLIND)
    if(GetUnitState(target, UNIT_STATE_LIFE)>0 and duration > 0.) then
        call AddAbilityTimed(target, duration, 'A070')
        if(GetLocal()==GetOwningPlayer(target)) then
            call SetCineFilterDuration(duration)
            call DisplayCineFilter(true)
        endif
    endif
endfunction
function BlindInit takes nothing returns nothing
    call SetCineFilterTexture("ReplaceableTextures\\CameraMasks\\Black_mask.blp")
    call SetCineFilterBlendMode(BLEND_MODE_BLEND)
    call SetCineFilterTexMapFlags(TEXMAP_FLAG_NONE)
    call SetCineFilterStartUV(0, 0, 1, 1)
    call SetCineFilterEndUV(0, 0, 1, 1)
    call SetCineFilterStartColor(255, 255, 255, 255)
    call SetCineFilterEndColor(255, 255, 255, 0)
endfunction

function ImmuneTarget takes unit target, real duration returns nothing
    set duration = GetCrowdControlDuration(target, duration, -1)
    if(GetUnitState(target, UNIT_STATE_LIFE) > 0) then
        call AddAbilityTimed(target, duration, 'A07U')
    endif
endfunction

function FearTarget takes unit target, real dur returns nothing
    local unit u = null
    local real angle = GetRandomReal(0., 360.)
    local real duration = GetCrowdControlDuration(target, dur, CCFEAR)
    if(GetUnitState(target, UNIT_STATE_LIFE)>0 and duration > 0.) then
        set u = CreateUnit(GetPlayer(12), 'e002', GetUnitX(target), GetUnitY(target), 0.)
        call UnitApplyTimedLife(u, 'BTLF', 0.8)
        call UnitAddAbility(u, 'A04N')
        call SetUnitAbilityLevel(u, 'A04N', R2I(duration*10))
        call IssueTargetOrder(u, "cripple", target)
        call IssuePointOrder(target, "move", PolarX(GetUnitX(target), 600., angle), PolarY(GetUnitY(target), 600., angle))
    endif
    set u = null
endfunction

function DisorientTarget takes unit target, real dur returns nothing
    local unit u = null
    local real angle = GetRandomReal(0., 360.)
    local real duration = GetCrowdControlDuration(target, dur, CCDISORIENT)
    if(GetUnitState(target, UNIT_STATE_LIFE)>0 and duration > 0.) then
        set u = CreateUnit(GetPlayer(12), 'e002', GetUnitX(target), GetUnitY(target), 0.)
        call UnitApplyTimedLife(u, 'BTLF', 0.8)
        call UnitAddAbility(u, 'A07Y')
        call SetUnitAbilityLevel(u, 'A07Y', R2I(duration*10))
        call IssueTargetOrder(u, "parasite", target)
        call IssuePointOrder(target, "move", PolarX(GetUnitX(target), 600., angle), PolarY(GetUnitY(target), 600., angle))
    endif
    set u = null
endfunction

function StunTarget takes unit target, real dur returns nothing
    local unit u = null
    local real duration = GetCrowdControlDuration(target, dur, CCSTUN)
    if(GetUnitState(target, UNIT_STATE_LIFE)>0 and duration > 0.) then
        set u = CreateUnit(GetPlayer(12), 'e002', GetUnitX(target), GetUnitY(target), 0.)
        call UnitApplyTimedLife(u, 'BTLF', 0.8)
        call UnitAddAbility(u, 'A07C')
        call SetUnitAbilityLevel(u, 'A07C', R2I(duration*10))
        call IssueTargetOrder(u, "firebolt", target)
    endif
    set u = null
endfunction

function MuteTarget takes unit target, real dur returns nothing
    local unit u = null
    local real duration = GetCrowdControlDuration(target, dur, CCMUTE)
    if(GetUnitState(target, UNIT_STATE_LIFE)>0 and duration > 0.) then
        set u = CreateUnit(GetPlayer(12), 'e002', GetUnitX(target), GetUnitY(target), 0.)
        call UnitApplyTimedLife(u, 'BTLF', 0.8)
        call UnitAddAbility(u, 'A02S')
        call SetUnitAbilityLevel(u, 'A02S', R2I(duration*10))
        call IssueTargetOrder(u, "soulburn", target)
    endif
    set u = null
endfunction

function InitTrig_CC_functions takes nothing returns nothing
    call BlindInit()
endfunction//===========================================================================
// Trigger: Damage functions
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function GetSpellDamageFactor takes unit caster, unit target, integer abilid returns real
    local real result = 1.
    local real TarInt = I2R(GetHeroInt(target, true))
    local real DecFac = 0.02
    if(IsUnitAlly(target, GetOwningPlayer(caster)) == true) then // Si la cible est alliée
        set result = -1. * result
        if(GetUnitAbilityLevel(target, 'A07X')>0) then // Frappe mortelle
            set result = result * 0.25
        endif
        if(GetUnitAbilityLevel(caster, udg_Buff_forcedelespoir) > 0) then
            set result = result * (1. + R2I(I2R(GetHeroAgi(caster, true)/5))*0.01)
        endif
        if(GetUnitAbilityLevel(caster, udg_Buff_refluxdessens) > 0) then
            set result = result * 1.2
        endif
        
        if(GetUnitAbilityLevel(target, udg_Buff_refluxdessens) > 0) then
            set result = result * 1.2
        elseif(GetUnitAbilityLevel(target, udg_Buff_presenceprotectrice) > 0) then
            set result = result * 1.15
        elseif(GetUnitAbilityLevel(target, udg_Buff_renouveau) > 0) then
            set result = result * 1.15
        elseif(GetUnitAbilityLevel(target, udg_Buff_ragedeguerre) > 0) then
            set result = result * 1.15
        endif
        
        if(UnitHasItemOfType(caster, 'I01F')) then // Mitaines reposantes
            set result = result * 1.25
        elseif(UnitHasItemOfType(caster, 'I024')) then // Main du démon
            set result = result * 1.25
        endif
    else                                                          // Sinon
        set result = result * (1.-((DecFac*TarInt)/(1+DecFac*TarInt)))
        
        if(GetUnitTypeId(caster)=='N00N') then // Sang de vampire
            if(GetFloatGameState(GAME_STATE_TIME_OF_DAY) <= 6.) then
                set result = result * 1.2
            elseif(GetFloatGameState(GAME_STATE_TIME_OF_DAY) > 18.) then
                set result = result * 1.2
            else
                set result = result * 0.9
            endif
        endif
        
        if(GetUnitAbilityLevel(target, udg_Buff_runederesilience)>0) then
            set result = result * 0.1
        endif
        if(GetUnitAbilityLevel(caster, udg_Buff_ensembledumaleficieur) > 0) then
            set result = result * 0.8
        endif

        if(GetUnitAbilityLevel(target, udg_Buff_runedeferocite) > 0) then
            set result = result * 0.85
        elseif(GetUnitAbilityLevel(target, udg_Buff_renouveau) > 0) then
            set result = result * 0.85
        elseif(GetUnitAbilityLevel(target, udg_Buff_totemdepuissance) > 0) then
            set result = result * 0.85
        endif

        if(GetUnitAbilityLevel(target, udg_Buff_poison1) > 0) then
            set result = result * 1.1
        elseif(GetUnitAbilityLevel(target, udg_Buff_poison2) > 0) then
            set result = result * 1.1
        elseif(GetUnitAbilityLevel(target, udg_Buff_cridebataille) > 0) then
            set result = result * 1.1
        elseif(GetUnitAbilityLevel(target, udg_Buff_rets) > 0) then
            set result = result * 1.1
        elseif(GetUnitAbilityLevel(target, udg_Buff_distorsiontemporelle)>0) then
            set result = result * 1.1
        endif

        if(GetUnitAbilityLevel(caster, udg_Buff_peurdeladouleur) > 0) then
            set result = result * 1.1
        endif
        
        if(GetUnitAbilityLevel(caster, udg_Buff_ragetemeraire) > 0) then
            set result = result * 1.2
        elseif(GetUnitAbilityLevel(caster, udg_Buff_formedether) > 0) then
            set result = result * 1.2
        elseif(GetUnitAbilityLevel(caster, udg_Buff_runedemaintien) > 0) then
            set result = result * 1.1
        endif
    endif
    if(GetUnitAbilityLevel(caster, udg_Buff_runedesauvagerie) > 0) then
        set result = result * 1.5
    endif
    if(GetUnitAbilityLevel(caster, udg_Buff_forceinterieure) > 0) then
        if(GetUnitState(target, UNIT_STATE_LIFE)<GetUnitState(target, UNIT_STATE_MAX_LIFE)*0.25) then
            set result = result * 1.5
        endif
    endif
  //Gants
    if(UnitHasItemOfType(caster, 'I024')) then // Main du démon
        set result = result * 1.1
    elseif(UnitHasItemOfType(caster, 'I01G')) then // Paumelles runiques
        set result = result * 1.1
    endif

    if(abilid==DrakeDeLaGuerreStr) then // Charge : 20%
        set result = result * (1. + DistanceBetweenXY(GetUnitX(caster), GetUnitY(caster), GetUnitX(target), GetUnitY(target)) / 3000.)
    endif
    if(abilid==TunneleurDesVentsStr) then // Cyclone : 15%
        set result = result * (1. + (600. - DistanceBetweenXY(GetUnitX(caster), GetUnitY(caster), GetUnitX(target), GetUnitY(target))) / 4000.)
    endif
    if(abilid==TunneleurDesVentsInt and DistanceBetweenUnits(caster, target) < 160.) then
        set result = result * 1.1
    endif
    if(abilid==GardienDeLaTerreAgi and GetUnitState(target, UNIT_STATE_LIFE) < GetUnitState(target, UNIT_STATE_MAX_LIFE) * 0.25) then
        set result = result * 1.5
    endif
    return result
endfunction

function GetSpellDamage takes unit caster, unit target, integer abilid, integer stat returns real
    local real Damage = 0.
    if(stat==STAT_STR) then // Sort Force
        set Damage = I2R(GetUnitAbilityLevel(caster, abilid)*16) + I2R(GetHeroStr(caster, true))
        if(UnitHasItemOfType(caster, 'I00C')) then
            set Damage = Damage + 16.
        elseif(UnitHasItemOfType(caster, 'I011')) then
            set Damage = Damage + 32.
        elseif(UnitHasItemOfType(caster, 'I015')) then
            set Damage = Damage + 64.
        endif
        if(abilid==AssassinStr and IsUnitBehindTarget(caster, target)) then
            set Damage = Damage + (0.2*I2R(GetHeroStr(caster, true)))
        endif
    elseif(stat==STAT_INT) then // Sort Intelligence
        set Damage = I2R(GetUnitAbilityLevel(caster, abilid)*8) + I2R(GetHeroInt(caster, true))
        if(UnitHasItemOfType(caster, 'I00B')) then
            set Damage = Damage + 16.
        elseif(UnitHasItemOfType(caster, 'I013')) then
            set Damage = Damage + 32.
        elseif(UnitHasItemOfType(caster, 'I017')) then
            set Damage = Damage + 64.
        endif
    elseif(stat==STAT_AGI) then // Sort Agilité
        set Damage = I2R(GetHeroAgi(caster, true))
    elseif(stat==STAT_ULT) then // Sort Ultime
        set Damage = I2R(GetHeroStr(caster, true)+GetHeroInt(caster, true)+GetHeroAgi(caster, true))
    endif
    if(abilid==NecromancienUlt) then
        if(stat==STAT_STR) then
            set Damage = I2R(GetHeroStr(caster, true))*0.25
        elseif(stat==STAT_INT) then
            set Damage = I2R(GetHeroInt(caster, true))*0.25
        elseif(stat==STAT_AGI) then
            set Damage = I2R(GetHeroAgi(caster, true))*0.25
        endif
    endif
    if(abilid=='A01M') then // Errant de l'ombre - Aperçu de la mort
        set Damage = I2R(GetHeroStr(caster, true))*0.5
        if(GetUnitState(target, UNIT_STATE_LIFE) < GetUnitState(target, UNIT_STATE_MAX_LIFE) * 0.25) then
            set Damage = I2R(GetHeroAgi(caster, true))
        endif
    endif
    // Autre
    if(GetUnitAbilityLevel(caster, udg_Buff_auradepuissance) > 0) then
        set Damage = Damage + I2R(GetHeroLevel(caster)*3)
    endif

    if(Damage < 0.) then
        set Damage = 0.
    endif
    
    return Damage*GetSpellDamageFactor(caster, target, abilid)
endfunction

function SpellDamageTarget takes unit caster, unit target, real damage returns boolean
    return UnitDamageTarget(caster, target, damage, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC, WEAPON_TYPE_WHOKNOWS)
endfunction
function UltimateDamageTarget takes unit caster, unit target, real damage returns boolean
    return UnitDamageTarget(caster, target, damage, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
endfunction//===========================================================================
// Trigger: DoT functions
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function DoTTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit target = HTLoadUnitHandle(t, TARGET)
    local integer stat = HTLoadInteger(t, INTEGER1)
    local integer abilid = HTLoadInteger(t, INTEGER2)
    local integer i = HTLoadInteger(t, INDEX)
    local real factor = HTLoadReal(t, REAL)
    if(GetUnitState(target, UNIT_STATE_LIFE)<=0) then
        set i = 0
    endif
    if(i<=0) then
        call CleanTimer(t)
    else
        if(stat==STAT_ULT) then
            call UltimateDamageTarget(caster, target, GetSpellDamage(caster, target, abilid, stat)*factor)
        else
            call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, abilid, stat)*factor)
        endif
        call HTSaveInteger(t, INDEX, i-1)
    endif
    set target = null
    set caster = null
endfunction
function DoT takes unit caster, unit target, real tickinterval, integer tickcount, integer stat, integer abilid returns nothing
    local timer t = null
    if(target==null or tickcount<=0 or tickinterval<=0.) then
        return
    elseif(GetUnitState(target, UNIT_STATE_LIFE)<=0.) then
        return
    endif
    set t = NewTimer()
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveUnitHandle(t, TARGET, target)
    call HTSaveInteger(t, INDEX, tickcount)
    call HTSaveInteger(t, INTEGER1, stat)
    call HTSaveInteger(t, INTEGER2, abilid)
    call HTSaveReal(t, REAL, 1/I2R(tickcount))
    call TimerStart(t, tickinterval, true, function DoTTick)
endfunction

function DoTMatchingBuffTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit target = HTLoadUnitHandle(t, TARGET)
    local integer stat = HTLoadInteger(t, INTEGER1)
    local integer abilid = HTLoadInteger(t, INTEGER2)
    local integer buffid = HTLoadInteger(t, INTEGER3)
    local integer i = HTLoadInteger(t, INDEX)
    local real factor = HTLoadReal(t, REAL)
    if(GetUnitAbilityLevel(target, buffid)<=0) then
        set i = 0
    endif
    if(i<=0) then
        call CleanTimer(t)
    else
        if(stat==STAT_ULT) then
            call UltimateDamageTarget(caster, target, GetSpellDamage(caster, target, abilid, stat)*factor)
        else
            call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, abilid, stat)*factor)
        endif
        call HTSaveInteger(t, INDEX, i-1)
    endif
    set target = null
    set caster = null
endfunction
function DoTMatchingBuff takes unit caster, unit target, real tickinterval, integer tickcount, integer stat, integer abilid, integer buffid returns nothing
    local timer t = null
    if(target==null or tickcount<=0 or tickinterval<=0.) then
        return
    elseif(GetUnitState(target, UNIT_STATE_LIFE)<=0.) then
        return
    endif
    set t = NewTimer()
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveUnitHandle(t, TARGET, target)
    call HTSaveInteger(t, INDEX, tickcount)
    call HTSaveInteger(t, INTEGER1, stat)
    call HTSaveInteger(t, INTEGER2, abilid)
    call HTSaveInteger(t, INTEGER3, buffid)
    call HTSaveReal(t, REAL, 1/I2R(tickcount))
    call TimerStart(t, tickinterval, true, function DoTMatchingBuffTick)
endfunction//===========================================================================
// Trigger: Dispel
//
// DispelTarget(unit caster, unit target, boolean positive, boolean negative) > integer
// Require CC
//===========================================================================
//TESH.scrollpos=179
//TESH.alwaysfold=0
function DispelTarget takes unit caster, unit target, boolean positive, boolean negative returns integer
    local integer count=0
    
    if(GetUnitAbilityLevel(target, udg_Buff_vapeursattachantes) > 0) then
        return count
    endif
    
    call CreateEffectTimed(target, "Abilities\\Spells\\Human\\DispelMagic\\DispelMagicTarget.mdl", "origin", 0.)
    if(positive) then
        if(IsUnitImmune(target)) then
            if(HTHaveSavedHandle(target, 'A07U')) then
                set count=count+1
                call HTSaveInteger(HTLoadTimerHandle(target, 'A07U'), INDEX, 0)
            endif
            call UnitRemoveAbility(target, 'A07U')
        endif
        if(UnitRemoveAbility(target, udg_Buff_adrenaline)) then
            set count=count+1
            call RemoveDurationBar(target)
        endif
        if(UnitRemoveAbility(target, 'B00B')) then // Armure des flôts
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Buff_bouclierdemana)) then
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Buff_cheminardent)) then
            set count=count+1
            call RemoveDurationBar(target)
        endif
        if(UnitRemoveAbility(target, udg_Buff_coeurdegivreflammes)) then
            set count=count+1
        endif
        if(UnitRemoveAbility(target, 'B00G')) then // Contact planaire
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Buff_explosiondejustice)) then
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Buff_failletemporelle)) then
            set count=count+1
            call RemoveDurationBar(target)
        endif
        if(UnitRemoveAbility(target, udg_Buff_fanatisme)) then
            set count=count+1
            call RemoveDurationBar(target)
        endif
        if(UnitRemoveAbility(target, udg_Buff_fleurdelame)) then
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Buff_forcedelespoir)) then
            set count=count+1
            call RemoveDurationBar(target)
        endif
        if(UnitRemoveAbility(target, 'B01T')) then // Invisibilité
            set count=count+1
        endif
        if(UnitRemoveAbility(target, 'B01C')) then // Lames de vent
            set count=count+1
            call RemoveDurationBar(target)
        endif
        if(UnitRemoveAbility(target, udg_Buff_nuagedesang)) then
            set count=count+1
            call RemoveDurationBar(target)
        endif
        if(UnitRemoveAbility(target, udg_Buff_peurdeladouleur)) then
            set count=count+1
            call RemoveDurationBar(target)
        endif
        if(UnitRemoveAbility(target, udg_Buff_presenceprotectrice)) then
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Buff_protectionstatique)) then
            set count=count+1
            call RemoveDurationBar(target)
        endif
        if(UnitRemoveAbility(target, udg_Buff_ragedeguerre)) then
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Buff_ragetemeraire)) then
            set count=count+1
            call RemoveDurationBar(target)
        endif
        if(UnitRemoveAbility(target, udg_Buff_refluxdessens)) then
            set count=count+1
            call RemoveDurationBar(target)
        endif
        if(UnitRemoveAbility(target, udg_Buff_renouveau)) then
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Buff_vigueurnouvelle)) then
            set count=count+1
        endif
    endif
    if(negative) then
        if(IsUnitTakenHealsReduced(target)) then
            if(HTHaveSavedHandle(target, 'A07X')) then
                set count=count+1
                call HTSaveInteger(HTLoadTimerHandle(target, 'A07X'), INDEX, 0)
            endif
            call UnitRemoveAbility(target, 'A07X')
        endif
        if(IsUnitBlinded(target)) then
            if(HTHaveSavedHandle(target, 'A070')) then
                set count=count+1
                call HTSaveInteger(HTLoadTimerHandle(target, 'A070'), INDEX, 0)
            endif
            call UnitRemoveAbility(target, 'A070')
        endif
        if(UnitRemoveAbility(target, 'B01N')) then // Disarm
            set count=count+1
        endif
        if(UnitRemoveAbility(target, 'B00H')) then // Slow
            set count=count+1
        endif
        if(UnitRemoveAbility(target, 'B01O')) then // Fear
            set count=count+1
        endif
        if(UnitRemoveAbility(target, 'B01V')) then // Disorient
            set count=count+1
        endif
        if(UnitRemoveAbility(target, 'B00R')) then // Mute
            set count=count+1
        endif
        if(UnitRemoveAbility(target, 'BPSE')) then // Stun
            set count=count+1
        endif

        if(UnitRemoveAbility(target, 'B00G')) then // Contact planaire
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Buff_cridebataille)) then
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Buff_explosiondejustice)) then
            set count=count+1
        endif
        if(UnitRemoveAbility(target, 'B00W')) then // Filet électrifié
            set count=count+1
        endif
        if(UnitRemoveAbility(target, 'B00U')) then // Filet électrifié
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Buff_liendesouffrance)) then
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Buff_maindemort)) then
            set count=count+1
        endif
        if(UnitRemoveAbility(target, 'A08A')) then // Main de mort
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Buff_novadefeu)) then
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Buff_novadegel)) then
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Buff_poison1)) then
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Buff_poison2)) then
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Buff_rets)) then
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Buff_sombreconstriction)) then
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Abil_maladiesvirulentes)) then
            call UnitRemoveAbility(target, udg_Buff_maladiesvirulentes)
            set count=count+1
            
            call MuteTarget(caster, 5.)
        endif
        if(UnitRemoveAbility(target, udg_Abil_afflictionpandemique) or UnitRemoveAbility(target, udg_Buff_afflictionpandemique)) then
            call UnitRemoveAbility(target, udg_Buff_afflictionpandemique)
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Abil_plaiesinfectieuses) or UnitRemoveAbility(target, udg_Buff_plaiesinfectieuses)) then
            call UnitRemoveAbility(target, udg_Buff_plaiesinfectieuses)
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Abil_incubation) or UnitRemoveAbility(target, udg_Buff_incubation)) then
            call UnitRemoveAbility(target, udg_Buff_incubation)
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Abil_corruptionmentale) or UnitRemoveAbility(target, udg_Buff_corruptionmentale)) then
            call UnitRemoveAbility(target, udg_Buff_corruptionmentale)
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Abil_pestedevorante) or UnitRemoveAbility(target, udg_Buff_pestedevorante)) then
            call UnitRemoveAbility(target, udg_Buff_pestedevorante)
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Abil_peurdeladouleur) or UnitRemoveAbility(target, udg_Buff_peurdeladouleur)) then
            call UnitRemoveAbility(target, udg_Buff_peurdeladouleur)
            set count=count+1
        endif
        if(UnitRemoveAbility(target, udg_Abil_rituelvampirique) or UnitRemoveAbility(target, udg_Buff_rituelvampirique)) then
            call UnitRemoveAbility(target, udg_Buff_rituelvampirique)
            set count=count+1
        endif
    endif
    return count
endfunction//===========================================================================
// Trigger: CombatState
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function CombatState takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local integer i = HTLoadInteger(t, INTEGER)
    local real tick = GetRandomReal(2., 2.5)
    local real PerLife = 0.05
    local real PerMana = 0.05
    if(udg_Hero[i]==null) then
        set t = null
        return
    endif
    if(IsNearbyEnemyOfUnit(udg_Hero[i], 900.) or IsNearbyEnemyHeroOfUnit(udg_Hero[i], 1250.)) then
        if(udg_CombatState[i]==false) then
            call CombatText("action", 10, udg_Hero[i], 100., 100., 50., 135., 225.)
        endif
        set udg_CombatState[i] = true
        set PerLife = 0.
        set PerMana = 0.
        if(GetUnitState(udg_Hero[i], UNIT_STATE_LIFE)>0.) then
            if(UnitHasItemOfType(udg_Hero[i], 'I02C')) then // Anneau de vigueur
                set PerLife = PerLife + 0.01
            endif
            if(UnitHasItemOfType(udg_Hero[i], 'I02D')) then // Anneau de sagacité
                set PerMana = PerMana + 0.01
            endif
            
            if(UnitHasItemOfType(udg_Hero[i], 'I01K')) then // Pavois du persévérant
                set PerLife = PerLife + 0.01
                set PerMana = PerMana + 0.01
            elseif(UnitHasItemOfType(udg_Hero[i], 'I025')) then // Mur du démon
                set PerLife = PerLife + 0.01
                set PerMana = PerMana + 0.01
            endif
            
            if(PerLife > 0.) then
                call SetUnitState(udg_Hero[i], UNIT_STATE_LIFE, GetUnitState(udg_Hero[i], UNIT_STATE_LIFE)+GetUnitState(udg_Hero[i], UNIT_STATE_MAX_LIFE)*PerLife)
            endif
            if(PerMana > 0.) then
                call SetUnitState(udg_Hero[i], UNIT_STATE_MANA, GetUnitState(udg_Hero[i], UNIT_STATE_MANA)+GetUnitState(udg_Hero[i], UNIT_STATE_MAX_MANA)*PerMana)
            endif
        endif
    else
        if(udg_CombatState[i]==true) then
            if(GetUnitState(udg_Hero[i], UNIT_STATE_LIFE)>0.) then
                call CombatText("repos", 10, udg_Hero[i], 100., 100., 50., 135., 225.)
            endif
        else
            if(GetUnitState(udg_Hero[i], UNIT_STATE_LIFE)>0.) then
                if(UnitHasItemOfType(udg_Hero[i], 'I02K')) then // Anneau de bien-être
                    set PerLife = 0.07
                endif
                if(UnitHasItemOfType(udg_Hero[i], 'I02B')) then // Anneau d'aisance
                    set PerMana = 0.07
                endif
                call SetUnitState(udg_Hero[i], UNIT_STATE_LIFE, GetUnitState(udg_Hero[i], UNIT_STATE_LIFE)+GetUnitState(udg_Hero[i], UNIT_STATE_MAX_LIFE)*PerLife)
                call SetUnitState(udg_Hero[i], UNIT_STATE_MANA, GetUnitState(udg_Hero[i], UNIT_STATE_MANA)+GetUnitState(udg_Hero[i], UNIT_STATE_MAX_MANA)*PerMana)
            endif
        endif
        set udg_CombatState[i] = false
    endif
    call PauseTimer(t)
    call TimerStart(t, tick, false, function CombatState)
endfunction

function StartCombatState takes unit u returns nothing
    local timer t = NewTimer()
    call HTSaveTimerHandle(u, COMBATSTATE, t)
    call HTSaveInteger(t, INTEGER, GetPlayerId(GetOwningPlayer(u)))
    call TimerStart(t, GetRandomReal(2., 4.), false, function CombatState)
endfunction

function StopCombatState takes unit u returns nothing
    local timer t = HTLoadTimerHandle(u, COMBATSTATE)
    local integer i = HTLoadInteger(t, INTEGER)
    call HTRemoveSavedHandle(u, COMBATSTATE)
    call CleanTimer(t)
    set udg_CombatState[i]=false
endfunction//===========================================================================
// Trigger: AI
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function AIGetNearbyEnemy takes unit u, real range returns unit
    local group g = null
    set bj_lastCreatedUnit = GetWoundestEnemyHeroInRangeOfUnit(u, range)
    if(bj_lastCreatedUnit==null) then
        set g = GetEnnemiesInRangeOfUnit(u, range, 0)
        call GroupRemoveStructures(g)
        call GroupRemoveHeroes(g)
        call GroupRemoveUnitsOfPlayer(g, GetPlayer(12))
        call GroupRemoveUnitsOfPlayer(g, GetPlayer(15))
        call GroupRemoveUnitsOfType(g, 'e002')
        set bj_lastCreatedUnit = GetWoundestUnitOfGroup(g)
        call DeleteGroup(g)
    endif
    return bj_lastCreatedUnit
endfunction
function AIGetNearbyAlly takes unit u, real range returns unit
    local group g = null
    set bj_lastCreatedUnit = GetWoundestAllyHeroInRangeOfUnit(u, range)
    if(bj_lastCreatedUnit==null) then
        set g = GetAlliesInRangeOfUnit(u, range, 0)
        call GroupRemoveStructures(g)
        call GroupRemoveHeroes(g)
        call GroupRemoveUnitsOfPlayer(g, GetPlayer(12))
        call GroupRemoveUnitsOfPlayer(g, GetPlayer(15))
        call GroupRemoveUnitsOfType(g, 'e002')
        set bj_lastCreatedUnit = GetWoundestUnitOfGroup(g)
        call DeleteGroup(g)
    endif
    return bj_lastCreatedUnit
endfunction
function AIGetNearbyAllyUnit takes player p, real x, real y, real range returns unit
    local group g = GetAlliesInRange(p, x, y, range, 0)
    call GroupRemoveStructures(g)
    call GroupRemoveHeroes(g)
    call GroupRemoveUnitsOfPlayer(g, GetPlayer(12))
    call GroupRemoveUnitsOfPlayer(g, GetPlayer(15))
    call GroupRemoveUnitsOfType(g, 'e002')
    set bj_lastCreatedUnit = GetNearestUnitOfGroup(g, x, y)
    call DeleteGroup(g)
    return bj_lastCreatedUnit
endfunction

function GetHeroSpellId takes unit u, integer stat returns integer
    //! textmacro GetHeroSpellId takes NAME
    elseif(GetUnitTypeId(u)==$NAME$ID) then
        if(stat==STAT_STR) then
            return $NAME$Str
        elseif(stat==STAT_INT) then
            return $NAME$Int
        elseif(stat==STAT_AGI) then
            return $NAME$Agi
        elseif(stat==STAT_ULT) then
            return $NAME$Ult
        endif
    //! endtextmacro
    
    if(GetUnitTypeId(u)==ArchidruideID) then
        if(stat==STAT_STR) then
            return ArchidruideStr
        elseif(stat==STAT_INT) then
            return ArchidruideInt
        elseif(stat==STAT_AGI) then
            return ArchidruideAgi
        elseif(stat==STAT_ULT) then
            return ArchidruideUlt
        endif
    //! runtextmacro GetHeroSpellId("Assassin")
    //! runtextmacro GetHeroSpellId("Barbare")
    //! runtextmacro GetHeroSpellId("Chaman")
    //! runtextmacro GetHeroSpellId("ChasseuseCrepusculaire")
    //! runtextmacro GetHeroSpellId("ChevalierNoir")
    //! runtextmacro GetHeroSpellId("DiscipleDuTemps")
    //! runtextmacro GetHeroSpellId("DrakeDeLaGuerre")
    //! runtextmacro GetHeroSpellId("ErrantDeLombre")
    //! runtextmacro GetHeroSpellId("ExpiateurDeMagie")
    //! runtextmacro GetHeroSpellId("GardienDeLaTerre")
    //! runtextmacro GetHeroSpellId("HerautDeLaPaix")
    //! runtextmacro GetHeroSpellId("Incinerateur")
    //! runtextmacro GetHeroSpellId("Justicier")
    //! runtextmacro GetHeroSpellId("MageDesElements")
    //! runtextmacro GetHeroSpellId("MarcheurDeLhiver")
    //! runtextmacro GetHeroSpellId("MarineDeLespace")
    //! runtextmacro GetHeroSpellId("Necromancien")
    //! runtextmacro GetHeroSpellId("PorteMort")
    //! runtextmacro GetHeroSpellId("PorteurDePeste")
    //! runtextmacro GetHeroSpellId("PretreDeLespoir")
    //! runtextmacro GetHeroSpellId("SemeurDeSouffrances")
    //! runtextmacro GetHeroSpellId("SorcierRenegat")
    //! runtextmacro GetHeroSpellId("TisseurDeLiens")
    //! runtextmacro GetHeroSpellId("TortionnaireFoudroyant")
    //! runtextmacro GetHeroSpellId("TunneleurDesVents")
    //! runtextmacro GetHeroSpellId("Vampire")
    endif
    return 0
endfunction

function GetHeroSpellOrder takes unit u, integer stat returns string
    //! textmacro GetHeroSpellOrder takes NAME
    elseif(GetUnitTypeId(u)==$NAME$ID) then
        if(stat==STAT_STR) then
            return $NAME$OrderStr
        elseif(stat==STAT_INT) then
            return $NAME$OrderInt
        elseif(stat==STAT_AGI) then
            return $NAME$OrderAgi
        elseif(stat==STAT_ULT) then
            return $NAME$OrderUlt
        endif
    //! endtextmacro
    
    if(GetUnitTypeId(u)==ArchidruideID) then
        if(stat==STAT_STR) then
            return ArchidruideOrderStr
        elseif(stat==STAT_INT) then
            return ArchidruideOrderInt
        elseif(stat==STAT_AGI) then
            return ArchidruideOrderAgi
        elseif(stat==STAT_ULT) then
            return ArchidruideOrderUlt
        endif
    //! runtextmacro GetHeroSpellOrder("Assassin")
    //! runtextmacro GetHeroSpellOrder("Barbare")
    //! runtextmacro GetHeroSpellOrder("Chaman")
    //! runtextmacro GetHeroSpellOrder("ChasseuseCrepusculaire")
    //! runtextmacro GetHeroSpellOrder("ChevalierNoir")
    //! runtextmacro GetHeroSpellOrder("DiscipleDuTemps")
    //! runtextmacro GetHeroSpellOrder("DrakeDeLaGuerre")
    //! runtextmacro GetHeroSpellOrder("ErrantDeLombre")
    //! runtextmacro GetHeroSpellOrder("ExpiateurDeMagie")
    //! runtextmacro GetHeroSpellOrder("GardienDeLaTerre")
    //! runtextmacro GetHeroSpellOrder("HerautDeLaPaix")
    //! runtextmacro GetHeroSpellOrder("Incinerateur")
    //! runtextmacro GetHeroSpellOrder("Justicier")
    //! runtextmacro GetHeroSpellOrder("MageDesElements")
    //! runtextmacro GetHeroSpellOrder("MarcheurDeLhiver")
    //! runtextmacro GetHeroSpellOrder("MarineDeLespace")
    //! runtextmacro GetHeroSpellOrder("Necromancien")
    //! runtextmacro GetHeroSpellOrder("PorteMort")
    //! runtextmacro GetHeroSpellOrder("PorteurDePeste")
    //! runtextmacro GetHeroSpellOrder("PretreDeLespoir")
    //! runtextmacro GetHeroSpellOrder("SemeurDeSouffrances")
    //! runtextmacro GetHeroSpellOrder("SorcierRenegat")
    //! runtextmacro GetHeroSpellOrder("TisseurDeLiens")
    //! runtextmacro GetHeroSpellOrder("TortionnaireFoudroyant")
    //! runtextmacro GetHeroSpellOrder("TunneleurDesVents")
    //! runtextmacro GetHeroSpellOrder("Vampire")
    endif
    return null
endfunction
function AIWhichOrder takes unit caster, unit ftarget, unit target, integer stat returns boolean
    local boolean b = false
    local real fx = GetUnitX(ftarget)
    local real fy = GetUnitY(ftarget)
    local real x = GetUnitX(target)
    local real y = GetUnitY(target)
    if(GetUnitTypeId(caster)==ArchidruideID) then
        if(stat==STAT_INT) then
            return IssueTargetOrder(caster, ArchidruideOrderInt, ftarget)
        elseif(stat==STAT_AGI) then
            if(ftarget == null) then
                return false
            else
                return IssuePointOrder(caster, ArchidruideOrderAgi, fx, fy)
            endif
        elseif(stat==STAT_ULT) then
            return IssueImmediateOrder(caster, ArchidruideOrderUlt)
        endif
    elseif(GetUnitTypeId(caster)==AssassinID) then
        if(stat==STAT_INT) then
            return IssueImmediateOrder(caster, AssassinOrderInt)
        elseif(stat==STAT_AGI) then
            return IssueTargetOrder(caster, AssassinOrderAgi, target)
        elseif(stat==STAT_ULT) then
            return IssueImmediateOrder(caster, AssassinOrderUlt)
        endif
    elseif(GetUnitTypeId(caster)==BarbareID) then
        if(stat==STAT_INT) then
            return IssueImmediateOrder(caster, BarbareOrderInt)
        elseif(stat==STAT_AGI) then
            return IssueTargetOrder(caster, BarbareOrderAgi, target)
        elseif(stat==STAT_ULT) then
            return IssueImmediateOrder(caster, BarbareOrderUlt)
        endif
    elseif(GetUnitTypeId(caster)==ChamanID) then
        if(stat==STAT_INT) then
            if(target == null) then
                return false
            else
                return IssuePointOrder(caster, ChamanOrderInt, x, y)
            endif
        elseif(stat==STAT_AGI) then
            if(target == null) then
                return false
            else
                return IssuePointOrder(caster, ChamanOrderAgi, x, y)
            endif
        elseif(stat==STAT_ULT) then
            return IssueTargetOrder(caster, ChamanOrderUlt, ftarget)
        endif
    elseif(GetUnitTypeId(caster)==ChasseuseCrepusculaireID) then
        if(stat==STAT_INT) then
            if(target == null) then
                return false
            else
                return IssuePointOrder(caster, ChasseuseCrepusculaireOrderInt, x, y)
            endif
        elseif(stat==STAT_AGI) then
            return IssueTargetOrder(caster, ChasseuseCrepusculaireOrderAgi, target)
        elseif(stat==STAT_ULT) then
            return IssueTargetOrder(caster, ChasseuseCrepusculaireOrderUlt, target)
        endif
    elseif(GetUnitTypeId(caster)==ChevalierNoirID) then
        if(stat==STAT_INT) then
            return IssueImmediateOrder(caster, ChevalierNoirOrderInt)
        elseif(stat==STAT_AGI) then
            return IssueTargetOrder(caster, ChevalierNoirOrderAgi, target)
        elseif(stat==STAT_ULT) then
            return IssueImmediateOrder(caster, ChevalierNoirOrderUlt)
        endif
    elseif(GetUnitTypeId(caster)==DiscipleDuTempsID) then
        if(target == null) then
            return false
        else
            return IssuePointOrder(caster, GetHeroSpellOrder(caster, stat), x, y)
        endif
    elseif(GetUnitTypeId(caster)==DrakeDeLaGuerreID) then
        if(stat==STAT_INT) then
            return IssueImmediateOrder(caster, DrakeDeLaGuerreOrderInt)
        elseif(stat==STAT_AGI) then
            return IssueImmediateOrder(caster, DrakeDeLaGuerreOrderAgi)
        elseif(stat==STAT_ULT) then
            return IssueTargetOrder(caster, DrakeDeLaGuerreOrderUlt, target)
        endif
    elseif(GetUnitTypeId(caster)==ErrantDeLombreID) then
        if(stat==STAT_INT) then
            if(target == null) then
                return false
            else
                return IssuePointOrder(caster, ErrantDeLombreOrderInt, x, y)
            endif
        elseif(stat==STAT_AGI) then
            return IssueImmediateOrder(caster, ErrantDeLombreOrderAgi)
        elseif(stat==STAT_ULT) then
            if(target == null) then
                return false
            else
                return IssuePointOrder(caster, ErrantDeLombreOrderUlt, x, y)
            endif
        endif
    elseif(GetUnitTypeId(caster)==ExpiateurDeMagieID) then
        if(target == null) then
            return false
        else
            return IssuePointOrder(caster, GetHeroSpellOrder(caster, stat), x, y)
        endif
    elseif(GetUnitTypeId(caster)==GardienDeLaTerreID) then
        if(target == null) then
            return false
        else
            return IssuePointOrder(caster, GetHeroSpellOrder(caster, stat), x, y)
        endif
    elseif(GetUnitTypeId(caster)==HerautDeLaPaixID) then
        if(stat==STAT_INT) then
            if(target == null) then
                return false
            else
                return IssuePointOrder(caster, HerautDeLaPaixOrderInt, x, y)
            endif
        elseif(stat==STAT_AGI) then
            return IssueImmediateOrder(caster, HerautDeLaPaixOrderAgi)
        elseif(stat==STAT_ULT) then
            return IssueImmediateOrder(caster, HerautDeLaPaixOrderUlt)
        endif
    elseif(GetUnitTypeId(caster)==IncinerateurID) then
        if(stat==STAT_INT) then
            if(target == null) then
                return false
            else
                return IssuePointOrder(caster, IncinerateurOrderInt, x, y)
            endif
        elseif(stat==STAT_AGI) then
            return IssueImmediateOrder(caster, IncinerateurOrderAgi)
        elseif(stat==STAT_ULT) then
            return IssueImmediateOrder(caster, IncinerateurOrderUlt)
        endif
    elseif(GetUnitTypeId(caster)==JusticierID) then
        if(stat==STAT_INT) then
            set b = IssueTargetOrder(caster, JusticierOrderInt, target)
            if(b==false) then
                return IssueTargetOrder(caster, JusticierOrderInt, ftarget)
            endif
            return b
        elseif(stat==STAT_AGI) then
            return IssueImmediateOrder(caster, JusticierOrderAgi)
        elseif(stat==STAT_ULT) then
            return IssueImmediateOrder(caster, JusticierOrderUlt)
        endif
    elseif(GetUnitTypeId(caster)==MageDesElementsID) then
        if(stat==STAT_INT) then
            return IssueImmediateOrder(caster, MageDesElementsOrderInt)
        elseif(stat==STAT_AGI) then
            return IssueTargetOrder(caster, MageDesElementsOrderAgi, target)
        elseif(stat==STAT_ULT) then
            return IssueImmediateOrder(caster, MageDesElementsOrderUlt)
        endif
    elseif(GetUnitTypeId(caster)==MarcheurDeLhiverID) then
        if(stat==STAT_INT) then
            if(target == null) then
                return false
            else
                return IssuePointOrder(caster, MarcheurDeLhiverOrderInt, x, y)
            endif
        elseif(stat==STAT_AGI) then
            return IssueImmediateOrder(caster, MarcheurDeLhiverOrderAgi)
        elseif(stat==STAT_ULT) then
            return IssueImmediateOrder(caster, MarcheurDeLhiverOrderUlt)
        endif
    elseif(GetUnitTypeId(caster)==MarineDeLespaceID) then
        if(stat==STAT_INT) then
            if(target == null) then
                return false
            else
                return IssuePointOrder(caster, MarineDeLespaceOrderInt, x, y)
            endif
        elseif(stat==STAT_AGI) then
            return IssueImmediateOrder(caster, MarineDeLespaceOrderAgi)
        elseif(stat==STAT_ULT) then
            if(target == null) then
                return false
            else
                return IssuePointOrder(caster, MarineDeLespaceOrderUlt, x, y)
            endif
        endif
    elseif(GetUnitTypeId(caster)==NecromancienID) then
        if(stat==STAT_INT) then
            return IssueImmediateOrder(caster, NecromancienOrderInt)
        elseif(stat==STAT_AGI) then
            set b = IssueTargetOrder(caster, NecromancienOrderAgi, target)
            if(b==false) then
                return IssueTargetOrder(caster, NecromancienOrderAgi, ftarget)
            endif
            return b
        elseif(stat==STAT_ULT) then
            return IssueImmediateOrder(caster, NecromancienOrderUlt)
        endif
    elseif(GetUnitTypeId(caster)==PorteMortID) then
        if(stat==STAT_INT) then
            return IssueImmediateOrder(caster, PorteMortOrderInt)
        elseif(stat==STAT_AGI) then
            return IssueTargetOrder(caster, PorteMortOrderAgi, target)
        elseif(stat==STAT_ULT) then
            return IssueImmediateOrder(caster, PorteMortOrderUlt)
        endif
    elseif(GetUnitTypeId(caster)==PorteurDePesteID) then
        if(stat==STAT_INT) then
            if(target == null) then
                return false
            else
                return IssuePointOrder(caster, PorteurDePesteOrderInt, x, y)
            endif
        elseif(stat==STAT_AGI) then
            return IssueTargetOrder(caster, PorteurDePesteOrderAgi, target)
        elseif(stat==STAT_ULT) then
            return IssueTargetOrder(caster, PorteurDePesteOrderUlt, target)
        endif
    elseif(GetUnitTypeId(caster)==PretreDeLespoirID) then
        return IssueImmediateOrder(caster, GetHeroSpellOrder(caster, stat))
    elseif(GetUnitTypeId(caster)==SemeurDeSouffrancesID) then
        if(stat==STAT_INT) then
            if(target == null) then
                return false
            else
                return IssuePointOrder(caster, SemeurDeSouffrancesOrderInt, x, y)
            endif
        elseif(stat==STAT_AGI) then
            return IssueImmediateOrder(caster, SemeurDeSouffrancesOrderAgi)
        elseif(stat==STAT_ULT) then
            return IssueImmediateOrder(caster, SemeurDeSouffrancesOrderUlt)
        endif
    elseif(GetUnitTypeId(caster)==SorcierRenegatID) then
        if(stat==STAT_INT) then
            return IssueImmediateOrder(caster, SorcierRenegatOrderInt)
        elseif(stat==STAT_AGI) then
            return IssueTargetOrder(caster, SorcierRenegatOrderAgi, target)
        elseif(stat==STAT_ULT) then
            if(target == null) then
                return false
            else
                return IssuePointOrder(caster, SorcierRenegatOrderUlt, x, y)
            endif
        endif
    elseif(GetUnitTypeId(caster)==TortionnaireFoudroyantID) then
        if(stat==STAT_INT) then
            if(target == null) then
                return false
            else
                return IssuePointOrder(caster, TortionnaireFoudroyantOrderInt, x, y)
            endif
        elseif(stat==STAT_AGI) then
            return IssueImmediateOrder(caster, TortionnaireFoudroyantOrderAgi)
        elseif(stat==STAT_ULT) then
            return IssueImmediateOrder(caster, TortionnaireFoudroyantOrderUlt)
        endif
    elseif(GetUnitTypeId(caster)==TunneleurDesVentsID) then
        if(stat==STAT_INT) then
            if(target == null) then
                return false
            else
                return IssuePointOrder(caster, TunneleurDesVentsOrderInt, x, y)
            endif
        elseif(stat==STAT_AGI) then
            if(target == null) then
                return false
            else
                return IssuePointOrder(caster, TunneleurDesVentsOrderAgi, x, y)
            endif
        elseif(stat==STAT_ULT) then
            return IssueImmediateOrder(caster, TunneleurDesVentsOrderUlt)
        endif
    elseif(GetUnitTypeId(caster)==VampireID) then
        return IssueImmediateOrder(caster, GetHeroSpellOrder(caster, stat))
    endif
    return false
endfunction

function AIGetTargetX takes unit caster returns real
    if(IsUnitInTeam(caster,1)) then
        if(IsNearbyEnemy(GetOwningPlayer(caster), CAS_HUM_X, CAS_HUM_Y, 1500.)) then
            return CAS_HUM_X
        endif
        if(udg_IACurrentTarget<=0) then
            if(IsNearbyEnemyHeroOfUnit(APN, 800.)) then
                return APNX
            endif
            if(GetOwningPlayer(APN)==GetPlayer(13)) then
                return CAS_ORC_X
            else
                return APNX
            endif
        elseif(udg_IACurrentTarget<=1) then
            if(IsNearbyEnemyHeroOfUnit(APS, 800.)) then
                return APSX
            endif
            if(GetOwningPlayer(APS)==GetPlayer(13)) then
                return CAS_ORC_X
            else
                return APSX
            endif
        elseif(udg_IACurrentTarget<=2) then
            if(IsNearbyEnemyHeroOfUnit(APC, 800.)) then
                return APCX
            endif
            if(GetOwningPlayer(APC)==GetPlayer(13)) then
                return CAS_ORC_X
            else
                return APCX
            endif
        endif
    elseif(IsUnitInTeam(caster,2)) then
        if(IsNearbyEnemy(GetOwningPlayer(caster), CAS_ORC_X, CAS_ORC_Y, 1500.)) then
            return CAS_ORC_X
        endif
        if(udg_IACurrentTarget<=0) then
            if(IsNearbyEnemyHeroOfUnit(APN, 800.)) then
                return APNX
            endif
            if(GetOwningPlayer(APN)==GetPlayer(14)) then
                return CAS_HUM_X
            else
                return APNX
            endif
        elseif(udg_IACurrentTarget<=1) then
            if(IsNearbyEnemyHeroOfUnit(APS, 800.)) then
                return APSX
            endif
            if(GetOwningPlayer(APS)==GetPlayer(14)) then
                return CAS_HUM_X
            else
                return APSX
            endif
        elseif(udg_IACurrentTarget<=2) then
            if(IsNearbyEnemyHeroOfUnit(APC, 800.)) then
                return APCX
            endif
            if(GetOwningPlayer(APC)==GetPlayer(14)) then
                return CAS_HUM_X
            else
                return APCX
            endif
        endif
    endif
    return MAP_CENTER_X
endfunction
function AIGetTargetY takes unit caster returns real
    if(IsUnitInTeam(caster,1)) then
        if(IsNearbyEnemy(GetOwningPlayer(caster), CAS_HUM_X, CAS_HUM_Y, 1500.)) then
            return CAS_HUM_Y
        endif
        if(udg_IACurrentTarget<=0) then
            if(IsNearbyEnemyHeroOfUnit(APN, 800.)) then
                return APNY
            endif
            if(GetOwningPlayer(APN)==GetPlayer(13)) then
                return CAS_ORC_Y
            else
                return APNY
            endif
        elseif(udg_IACurrentTarget<=1) then
            if(IsNearbyEnemyHeroOfUnit(APS, 800.)) then
                return APSY
            endif
            if(GetOwningPlayer(APS)==GetPlayer(13)) then
                return CAS_ORC_Y
            else
                return APSY
            endif
        elseif(udg_IACurrentTarget<=2) then
            if(IsNearbyEnemyHeroOfUnit(APC, 800.)) then
                return APCY
            endif
            if(GetOwningPlayer(APC)==GetPlayer(13)) then
                return CAS_ORC_Y
            else
                return APCY
            endif
        endif
    elseif(IsUnitInTeam(caster,2)) then
        if(IsNearbyEnemy(GetOwningPlayer(caster), CAS_ORC_X, CAS_ORC_Y, 1500.)) then
            return CAS_ORC_Y
        endif
        if(udg_IACurrentTarget<=0) then
            if(IsNearbyEnemyHeroOfUnit(APN, 800.)) then
                return APNY
            endif
            if(GetOwningPlayer(APN)==GetPlayer(14)) then
                return CAS_HUM_Y
            else
                return APNY
            endif
        elseif(udg_IACurrentTarget<=1) then
            if(IsNearbyEnemyHeroOfUnit(APS, 800.)) then
                return APSY
            endif
            if(GetOwningPlayer(APS)==GetPlayer(14)) then
                return CAS_HUM_Y
            else
                return APSY
            endif
        elseif(udg_IACurrentTarget<=2) then
            if(IsNearbyEnemyHeroOfUnit(APC, 800.)) then
                return APCY
            endif
            if(GetOwningPlayer(APC)==GetPlayer(14)) then
                return CAS_HUM_Y
            else
                return APCY
            endif
        endif
    endif
    return MAP_CENTER_Y
endfunction
function AICastSpell takes unit caster, unit ftarget, unit target returns boolean
    local boolean b = false
    if(GetUnitState(ftarget, UNIT_STATE_LIFE)<=GetUnitState(ftarget, UNIT_STATE_MAX_LIFE)*0.2) then
        set b = IssueTargetOrder(caster, GetHeroSpellOrder(caster, STAT_STR), ftarget)
    endif
    if(b==false) then
        set b = IssueTargetOrder(caster, GetHeroSpellOrder(caster, STAT_STR), target)
    endif
    if(b==false) then
        set b = IssueTargetOrder(caster, GetHeroSpellOrder(caster, STAT_STR), ftarget)
        if((b==false)and(GetHeroLevel(caster)>1)) then
            set b = AIWhichOrder(caster, ftarget, target, STAT_INT)
            if((b==false)and(GetHeroLevel(caster)>2)) then
                set b = AIWhichOrder(caster, ftarget, target, STAT_AGI)
                if((b==false)and(GetHeroLevel(caster)>11)) then
                    set b = AIWhichOrder(caster, ftarget, target, STAT_ULT)
                endif
            endif
        endif
    endif
    return b
endfunction
function AIGetItem takes unit caster returns nothing
    local player p = GetOwningPlayer(caster)
    local integer gold = GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD)
    local integer i = 0
    if((gold>80)and(UnitHasItemOfClass(caster, ITEM_TYPE_PERMANENT)==false)) then
        call SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, gold-80)
        set i = GetRandomInt(0, 5)
        if(i<=0) then
            call UnitAddItemById(caster, 'I00C')
        elseif(i<=1) then
            call UnitAddItemById(caster, 'I00B')
        elseif(i<=2) then
            call UnitAddItemById(caster, 'I00D')
        elseif(i<=3) then
            call UnitAddItemById(caster, 'I007')
        elseif(i<=4) then
            call UnitAddItemById(caster, 'I021')
        else
            call UnitAddItemById(caster, 'I01Z')
        endif
    elseif((gold>120)and((UnitHasItemOfClass(caster, ITEM_TYPE_POWERUP)==false)or(UnitHasItemOfClass(caster, ITEM_TYPE_PURCHASABLE)==false))) then
        if(UnitHasItemOfClass(caster, ITEM_TYPE_POWERUP)==false) then
            call SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, gold-120)
            set i = GetRandomInt(0, 3)
            if(i<=0) then
                call UnitAddItemById(caster, 'I00G')
            elseif(i<=1) then
                call UnitAddItemById(caster, 'I00H')
            elseif(i<=2) then
                call UnitAddItemById(caster, 'I01A')
            else
                call UnitAddItemById(caster, 'I01K')
            endif
        elseif(UnitHasItemOfClass(caster, ITEM_TYPE_PURCHASABLE)==false) then
            call SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, gold-120)
            set i = GetRandomInt(0, 3)
            if(i<=0) then
                call UnitAddItemById(caster, 'I014')
            elseif(i<=1) then
                call UnitAddItemById(caster, 'I01F')
            elseif(i<=2) then
                call UnitAddItemById(caster, 'I01G')
            else
                call UnitAddItemById(caster, 'I01H')
            endif
        endif
    endif
    set p = null
endfunction
function AIGetUnit takes timer t returns unit
    local integer i = 0
    loop
        exitwhen i>=12
        exitwhen udg_IATimer[i]==t
        set i=i+1
    endloop
    return udg_Hero[i]
endfunction
function AILoop takes nothing returns nothing
    local unit caster = AIGetUnit(GetExpiredTimer())
    local unit u = null
    local unit v = null
    local player p = GetOwningPlayer(caster)
    local item it = null
    local integer id = GetPlayerId(p)
    local real x = 0.
    local real y = 0.
    local real dist = 0.
    local real wait = GetRandomReal(3., 5.)
    local boolean attackAtLast = false
    local boolean b = false
    if(IsUnitFeared(caster) or IsUnitDisoriented(caster) or IsUnitStunned(caster)) then
        set wait = 0.4
    elseif(OrderId2String(GetUnitCurrentOrder(caster))=="massteleport") then
        // Channeling : Do Nothing
    elseif(OrderId2String(GetUnitCurrentOrder(caster))==GardienDeLaTerreOrderAgi) then
        // Channeling : Do Nothing
    elseif(OrderId2String(GetUnitCurrentOrder(caster))==GardienDeLaTerreOrderUlt) then
        // Channeling : Do Nothing
    elseif(OrderId2String(GetUnitCurrentOrder(caster))=="deathanddecay") then
        // Channeling : Do Nothing
    elseif(OrderId2String(GetUnitCurrentOrder(caster))==SemeurDeSouffrancesOrderStr) then
        // Channeling : Do Nothing
    elseif(GetUnitState(caster, UNIT_STATE_LIFE)<=0.) then
        // Dead : Do Nothing
        set wait = TimerGetRemaining(udg_DeathTimer[id])
    elseif(GetUnitState(caster, UNIT_STATE_LIFE)<=GetUnitState(caster, UNIT_STATE_MAX_LIFE)*0.4) then
        set wait = 1.
        if(IsUnitSlowed(caster) or IsUnitRooted(caster)) then
            set attackAtLast = true
        else
            if(IsUnitAlly(caster, GetPlayer(5))) then
                call IssuePointOrderById(caster, SMART, CAS_HUM_X, CAS_HUM_Y)
            elseif(IsUnitAlly(caster, GetPlayer(11))) then
                call IssuePointOrderById(caster, SMART, CAS_ORC_X, CAS_ORC_Y)
            endif
        endif
    elseif(GetUnitState(caster, UNIT_STATE_LIFE)<=GetUnitState(caster, UNIT_STATE_MAX_LIFE)*0.5) then
        if(UnitHasItemOfType(caster, 'I00Q')) then
            call UnitUseItem(caster, GetItemOfTypeInUnitInventory(caster, 'I00Q'))
            set wait = 0.1
        elseif(UnitHasItemOfType(caster, 'I003')) then
            call UnitUseItem(caster, GetItemOfTypeInUnitInventory(caster, 'I003'))
            set wait = 0.1
        elseif(UnitHasItemOfType(caster, 'I00T')) then
            call UnitUseItem(caster, GetItemOfTypeInUnitInventory(caster, 'I00T'))
            set wait = 0.1
        elseif(UnitHasItemOfType(caster, 'I00S')) then
            call UnitUseItem(caster, GetItemOfTypeInUnitInventory(caster, 'I00S'))
            set wait = 0.1
        elseif(UnitHasItemOfType(caster, 'I002')) then
            call UnitUseItem(caster, GetItemOfTypeInUnitInventory(caster, 'I002'))
            set wait = 0.1
        elseif(UnitHasItemOfType(caster, 'I005')) then
            call UnitUseItem(caster, GetItemOfTypeInUnitInventory(caster, 'I005'))
            set wait = 0.1
        elseif(UnitHasItemOfType(caster, 'I00V')) then
            call UnitUseItem(caster, GetItemOfTypeInUnitInventory(caster, 'I00V'))
            set wait = 0.1
        elseif(UnitHasItemOfType(caster, 'I00W')) then
            call UnitUseItem(caster, GetItemOfTypeInUnitInventory(caster, 'I00W'))
            set wait = 0.1
        elseif(UnitHasItemOfType(caster, 'I00U')) then
            call UnitUseItem(caster, GetItemOfTypeInUnitInventory(caster, 'I00U'))
            set wait = 0.1
        endif
    elseif(GetUnitState(caster, UNIT_STATE_MANA)<=GetUnitState(caster, UNIT_STATE_MAX_MANA)*0.2) then
        if(UnitHasItemOfType(caster, 'I00R')) then
            call UnitUseItem(caster, GetItemOfTypeInUnitInventory(caster, 'I00R'))
            set wait = 0.1
        elseif(UnitHasItemOfType(caster, 'I001')) then
            call UnitUseItem(caster, GetItemOfTypeInUnitInventory(caster, 'I001'))
            set wait = 0.1
        elseif(UnitHasItemOfType(caster, 'I00P')) then
            call UnitUseItem(caster, GetItemOfTypeInUnitInventory(caster, 'I00P'))
            set wait = 0.1
        elseif(UnitHasItemOfType(caster, 'I00S')) then
            call UnitUseItem(caster, GetItemOfTypeInUnitInventory(caster, 'I00S'))
            set wait = 0.1
        elseif(UnitHasItemOfType(caster, 'I002')) then
            call UnitUseItem(caster, GetItemOfTypeInUnitInventory(caster, 'I002'))
            set wait = 0.1
        elseif(UnitHasItemOfType(caster, 'I005')) then
            call UnitUseItem(caster, GetItemOfTypeInUnitInventory(caster, 'I005'))
            set wait = 0.1
        elseif(UnitHasItemOfType(caster, 'I00V')) then
            call UnitUseItem(caster, GetItemOfTypeInUnitInventory(caster, 'I00V'))
            set wait = 0.1
        elseif(UnitHasItemOfType(caster, 'I00W')) then
            call UnitUseItem(caster, GetItemOfTypeInUnitInventory(caster, 'I00W'))
            set wait = 0.1
        elseif(UnitHasItemOfType(caster, 'I00U')) then
            call UnitUseItem(caster, GetItemOfTypeInUnitInventory(caster, 'I00U'))
            set wait = 0.1
        endif
        if(IsUnitInTeam(caster,1)) then
            call IssuePointOrderById(caster, SMART, CAS_HUM_SUD_X, CAS_HUM_SUD_Y)
        elseif(IsUnitInTeam(caster,2)) then
            call IssuePointOrderById(caster, SMART, CAS_ORC_NORD_X, CAS_ORC_NORD_Y)
        endif
    else
        set attackAtLast = true
    endif
    if(GetHeroSkillPoints(caster) > 0) then
        if(GetHeroLevel(caster)==12) then
            call SelectHeroSkill(caster, GetHeroSpellId(caster, STAT_ULT))
        elseif(GetHeroLevel(caster)==19) then
            call SelectHeroSkill(caster, GetHeroSpellId(caster, STAT_AGI))
        elseif(ModuloInteger(GetHeroLevel(caster), 3)-1==0) then
            call SelectHeroSkill(caster, GetHeroSpellId(caster, STAT_STR))
        elseif(ModuloInteger(GetHeroLevel(caster), 3)-2==0) then
            call SelectHeroSkill(caster, GetHeroSpellId(caster, STAT_INT))
        elseif(ModuloInteger(GetHeroLevel(caster), 3)==0) then
            call SelectHeroSkill(caster, GetHeroSpellId(caster, STAT_AGI))
        endif
    endif
    if(attackAtLast) then
        if(GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD)>=40 and UnitHasEmptySlot(caster)) then
            call AIGetItem(caster)
        endif
        if(IsNearbyEnemyOfUnitWithoutStructures(caster, 750.)) then // Vérifie si un ennemi est à proximité
            set wait = 0.1
            set u = AIGetNearbyAlly(caster, 700.) // Récupère une cible amie
            set v = AIGetNearbyEnemy(caster, 700.) // Récupère une cible ennemie
            if(udg_CombatState[id]) then // Si le héros est en combat
                if(AICastSpell(caster, u, v)) then // Lance un sort
                    set wait = 1.5
                else
                    set wait = 1.
                    call IssueTargetOrderById(caster, ATTACK, v) // Sinon attaque
                endif
            else
                call IssuePointOrderById(caster, ATTACK, GetUnitX(v), GetUnitY(v))
            endif
        else
            set it = GetNearestItemInRange(GetUnitX(caster), GetUnitY(caster), 280.)
            if(it!=null) then
                if(UnitHasEmptySlot(caster)) then
                    if(GetItemType(it) == ITEM_TYPE_CHARGED) then
                        call IssueTargetOrderById(caster, SMART, it)
                    elseif(GetItemType(it) == ITEM_TYPE_ARTIFACT) then
                        call IssueTargetOrderById(caster, SMART, it)
                    else
                        if(UnitHasItemOfClass(caster, GetItemType(it))==false) then
                            call IssueTargetOrderById(caster, SMART, it)
                        endif
                    endif
                    set wait = 0.1
                endif
            else
                set x = AIGetTargetX(caster) // Récupère un lieu où aller
                set y = AIGetTargetY(caster)
                set dist = DistanceBetweenXY(GetUnitX(caster), GetUnitY(caster), x, y)
                call IssuePointOrderById(caster, ATTACK, x, y)
                if(dist>2500.) then
                    set u = AIGetNearbyAllyUnit(p, x, y, 1000.)
                    if(u!=null) then
                        call IssueTargetOrder(caster, "massteleport", bj_lastCreatedUnit)
                        set bj_lastCreatedUnit = null
                        set wait = 5.
                    endif
                endif
            endif
        endif
    endif
    set it = null
    set p = null
    set v = null
    set u = null
    set caster = null
    call TimerStart(udg_IATimer[id], wait, false, function AILoop)
endfunction
function StartAILoop takes nothing returns nothing
    call TimerStart(udg_IATimer[GetPlayerId(GetOwningPlayer(ENUMUNIT))], GetRandomReal(1., 4.), false, function AILoop)
endfunction
function StartAI takes unit caster returns nothing
    set ENUMUNIT = caster
    set AUTODISTRIB[GetPlayerId(GetOwningPlayer(caster))]=true
    call ExecuteFunc("StartAILoop")
endfunction

function APeriodicTarget takes nothing returns nothing
    set udg_IACurrentTarget = GetRandomInt(0, 2)
endfunction

function InitTrig_AI takes nothing returns nothing
    set gg_trg_AI = CreateTrigger()
    call TriggerRegisterTimerEvent(gg_trg_AI, 240., true)
    call TriggerAddAction(gg_trg_AI, function APeriodicTarget)
endfunction//===========================================================================
// Trigger: Initialisation
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function ChangeOwnersToComputers takes player source, player dest returns nothing
    local group g = NewGroup()
    local unit u = null
    call GroupEnumUnitsOfPlayer(g, source, null)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        if(GetUnitTypeId(u) != UNITID_CERCLEDECHOIX) then
            call SetUnitOwner(u, dest, true)
        endif
    endloop
    call DeleteGroup(g)
    set u = null
endfunction

function InitPlayersAtStart takes nothing returns nothing
    local player p = GetEnumPlayer()
    local integer id = GetPlayerId(p)
    if(GetPlayerController(p)==MAP_CONTROL_USER) then
        if(GetLocalPlayer()==p) then
            call SetCameraTargetController(Cercles[id], 0., 0., false)
            call ClearSelection()
            call SelectUnit(Cercles[id], true)
        endif
    endif
    set udg_BoardDeathCount[id]=0
    set udg_BoardLine[id]=udg_BoardLine[15]
    call SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD)+30)
    call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED)+9)
    call MultiboardSetItemIcon(MultiboardGetItem(udg_Board, udg_BoardLine[15], 0), "ReplaceableTextures\\CommandButtons\\BTNSelectHeroOn.blp")
    call MultiboardSetItemStyle(MultiboardGetItem(udg_Board, udg_BoardLine[15], 0), false, true)
    call MultiboardSetItemWidth(MultiboardGetItem(udg_Board, udg_BoardLine[15], 0), 0.01)
    call MultiboardSetItemValue(MultiboardGetItem(udg_Board, udg_BoardLine[15], 1), GetColorByPlayerId(id)+GetPlayerName(p)+ENDCOLOR)
    call MultiboardSetItemWidth(MultiboardGetItem(udg_Board, udg_BoardLine[15], 1), 0.07)
    call MultiboardSetItemValue(MultiboardGetItem(udg_Board, udg_BoardLine[15], 2), I2S(GetPlayerScore(p, PLAYER_SCORE_HEROES_KILLED)))
    call MultiboardSetItemWidth(MultiboardGetItem(udg_Board, udg_BoardLine[15], 2), 0.03)
    call MultiboardSetItemValue(MultiboardGetItem(udg_Board, udg_BoardLine[15], 3), I2S(GetPlayerScore(p, PLAYER_SCORE_UNITS_KILLED)))
    call MultiboardSetItemWidth(MultiboardGetItem(udg_Board, udg_BoardLine[15], 3), 0.03)
    call MultiboardSetItemValue(MultiboardGetItem(udg_Board, udg_BoardLine[15], 4), I2S(0))
    call MultiboardSetItemWidth(MultiboardGetItem(udg_Board, udg_BoardLine[15], 4), 0.03)
    set p = null
    set udg_BoardLine[15]=udg_BoardLine[15]+1
endfunction
function AtMapStart takes nothing returns nothing
    local trigger t = GetTriggeringTrigger()
    local force f = CreateForce()
    local integer i = 0
    call ChangeOwnersToComputers(GetPlayer(5), GetPlayer(13))
    call ChangeOwnersToComputers(GetPlayer(11), GetPlayer(14))
    call SetSkyModel("Environment\\Sky\\FelwoodSky\\FelwoodSky.mdl")
    call ExecuteFuncTimed("ToExecuteAt3", 3.)
    call ExecuteFuncTimed("ToExecuteAt15", 15.)
    call ExecuteFuncTimed("ToExecuteAt30", 30.)
    call ExecuteFuncTimed("ToExecuteAt45", 45.)
    call ExecuteFuncTimed("ToExecuteAt60", 60.)
    call ExecuteFuncTimed("IAHeroSelection", 80.)
    call ExecuteFuncTimed("ToExecuteAt90", 90.)    
    call ExecuteFuncTimed("ToExecuteAt120", 120.)
    call ExecuteFuncTimed("ToExecuteAt150", 150.)
    call ExecuteFuncTimed("ToExecuteAt180", 180.)
    call ExecuteFuncTimed("ToExecuteAt300", 300.)
    loop
        exitwhen i>=12
        set udg_DeathTimerDialog[i] = CreateTimerDialog(udg_DeathTimer[i])
        call TimerDialogSetTitle(udg_DeathTimerDialog[i], "Réincarnation dans :")
        call TimerDialogDisplay(udg_DeathTimerDialog[i], false)
        set i = i + 1
    endloop
  // First Plants Spawn
    set i = 0
    loop
        exitwhen i>=3*udg_PlayersCount
        call CreateItem('I00I', GetRandomX(), GetRandomY())
        call CreateItem('I00K', GetRandomX(), GetRandomY())
        call CreateItem('I00L', GetRandomX(), GetRandomY())
        set i = i + 1
    endloop
    set i = 0
    loop
        exitwhen i>=udg_PlayersCount
        call CreateItem('I00N', GetRandomX(), GetRandomY())
        call CreateItem('I00O', GetRandomX(), GetRandomY())
        call CreateItem('I000', GetRandomX(), GetRandomY())
        set i = i + 1
    endloop
  // Critters Spawn
    call CreateUnit(Player(15), 'nfro', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'nrat', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'nrac', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'nskk', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'nvul', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'nfbr', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'nshe', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'necr', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'nhmc', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'ncrb', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'npig', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'ndog', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'nder', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'nalb', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'nfro', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'nrat', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'nrac', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'nskk', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'nvul', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'nfbr', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'nshe', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'necr', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'nhmc', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'ncrb', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'npig', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'ndog', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'nder', GetRandomX(), GetRandomY(), 0.)
    call CreateUnit(Player(15), 'nalb', GetRandomX(), GetRandomY(), 0.)
  // Multiboard
    call ForceEnumPlayers(f, Condition(function PlayerIsPlayed))
    call MultiboardSetRowCount(udg_Board, udg_PlayersCount + 1)
    call MultiboardSetColumnCount(udg_Board, 5)
    call MultiboardSetTitleText(udg_Board, "Breath of War")
    call MultiboardSetItemsValueColor(udg_Board, 255, 255, 0, 0)
    call MultiboardSetItemsStyle(udg_Board, true, false)
    call MultiboardSetItemStyle(MultiboardGetItem(udg_Board, 0, 0), false, false)
    call MultiboardSetItemWidth(MultiboardGetItem(udg_Board, 0, 0), 0.01)
    call MultiboardSetItemValue(MultiboardGetItem(udg_Board, 0, 1), "Joueurs")
    call MultiboardSetItemWidth(MultiboardGetItem(udg_Board, 0, 1), 0.07)
    call MultiboardSetItemValue(MultiboardGetItem(udg_Board, 0, 2), "Héros")
    call MultiboardSetItemWidth(MultiboardGetItem(udg_Board, 0, 2), 0.03)
    call MultiboardSetItemValue(MultiboardGetItem(udg_Board, 0, 3), "Unités")
    call MultiboardSetItemWidth(MultiboardGetItem(udg_Board, 0, 3), 0.03)
    call MultiboardSetItemValue(MultiboardGetItem(udg_Board, 0, 4), "Morts")
    call MultiboardSetItemWidth(MultiboardGetItem(udg_Board, 0, 4), 0.03)
    set udg_BoardLine[15] = 1
    call ForForce(f, function InitPlayersAtStart)
    call MultiboardDisplay(udg_Board, true)
    call DestroyForce(f)
    set f = null
    call TriggerRemoveAction(t, HTLoadTriggerActionHandle(t, TRIGGERACTION))
    call HTFlushChildHashtable(t)
    call DestroyTrigger(t)
    set t = null
endfunction

function InitPlayers takes nothing returns nothing
    local player p = GetEnumPlayer()
    call SetPlayerTechMaxAllowed(p, 'HERO', 1)
    call SetPlayerAbilityAvailable(p, 'Arav', false)
    call SetPlayerState(p, PLAYER_STATE_GIVES_BOUNTY, 1)
    set p = null
endfunction
function InitTrig_Initialisation takes nothing returns nothing
    local trigger t = CreateTrigger()
    local integer i = 0
    local unit u = null
    local quest q = null
    local fogmodifier fog = null
  // Globals definition
    set udg_RandomHumTotalHeroes = 27
    set udg_RandomHumHeroesType[1] = PorteMortID
    set udg_RandomHumHeroesType[2] = DrakeDeLaGuerreID
    set udg_RandomHumHeroesType[3] = MarcheurDeLhiverID
    set udg_RandomHumHeroesType[4] = GardienDeLaTerreID
    set udg_RandomHumHeroesType[5] = JusticierID
    set udg_RandomHumHeroesType[6] = ChevalierNoirID
    set udg_RandomHumHeroesType[7] = HerautDeLaPaixID
    set udg_RandomHumHeroesType[8] = BarbareID
    set udg_RandomHumHeroesType[9] = VampireID
    set udg_RandomHumHeroesType[10] = AssassinID
    set udg_RandomHumHeroesType[11] = TisseurDeLiensID
    set udg_RandomHumHeroesType[12] = DiscipleDuTempsID
    set udg_RandomHumHeroesType[13] = NecromancienID
    set udg_RandomHumHeroesType[14] = ChamanID
    set udg_RandomHumHeroesType[15] = SorcierRenegatID
    set udg_RandomHumHeroesType[16] = IncinerateurID
    set udg_RandomHumHeroesType[17] = ErrantDeLombreID
    set udg_RandomHumHeroesType[18] = PorteurDePesteID
    set udg_RandomHumHeroesType[19] = MageDesElementsID
    set udg_RandomHumHeroesType[20] = TortionnaireFoudroyantID
    set udg_RandomHumHeroesType[21] = TunneleurDesVentsID
    set udg_RandomHumHeroesType[22] = ExpiateurDeMagieID
    set udg_RandomHumHeroesType[23] = SemeurDeSouffrancesID
    set udg_RandomHumHeroesType[24] = ArchidruideID
    set udg_RandomHumHeroesType[25] = PretreDeLespoirID
    set udg_RandomHumHeroesType[26] = ChasseuseCrepusculaireID
    set udg_RandomHumHeroesType[27] = MarineDeLespaceID
    set udg_RandomHumHeroesType[28] = 'N02P'
    set udg_RandomOrcTotalHeroes = 27
    set udg_RandomOrcHeroesType[1] = PorteMortID
    set udg_RandomOrcHeroesType[2] = DrakeDeLaGuerreID
    set udg_RandomOrcHeroesType[3] = MarcheurDeLhiverID
    set udg_RandomOrcHeroesType[4] = GardienDeLaTerreID
    set udg_RandomOrcHeroesType[5] = JusticierID
    set udg_RandomOrcHeroesType[6] = ChevalierNoirID
    set udg_RandomOrcHeroesType[7] = HerautDeLaPaixID
    set udg_RandomOrcHeroesType[8] = BarbareID
    set udg_RandomOrcHeroesType[9] = VampireID
    set udg_RandomOrcHeroesType[10] = AssassinID
    set udg_RandomOrcHeroesType[11] = TisseurDeLiensID
    set udg_RandomOrcHeroesType[12] = DiscipleDuTempsID
    set udg_RandomOrcHeroesType[13] = NecromancienID
    set udg_RandomOrcHeroesType[14] = ChamanID
    set udg_RandomOrcHeroesType[15] = SorcierRenegatID
    set udg_RandomOrcHeroesType[16] = IncinerateurID
    set udg_RandomOrcHeroesType[17] = ErrantDeLombreID
    set udg_RandomOrcHeroesType[18] = PorteurDePesteID
    set udg_RandomOrcHeroesType[19] = MageDesElementsID
    set udg_RandomOrcHeroesType[20] = TortionnaireFoudroyantID
    set udg_RandomOrcHeroesType[21] = TunneleurDesVentsID
    set udg_RandomOrcHeroesType[22] = ExpiateurDeMagieID
    set udg_RandomOrcHeroesType[23] = SemeurDeSouffrancesID
    set udg_RandomOrcHeroesType[24] = ArchidruideID
    set udg_RandomOrcHeroesType[25] = PretreDeLespoirID
    set udg_RandomOrcHeroesType[26] = ChasseuseCrepusculaireID
    set udg_RandomOrcHeroesType[27] = MarineDeLespaceID
    set udg_RandomOrcHeroesType[28] = 'N02P'
    set APN = gg_unit_h003_0042
    set APS = gg_unit_h003_0041
    set APC = gg_unit_h003_0114
    set ForgeN = gg_unit_n00J_0049
    set ArmurieN = gg_unit_n01Y_0120
    set ForgeC = gg_unit_n00J_0122
    set ArmurieC = gg_unit_n01Y_0121
    set ForgeS = gg_unit_n00J_0119
    set ArmurieS = gg_unit_n01Y_0054
    set TOUR_APN_1 = gg_unit_n02U_0076
    set TOUR_APN_2 = gg_unit_n02U_0077
    set TOUR_APN_3 = gg_unit_n02U_0078
    set TOUR_APN_4 = gg_unit_n02U_0079
    set TOUR_APS_1 = gg_unit_n02U_0004
    set TOUR_APS_2 = gg_unit_n02U_0022
    set TOUR_APS_3 = gg_unit_n02U_0050
    set TOUR_APS_4 = gg_unit_n02U_0075
    set TOUR_APC_1 = gg_unit_n02U_0080
    set TOUR_APC_2 = gg_unit_n02U_0112
    set TOUR_APC_3 = gg_unit_n02U_0055
    set TOUR_APC_4 = gg_unit_n02U_0113
    set APNX = GetUnitX(APN)
    set APNY = GetUnitY(APN)
    set APSX = GetUnitX(APS)
    set APSY = GetUnitY(APS)
    set APCX = GetUnitX(APC)
    set APCY = GetUnitY(APC)
    set CAS_HUM_NORD_X = GetRectCenterX(gg_rct_CHN)
    set CAS_HUM_NORD_Y = GetRectCenterY(gg_rct_CHN)
    set CAS_HUM_SUD_X = GetRectCenterX(gg_rct_CHS)
    set CAS_HUM_SUD_Y = GetRectCenterY(gg_rct_CHS)
    set CAS_HUM_CENTER_X = GetRectCenterX(gg_rct_CHC)
    set CAS_HUM_CENTER_Y = GetRectCenterY(gg_rct_CHC)
    set CAS_HUM_X = GetUnitX(gg_unit_h000_0013)
    set CAS_HUM_Y = GetUnitY(gg_unit_h000_0013)
    set CAS_ORC_NORD_X = GetRectCenterX(gg_rct_CON)
    set CAS_ORC_NORD_Y = GetRectCenterY(gg_rct_CON)
    set CAS_ORC_SUD_X = GetRectCenterX(gg_rct_COS)
    set CAS_ORC_SUD_Y = GetRectCenterY(gg_rct_COS)
    set CAS_ORC_CENTER_X = GetRectCenterX(gg_rct_COC)
    set CAS_ORC_CENTER_Y = GetRectCenterY(gg_rct_COC)
    set CAS_ORC_X = GetUnitX(gg_unit_o000_0012)
    set CAS_ORC_Y = GetUnitY(gg_unit_o000_0012)
    set udg_Board = CreateMultiboard()
    set i = 0
    set udg_PlayersTeam1 = 1
    set udg_PlayersTeam2 = 1
    loop
        exitwhen i>=12
        if(GetPlayerSlotState(GetPlayer(i))==PLAYER_SLOT_STATE_PLAYING) then
            set udg_PlayersCount = udg_PlayersCount + 1
            if(IsPlayerInTeam(GetPlayer(i),1)) then
                set udg_PlayersTeam1 = udg_PlayersTeam1 + 1
            elseif(IsPlayerInTeam(GetPlayer(i),2)) then
                set udg_PlayersTeam2 = udg_PlayersTeam2 + 1
            endif
        endif
        set i = i + 1
    endloop
    
    //set fog = CreateFogModifier(
    //call CreateFogModifierRectBJ( true, Player(0), FOG_OF_WAR_VISIBLE, GetPlayableMapRect() )
    //call CreateFogModifierRectBJ( false, Player(0), FOG_OF_WAR_FOGGED, GetPlayableMapRect() )
    //call CreateFogModifierRectBJ( false, Player(0), FOG_OF_WAR_FOGGED, GetPlayableMapRect() )
    //call CreateFogModifierRadiusLocBJ( true, Player(0), FOG_OF_WAR_VISIBLE, GetRectCenter(GetPlayableMapRect()), 512 )
    //call FogModifierStart( GetLastCreatedFogModifier() )
    //call FogModifierStop( GetLastCreatedFogModifier() )
    //call DestroyFogModifier( GetLastCreatedFogModifier() )
    
    set i=0
    loop
        exitwhen i>=6
        call SetPlayersAlliance(GetPlayer(i), GetPlayer(13), true)
        call SetPlayersAlliance(GetPlayer(i), GetPlayer(14), false)
        call SetPlayersAlliance(GetPlayer(13), GetPlayer(i), true)
        call SetPlayersAlliance(GetPlayer(14), GetPlayer(i), false)
        set i=i+1
    endloop
    loop
        exitwhen i>=12
        call SetPlayersAlliance(GetPlayer(i), GetPlayer(13), false)
        call SetPlayersAlliance(GetPlayer(i), GetPlayer(14), true)
        call SetPlayersAlliance(GetPlayer(13), GetPlayer(i), false)
        call SetPlayersAlliance(GetPlayer(14), GetPlayer(i), true)
        set i=i+1
    endloop
    call SetPlayersAlliance(GetPlayer(13), GetPlayer(14), false)
    call SetPlayersAlliance(GetPlayer(14), GetPlayer(13), false)
    call SetPlayerColor(GetPlayer(13), PLAYER_COLOR_ORANGE)
    call SetPlayerColor(GetPlayer(14), PLAYER_COLOR_BROWN)
  // Units preloading
    //call KillUnit(CreateUnit(Player(15), 'h000', 0., 0., 0.)) // Château
    //call KillUnit(CreateUnit(Player(15), 'h001', 0., 0., 0.)) // Tour de siède
    //call KillUnit(CreateUnit(Player(15), 'h002', 0., 0., 0.)) // Tour de garde
    //call KillUnit(CreateUnit(Player(15), 'h003', 0., 0., 0.)) // Avant-poste
    call KillUnit(CreateUnit(Player(15), 'h004', 0., 0., 0.)) // Connétable
    call KillUnit(CreateUnit(Player(15), 'h005', 0., 0., 0.)) // Homme d'armes
    call KillUnit(CreateUnit(Player(15), 'n006', 0., 0., 0.)) // Fantassin
    call KillUnit(CreateUnit(Player(15), 'h007', 0., 0., 0.)) // Chevalier
    call KillUnit(CreateUnit(Player(15), 'h008', 0., 0., 0.)) // Fusilier
    //call KillUnit(CreateUnit(Player(15), 'h009', 0., 0., 0.)) // Tour de garde 2
    call KillUnit(CreateUnit(Player(15), 'h00A', 0., 0., 0.)) // Prêtre
    call KillUnit(CreateUnit(Player(15), 'h00B', 0., 0., 0.)) // Guerrier
    call KillUnit(CreateUnit(Player(15), 'h00C', 0., 0., 0.)) // Sorcière
    //call KillUnit(CreateUnit(Player(15), 'h00D', 0., 0., 0.)) // Tour de protection
    call KillUnit(CreateUnit(Player(15), 'h00E', 0., 0., 0.)) // Brise-sort
    call KillUnit(CreateUnit(Player(15), 'h00F', 0., 0., 0.)) // Mortier
//--------------------------------------------------//
    //call RemoveUnit(CreateUnit(Player(15), 'n000', 0., 0., 0.)) // Tour de siège (orc)
    call RemoveUnit(CreateUnit(Player(15), 'N001', 0., 0., 0.)) // Chasseuse crépusculaire
    call RemoveUnit(CreateUnit(Player(15), 'N002', 0., 0., 0.)) // Marcheur de l'hiver
    call RemoveUnit(CreateUnit(Player(15), 'n003', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'N004', 0., 0., 0.)) // Porte-mort
    call RemoveUnit(CreateUnit(Player(15), 'n005', 0., 0., 0.))
    //call RemoveUnit(CreateUnit(Player(15), 'n006', 0., 0., 0.)) // Alchimiste gobelin
    call RemoveUnit(CreateUnit(Player(15), 'n007', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n008', 0., 0., 0.))
    //call RemoveUnit(CreateUnit(Player(15), 'n009', 0., 0., 0.)) // Héros de longue portée
    call RemoveUnit(CreateUnit(Player(15), 'n00A', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'N00B', 0., 0., 0.)) // Justicier
    call RemoveUnit(CreateUnit(Player(15), 'N00C', 0., 0., 0.)) // Mage des éléments
    call RemoveUnit(CreateUnit(Player(15), 'N00D', 0., 0., 0.)) // Expiateur de magie
    call RemoveUnit(CreateUnit(Player(15), 'n00E', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'N00F', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n00G', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'N00H', 0., 0., 0.)) // Damage test dummy
    call RemoveUnit(CreateUnit(Player(15), 'N00I', 0., 0., 0.)) // Errant de l'ombre
    //call RemoveUnit(CreateUnit(Player(15), 'n00J', 0., 0., 0.)) Forge naine
    call RemoveUnit(CreateUnit(Player(15), 'N00K', 0., 0., 0.)) // Assassin
    call RemoveUnit(CreateUnit(Player(15), 'n00L', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'N00M', 0., 0., 0.)) // Tortionnaire foudroyant
    call RemoveUnit(CreateUnit(Player(15), 'N00N', 0., 0., 0.)) // Vampire
    //call RemoveUnit(CreateUnit(Player(15), 'n00O', 0., 0., 0.)) // Héros de mêlée
    //call RemoveUnit(CreateUnit(Player(15), 'n00P', 0., 0., 0.)) // Cercle de choix
    //call RemoveUnit(CreateUnit(Player(15), 'n00Q', 0., 0., 0.)) // Héros de courte portée
    call RemoveUnit(CreateUnit(Player(15), 'n00R', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n00S', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'N00T', 0., 0., 0.)) // Incinérateur
    call RemoveUnit(CreateUnit(Player(15), 'n00U', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n00V', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n00W', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n00X', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n00Y', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'N00Z', 0., 0., 0.)) // Drake de la guerre
    call RemoveUnit(CreateUnit(Player(15), 'N010', 0., 0., 0.)) // Necromancien
    call RemoveUnit(CreateUnit(Player(15), 'n011', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n012', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n013', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'N014', 0., 0., 0.)) // Disciple du temps
    call RemoveUnit(CreateUnit(Player(15), 'N015', 0., 0., 0.)) // Gardien de la terre
    call RemoveUnit(CreateUnit(Player(15), 'n016', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n017', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n018', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n019', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'N01A', 0., 0., 0.)) // Aléatoire
    call RemoveUnit(CreateUnit(Player(15), 'N01B', 0., 0., 0.)) // Barbare
    call RemoveUnit(CreateUnit(Player(15), 'n01C', 0., 0., 0.)) // Artisan armurier 2
    call RemoveUnit(CreateUnit(Player(15), 'n01D', 0., 0., 0.)) // Forge naine 2
    //call RemoveUnit(CreateUnit(Player(15), 'n01E', 0., 0., 0.)) // Ravitaillement
    call RemoveUnit(CreateUnit(Player(15), 'n01F', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'N01G', 0., 0., 0.)) // Tisseur de liens
    call RemoveUnit(CreateUnit(Player(15), 'N01H', 0., 0., 0.)) // Archidruide
    call RemoveUnit(CreateUnit(Player(15), 'n01I', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'N01J', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n01I', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n01K', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n01L', 0., 0., 0.)) // Gardien des ruines
    call RemoveUnit(CreateUnit(Player(15), 'N01M', 0., 0., 0.)) // Tunneleur des vents
    call RemoveUnit(CreateUnit(Player(15), 'n01N', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n01O', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n01P', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'N01Q', 0., 0., 0.)) // Semeur de souffrances
    call RemoveUnit(CreateUnit(Player(15), 'n01R', 0., 0., 0.))
    //call RemoveUnit(CreateUnit(Player(15), 'n01S', 0., 0., 0.)) // Marché
    call RemoveUnit(CreateUnit(Player(15), 'n01T', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n01U', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'N01V', 0., 0., 0.)) // Porteur de paix
    call RemoveUnit(CreateUnit(Player(15), 'n01W', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n01X', 0., 0., 0.))
    //call RemoveUnit(CreateUnit(Player(15), 'n01Y', 0., 0., 0.)) // Artisan armurier
    call RemoveUnit(CreateUnit(Player(15), 'n01Z', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n020', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n021', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'N022', 0., 0., 0.)) // Sorcier renégat
    call RemoveUnit(CreateUnit(Player(15), 'n023', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n024', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n025', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n026', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n027', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n028', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n029', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n02A', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n02B', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n02C', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n02D', 0., 0., 0.))
    //call RemoveUnit(CreateUnit(Player(15), 'n02E', 0., 0., 0.)) // Portail
    call RemoveUnit(CreateUnit(Player(15), 'n02F', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n02G', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n02H', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n02I', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n02J', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n02K', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n02L', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n02M', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n02N', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'N02O', 0., 0., 0.)) // Marine de l'espace
    call RemoveUnit(CreateUnit(Player(15), 'N02P', 0., 0., 0.)) // Artificier gobelin
    call RemoveUnit(CreateUnit(Player(15), 'n02Q', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n02R', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n02S', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'n02T', 0., 0., 0.))
    //call RemoveUnit(CreateUnit(Player(15), 'n02U', 0., 0., 0.)) // Tour d'avant-poste
    call RemoveUnit(CreateUnit(Player(15), 'n02V', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'N02W', 0., 0., 0.)) // Prêtre de l'espoir
//--------------------------------------------------//
    call RemoveUnit(CreateUnit(Player(15), 'e001', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'e002', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'e003', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'e004', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'e005', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'e006', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'e007', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'e009', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'u000', 0., 0., 0.))
//--------------------------------------------------//
    //call RemoveUnit(CreateUnit(Player(15), 'o000', 0., 0., 0.)) // Château
    //call RemoveUnit(CreateUnit(Player(15), 'o001', 0., 0., 0.)) // Tour de garde
    //call RemoveUnit(CreateUnit(Player(15), 'o002', 0., 0., 0.)) // Tour de protection
    //call RemoveUnit(CreateUnit(Player(15), 'o003', 0., 0., 0.)) // Tour de garde 2
    call RemoveUnit(CreateUnit(Player(15), 'o004', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'o005', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'o006', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'o007', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'o008', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'o009', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'o00A', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'o00B', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'o00C', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'o00D', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'o00E', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'o00F', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'o00G', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'o00H', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'o00I', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'o00J', 0., 0., 0.))
    call RemoveUnit(CreateUnit(Player(15), 'o00L', 0., 0., 0.))

  // Items preloading
    set u = CreateUnit(Player(15), 'N022', 0., 0., 0.)
    call RemoveItem(UnitAddItemById(u, 'I000'))
    call RemoveItem(UnitAddItemById(u, 'I001'))
    call RemoveItem(UnitAddItemById(u, 'I002'))
    call RemoveItem(UnitAddItemById(u, 'I003'))
    call RemoveItem(UnitAddItemById(u, 'I004'))
    call RemoveItem(UnitAddItemById(u, 'I005'))
    call RemoveItem(UnitAddItemById(u, 'I006'))
    call RemoveItem(UnitAddItemById(u, 'I008'))
    call RemoveItem(UnitAddItemById(u, 'I009'))
    call RemoveItem(UnitAddItemById(u, 'I00A'))
    call RemoveItem(UnitAddItemById(u, 'I00B'))
    call RemoveItem(UnitAddItemById(u, 'I00C'))
    call RemoveItem(UnitAddItemById(u, 'I00D'))
    call RemoveItem(UnitAddItemById(u, 'I00E'))
    call RemoveItem(UnitAddItemById(u, 'I00F'))
    call RemoveItem(UnitAddItemById(u, 'I00G'))
    call RemoveItem(UnitAddItemById(u, 'I00H'))
    call RemoveItem(UnitAddItemById(u, 'I00I'))
    call RemoveItem(UnitAddItemById(u, 'I00J'))
    call RemoveItem(UnitAddItemById(u, 'I00K'))
    call RemoveItem(UnitAddItemById(u, 'I00L'))
    call RemoveItem(UnitAddItemById(u, 'I00M'))
    call RemoveItem(UnitAddItemById(u, 'I00N'))
    call RemoveItem(UnitAddItemById(u, 'I00O'))
    call RemoveItem(UnitAddItemById(u, 'I00P'))
    call RemoveItem(UnitAddItemById(u, 'I00Q'))
    call RemoveItem(UnitAddItemById(u, 'I00R'))
    call RemoveItem(UnitAddItemById(u, 'I00S'))
    call RemoveItem(UnitAddItemById(u, 'I00T'))
    call RemoveItem(UnitAddItemById(u, 'I00U'))
    call RemoveItem(UnitAddItemById(u, 'I00V'))
    call RemoveItem(UnitAddItemById(u, 'I00W'))
    call RemoveItem(UnitAddItemById(u, 'I00X'))
    call RemoveItem(UnitAddItemById(u, 'I00Y'))
    call RemoveItem(UnitAddItemById(u, 'I00Z'))
    call RemoveItem(UnitAddItemById(u, 'I010'))
    call RemoveItem(UnitAddItemById(u, 'I011'))
    call RemoveItem(UnitAddItemById(u, 'I012'))
    call RemoveItem(UnitAddItemById(u, 'I013'))
    call RemoveItem(UnitAddItemById(u, 'I014'))
    call RemoveItem(UnitAddItemById(u, 'I015'))
    call RemoveItem(UnitAddItemById(u, 'I016'))
    call RemoveItem(UnitAddItemById(u, 'I017'))
    call RemoveItem(UnitAddItemById(u, 'I018'))
    call RemoveItem(UnitAddItemById(u, 'I019'))
    call RemoveItem(UnitAddItemById(u, 'I01A'))
    call RemoveItem(UnitAddItemById(u, 'I01B'))
    call RemoveItem(UnitAddItemById(u, 'I01C'))
    call RemoveItem(UnitAddItemById(u, 'I01F'))
    call RemoveItem(UnitAddItemById(u, 'I01G'))
    call RemoveItem(UnitAddItemById(u, 'I01H'))
    call RemoveItem(UnitAddItemById(u, 'I01J'))
    call RemoveItem(UnitAddItemById(u, 'I01K'))
    call RemoveItem(UnitAddItemById(u, 'I01L'))
    call RemoveItem(UnitAddItemById(u, 'I01M'))
    call RemoveItem(UnitAddItemById(u, 'I01N'))
    call RemoveItem(UnitAddItemById(u, 'I01O'))
    call RemoveItem(UnitAddItemById(u, 'I01P'))
    call RemoveItem(UnitAddItemById(u, 'I01Q'))
    call RemoveItem(UnitAddItemById(u, 'I01R'))
    call RemoveItem(UnitAddItemById(u, 'I01S'))
    call RemoveItem(UnitAddItemById(u, 'I01T'))
    call RemoveItem(UnitAddItemById(u, 'I01U'))
    call RemoveItem(UnitAddItemById(u, 'I01V'))
    call RemoveItem(UnitAddItemById(u, 'I01W'))
    call RemoveItem(UnitAddItemById(u, 'I01X'))
    call RemoveItem(UnitAddItemById(u, 'I01Y'))
    call RemoveItem(UnitAddItemById(u, 'I01Z'))
    call RemoveItem(UnitAddItemById(u, 'I020'))
    call RemoveItem(UnitAddItemById(u, 'I021'))
    call RemoveItem(UnitAddItemById(u, 'I022'))
    call RemoveItem(UnitAddItemById(u, 'I023'))
    call RemoveItem(UnitAddItemById(u, 'I024'))
    call RemoveItem(UnitAddItemById(u, 'I025'))
    call RemoveItem(UnitAddItemById(u, 'I026'))
    call RemoveItem(UnitAddItemById(u, 'I027'))
    call RemoveItem(UnitAddItemById(u, 'I028'))
    //call RemoveItem(UnitAddItemById(u, 'I02A')) // Marque de guerre
    call RemoveItem(UnitAddItemById(u, 'I02B'))
    call RemoveItem(UnitAddItemById(u, 'I02C'))
    call RemoveItem(UnitAddItemById(u, 'I02D'))
    call RemoveItem(UnitAddItemById(u, 'I02E'))
    call RemoveItem(UnitAddItemById(u, 'I02F'))
    call RemoveItem(UnitAddItemById(u, 'I02G'))
    call RemoveItem(UnitAddItemById(u, 'I02H'))
    call RemoveItem(UnitAddItemById(u, 'I02I'))
    call RemoveItem(UnitAddItemById(u, 'I02J'))
    call RemoveItem(UnitAddItemById(u, 'I02K'))
  // Ability preloading
    call UnitAddAbility(u, 'A02S')
    call UnitAddAbility(u, 'A035')
    call UnitAddAbility(u, 'A04N')
    call UnitAddAbility(u, 'A07C')
    call UnitAddAbility(u, 'A07D')
    call UnitAddAbility(u, 'A07Y')
    call RemoveUnit(u)
    set u = null
  // Others
    call CameraSetSmoothingFactor(2.)
    set q = CreateQuest()
    call QuestSetTitle(q, "Credits")
    call QuestSetDescription(q, "alfredx_sotn, Anachron, assasin_lord, bananaHUNT, Bismouth, Blizzard, bloodyroadkill, Bobo_The_Kodo, Bustr_Bladr, Callahan, Champara Bros, CRAZYRUSSIAN, crl, Cross, Dan van Ohllus, Darkfang, Darky29, epsilon, EvilCryptLord, EviL_BuddhA, exfyre, exN, General Frank, Glen Elendra, Godslayer, GooS, HappyTauren, Hellx-Magnus, IamtheRper, JetFangInferno, jigrael, Juan_Ann, Juice_F, Kazzo, KelThuzad, Ket, KoTuK, marcus158, Matilda Knights, Mc !, Mr.Goblin, Mullar, Muoteck, Norinrad, olofmoleman, Paladon, PeeKay, Pyritie, RightField, shamanyouranus, SkriK, sPy, Technomancer, Thehive, The_Silent, tonic, VaLkYroN, Vexorian, vile, Volvox, WILLTHEALMIGHTY, X.e.r.e.X., 67chrome")
    call QuestSetIconPath(q, "ReplaceableTextures\\CommandButtons\\BTNDivineShieldOff.blp")
    call QuestSetRequired(q, true)
    call QuestSetDiscovered(q, true)
    call QuestSetCompleted(q, false)
    call ForForce(bj_FORCE_ALL_PLAYERS, function InitPlayers)
    set q = null
    call UncontrolTargetInit()
    call TriggerRegisterTimerEvent(t, 0.1, false)
    call HTSaveTriggerActionHandle(t, TRIGGERACTION, TriggerAddAction(t, function AtMapStart))
endfunction//===========================================================================
// Trigger: TimedEvents
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function ToExecuteAt300 takes nothing returns nothing
    call DisplayTextToAll(0., "|cfffccc66Info: Vous trouverez dans le menu des quêtes (F9) la liste des credits.|r")
endfunction
function ToExecuteAt180 takes nothing returns nothing
    call DisplayTextToAll(0., "|cfffccc66Info: Vous pouvez acheter des potions dans les boutiques entre les avant-postes|r")
endfunction
function ToExecuteAt150 takes nothing returns nothing
    call DisplayTextToAll(0., "|cfffccc66Info: Ramassez les pièces d'or au sol ou tuez des héros pour gagner de l'argent\nLes marques de guerre se gagnent en tuant les héros uniquement|r")
endfunction
function ToExecuteAt120 takes nothing returns nothing
    call DisplayTextToAll(15., "|cfffccc66Info: Capturez les avant-postes en restant à côté\nChaque avant-poste possède de l'équipement|r")
    call PingMinimapEx(APNX, APNY, 10., 255, 255, 0, false)
    call PingMinimapEx(APCX, APCY, 10., 255, 255, 0, false)
    call PingMinimapEx(APSX, APSY, 10., 255, 255, 0, false)
endfunction
function AInstructionsAt90ForForce takes nothing returns nothing
    local player p = GetEnumPlayer()
    local unit u = udg_Hero[GetPlayerId(p)]
    call SetPlayerTechResearched(p, 'R019', 1)
    if(u!=null) then
        if(IsUnitInTeam(u,1)) then
            call SetUnitX(u, GetRectCenterX(gg_rct_BH))
            call SetUnitY(u, GetRectCenterY(gg_rct_BH))
            if(GetLocal()==p) then
                call SetCameraPosition(GetRectCenterX(gg_rct_BH), GetRectCenterY(gg_rct_BH))
            endif
        elseif(IsUnitInTeam(u,2)) then
            call SetUnitX(u, GetRectCenterX(gg_rct_BO))
            call SetUnitY(u, GetRectCenterY(gg_rct_BO))
            if(GetLocal()==p) then
                call SetCameraPosition(GetRectCenterX(gg_rct_BO), GetRectCenterY(gg_rct_BO))
            endif
        endif
        call CreateEffectTimed(u, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl", "origin", 0.)
    endif
    set p = null
endfunction
function ToExecuteAt90 takes nothing returns nothing
    call DisplayTextToAll(0., "|cFFF00000! La partie commence !|r")
    call ForForce(bj_FORCE_ALL_PLAYERS, function AInstructionsAt90ForForce)
    set udg_GameStateStarted = true
    set udg_IACurrentTarget = GetRandomInt(0, 2)
    // Cleaning BeforeMapStart
    call TriggerRemoveAction(gg_trg_BeforeMapStart, HTLoadTriggerActionHandle(gg_trg_BeforeMapStart, TRIGGERACTION))
    call HTFlushChildHashtable(gg_trg_BeforeMapStart)
    call DestroyTrigger(gg_trg_BeforeMapStart)
    // Starting Triggers
    call EnableTrigger(gg_trg_Capping_Avant_Postes)
endfunction
function ToExecuteAt60 takes nothing returns nothing
    call DisplayTextToAll(0., "|cfffccc66Info: Les héros passent en mode repos et régénèrent plus rapidement losqu'aucun ennemi n'est à proximité|r")
endfunction
function ToExecuteAt45 takes nothing returns nothing
    call DisplayTextToAll(0., "|cfffccc66Info: Les héros montent de niveau toutes les 90 secondes.\nVous gagnez 8 points d'attributs à chaque fois que votre héros monte de niveau|r")
endfunction
function ToExecuteAt30 takes nothing returns nothing
    call DisplayTextToAll(10., "|cfffccc66Info: Les métiers accessibles dans le Cercle de choix permettent de transformer les plantes en potions ou parchemins|r")
endfunction
function ToExecuteAt15 takes nothing returns nothing
    call DisplayTextToAll(10., "|cfffccc66Info: Votre Cercle de choix (F8 ou Esc) vous permet d'augmenter les caractéristiques de votre héros|r")
endfunction
function ToExecuteAt3 takes nothing returns nothing
    call DisplayTextToAll(10., "|cfffccc66Choisissez un héros|r")
endfunction

function AIAHeroSelectionForForce takes nothing returns nothing
    call SetPlayerTechMaxAllowed(GetEnumPlayer(), GetUnitTypeId(bj_lastCreatedUnit), 0)
endfunction
function AIAHeroSelection takes nothing returns nothing
    local unit u = null
    local player p = GetEnumPlayer()
    local force f = CreateForce()
    local integer i = 1
    local integer id = GetPlayerId(p)
    local integer rand = 0
    if(IsPlayerInTeam(p,1)) then
        set rand = GetRandomInt(1, udg_RandomHumTotalHeroes)
        set bj_lastCreatedUnit = CreateUnit(p, udg_RandomHumHeroesType[rand], GetRectCenterX(gg_rct_BH), GetRectCenterY(gg_rct_BH), 0.)
    elseif(IsPlayerInTeam(p,2)) then
        set rand = GetRandomInt(1, udg_RandomOrcTotalHeroes)
        set bj_lastCreatedUnit = CreateUnit(p, udg_RandomOrcHeroesType[rand], GetRectCenterX(gg_rct_BO), GetRectCenterY(gg_rct_BO), 0.)
    endif
    set u = bj_lastCreatedUnit
    set udg_Hero[id] = u
    call SetPlayerName(p, "Ordinateur " + I2S(id+1))
    call SetPlayerTechResearched(p, 'R005', 3)
    call DisplayTextToAll(0., GetColorByPlayerId(id)+GetPlayerName(p)+"|r|cfffccc66 joue avec : "+GetUnitName(u)+" !|r")
    call ForceEnumAllies(f, p, null)
    call ForForce(f, function AIAHeroSelectionForForce)
    call DestroyForce(f)
    call MultiboardSetItemValue(MultiboardGetItem(udg_Board, udg_BoardLine[GetPlayerId(p)], 1), GetColorByPlayerId(GetPlayerId(p))+GetPlayerName(p)+"|r")
    call MultiboardSetItemIcon(MultiboardGetItem(udg_Board, udg_BoardLine[GetPlayerId(p)], 0), GetIconPathFromUnit(u))
    call StartCombatState(u)
    if(GetUnitTypeId(u)=='N00B') then
        call SetUnitUserData(u, 1)
    endif
    if(IsPlayerInTeam(p,1)) then
        loop
            exitwhen i > udg_RandomHumTotalHeroes
            if(GetUnitTypeId(u) == udg_RandomHumHeroesType[i]) then
                set udg_RandomHumHeroesType[i] = udg_RandomHumHeroesType[udg_RandomHumTotalHeroes]
                set udg_RandomHumTotalHeroes = (udg_RandomHumTotalHeroes - 1)
            endif
            set i = i + 1
        endloop
    elseif(IsPlayerInTeam(p,2)) then
        loop
            exitwhen i > udg_RandomOrcTotalHeroes
            if(GetUnitTypeId(u) == udg_RandomOrcHeroesType[i]) then
                set udg_RandomOrcHeroesType[i] = udg_RandomOrcHeroesType[udg_RandomOrcTotalHeroes]
                set udg_RandomOrcTotalHeroes = (udg_RandomOrcTotalHeroes - 1)
            endif
            set i = i + 1
        endloop
    endif
    call StartAI(u)
    set f = null
    set u = null
    set p = null
endfunction
function IAHeroSelection takes nothing returns nothing
    local force f = CreateForce()
    set udg_IACurrentTarget = GetRandomInt(0, 1)
    call ForceEnumPlayers(f, Condition(function IsComputer))
    call ForForce(f, function AIAHeroSelection)
    call DestroyForce(f)
    set f = null
endfunction//===========================================================================
// Trigger: BeforeMapStart
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function ABeforeMapStart takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local real x = 0.
    local real y = 0.
    if(not IsUnitHero(u)) then
        set u = null
        return
    endif
    if(IsUnitInTeam(u,1)) then
        set x = GetRectCenterX(gg_rct_BH)
        set y = GetRectCenterY(gg_rct_BH)
    elseif(IsUnitInTeam(u,2)) then
        set x = GetRectCenterX(gg_rct_BO)
        set y = GetRectCenterY(gg_rct_BO)
    endif
    call SetUnitX(u, x)
    call SetUnitY(u, y)
    call CreateEffectTimed(u, "Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl", "origin", 0.)
    call DisplayTextToOne(GetOwningPlayer(u), 0., "|cFFF00000La partie n'a pas encore commencée.|r")
    if(GetLocal()==GetOwningPlayer(u)) then
        call SetCameraPosition(x, y)
    endif
    set u = null
endfunction

function InitTrig_BeforeMapStart takes nothing returns nothing
    set gg_trg_BeforeMapStart = CreateTrigger()
    call TriggerRegisterLeaveRectSimple(gg_trg_BeforeMapStart, gg_rct_BH)
    call TriggerRegisterLeaveRectSimple(gg_trg_BeforeMapStart, gg_rct_BO)
    call HTSaveTriggerActionHandle(gg_trg_BeforeMapStart, TRIGGERACTION, TriggerAddAction(gg_trg_BeforeMapStart, function ABeforeMapStart))
endfunction//===========================================================================
// Trigger: PeriodicEvents
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function APlantsSpawn takes nothing returns nothing
    local integer i = 0
    loop
        exitwhen i>=udg_PlayersCount
        call CreateItem('I00I', GetRandomX(), GetRandomY())
        call CreateItem('I00K', GetRandomX(), GetRandomY())
        call CreateItem('I00L', GetRandomX(), GetRandomY())
        set i = i + 1
    endloop
    set i = 0
    loop
        exitwhen i>=(udg_PlayersCount/4+1)
        call CreateItem('I00N', GetRandomX(), GetRandomY())
        call CreateItem('I00O', GetRandomX(), GetRandomY())
        call CreateItem('I000', GetRandomX(), GetRandomY())
        set i = i + 1
    endloop
    set i = 0
    loop
        exitwhen i>=(udg_PlayersCount/6+1)
        call CreateItem('I00Y', GetRandomX(), GetRandomY())
        call CreateItem('I00M', GetRandomX(), GetRandomY())
        call CreateItem('I00X', GetRandomX(), GetRandomY())
        set i = i + 1
    endloop
endfunction

function ARappels takes nothing returns nothing
    if(GetPlayerState(GetLocal(), PLAYER_STATE_RESOURCE_FOOD_USED)>0) then
        call DisplayTextToOne(GetLocal(), 0., "|cFFF00000Vous avez des points d'attributs inutilisés.|r")
    endif
endfunction

function ItemDecayLoop takes nothing returns boolean
    local item it = GetFilterItem()
    if(it!=ENUMITEM) then
        if(GetWidgetLife(it)-20.<=0.) then
            call RemoveItem(it)
        else
            call SetWidgetLife(it, GetWidgetLife(it)-20.)
        endif
    endif
    set it = null
    return false
endfunction
function AItemDecay takes nothing returns nothing
    call EnumItemsInRect(bj_mapInitialPlayableArea, ItemDecayFilt, function DoNothing)
endfunction
globals
    boolexpr ItemDecayFilt = null
endglobals

function InitTrig_PeriodicEvents takes nothing returns nothing
    local trigger PlantsSpawn = CreateTrigger()
    local trigger RappelsPointsRestants = CreateTrigger()
    local trigger ItemDecay = CreateTrigger()
    set ItemDecayFilt = Filter(function ItemDecayLoop)
    call TriggerRegisterTimerEvent(PlantsSpawn, 240., true)
    call TriggerAddAction(PlantsSpawn, function APlantsSpawn)
    call TriggerRegisterTimerEvent(RappelsPointsRestants, 60., true)
    call TriggerAddAction(RappelsPointsRestants, function ARappels)
    call TriggerRegisterTimerEvent(ItemDecay, 30., true)
    call TriggerAddAction(ItemDecay, function AItemDecay)
endfunction//===========================================================================
// Trigger: UnitDieEvents
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function CUnitDieEvents takes nothing returns boolean
    return (IsUnitType(GetTriggerUnit(), UNIT_TYPE_STRUCTURE)==false)
endfunction

//function HeroAddExpFromDeath takes unit caster, unit killer returns nothing
//    local real factor=0.75
//    local integer xp=R2I(I2R(GetHeroXP(killer)-GetHeroXP(caster))*factor)
//    if(xp>0) then
//        call SetHeroXP(caster, GetHeroXP(caster)+xp, false)
//    endif
//endfunction
//function HeroAddExp takes unit caster, boolean hero returns nothing
//    local unit u = null
//    local group g = GetAlliesInRangeOfUnit(caster, 1500., 0)
//    local integer xp = 0
//    local real div = 1.05
//    local real factor = 0.50
//    call GroupKeepHeroes(g)
//    if(hero) then
//        set xp=85
//    else
//        set xp=25
//    endif
//    if(IsUnitInTeam(caster,1)) then
//        set div=div-(0.05*I2R(udg_PlayersTeam1))
//    elseif(IsUnitInTeam(caster,2)) then
//        set div=div-(0.05*I2R(udg_PlayersTeam2))
//    endif
//    set xp=R2I(I2R(xp)*div)
//    call SetHeroXP(caster, GetHeroXP(caster)+xp, false)
//    set xp=R2I(I2R(xp)*factor)
//    loop
//        set u = FirstOfGroup(g)
//        exitwhen u==null
//        call GroupRemoveUnit(g, u)
//        if(u!=caster) then
//            call SetHeroXP(u, GetHeroXP(u)+xp, false)
//        endif
//    endloop
//    call DeleteGroup(g)
//    set u = null
//endfunction

function HeroDropItem takes unit hero returns nothing
    local player p = GetOwningPlayer(hero)
    local item it = null
    local real GoldLoss = 0.15
    local real x = GetUnitX(hero)
    local real y = GetUnitY(hero)
    local integer i = 0
    if(UnitHasItemOfType(hero, 'I02H')) then // Anneau de protection
        set GoldLoss = 0.05
    endif
    set i = R2I(I2R(GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD))*GoldLoss)
    if(UnitHasItemOfType(hero, 'I00J')) then // Rune de l'éternel
        set i = 0
    endif
    if(i>0) then
        call SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD)-i)
        if(i<=1) then
            call DisplayTextToOne(p, 0., "|cfffccc66Vous êtes dépouillé d'|r|cFFF00000une|r|cfffccc66 pièce d'or après votre mort.|r")
        else
            call DisplayTextToOne(p, 0., "|cfffccc66Vous êtes dépouillé de |r|cFFF00000"+I2S(i)+"|r|cfffccc66 pièces d'or après votre mort.|r")
        endif
    endif
    if(GetRandomInt(0, 100)<GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD)) then
        call CreateItem('I018', x, y) // Pièce d'or
    else
        set i = 0
        loop
            exitwhen i>=6
            set it = UnitItemInSlot(hero, i)
            if(it!=null) then
                if(GetItemLevel(it)>0) then
                    if(GetRandomInt(0, 100)<(20+(GetItemCharges(it)-1)*(5-GetItemLevel(it))-GetItemLevel(it)*4)) then
                        call CreateItem(GetItemTypeId(it), x, y)
                    endif
                endif
            endif
            set i=i+1
        endloop
    endif
    set it = null
    set p = null
endfunction

function AUnitDieEvents takes nothing returns nothing
    local unit dying = GetTriggerUnit()
    local unit killing = GetKillingUnit()
    local player dying_owner = GetOwningPlayer(dying)
    local player killing_owner = GetOwningPlayer(killing)
    local integer dying_id = GetPlayerId(dying_owner)
    local integer killing_id = GetPlayerId(killing_owner)
    local real x = GetUnitX(dying)
    local real y = GetUnitY(dying)
    if(IsUnitType(dying, UNIT_TYPE_HERO)==true) then
        set udg_BoardDeathCount[dying_id]=udg_BoardDeathCount[dying_id]+1
        call MultiboardSetItemValue(MultiboardGetItem(udg_Board, udg_BoardLine[dying_id], 4), I2S(udg_BoardDeathCount[dying_id]))
        if(IsUnitType(killing, UNIT_TYPE_HERO)==true and IsUnitEnemy(dying, killing_owner)==true) then
            call HeroDropItem(dying)
            //call HeroAddExpFromDeath(dying,killing)
            if(killing_id<12) then
                //call HeroAddExp(killing, true)
                call MultiboardSetItemValue(MultiboardGetItem(udg_Board, udg_BoardLine[killing_id], 2), I2S(GetPlayerScore(killing_owner, PLAYER_SCORE_HEROES_KILLED)))
            endif
        endif
    elseif(IsUnitType(killing, UNIT_TYPE_HERO)==true) then
        if(IsUnitEnemy(dying, killing_owner)==true) then
            if(GetPlayerId(killing_owner)<12) then
                call MultiboardSetItemValue(MultiboardGetItem(udg_Board, udg_BoardLine[killing_id], 3), I2S(GetPlayerScore(killing_owner, PLAYER_SCORE_UNITS_KILLED)))
                //call HeroAddExp(killing, false)
            endif
            if((GetOwningPlayer(dying)==GetPlayer(13))or(GetOwningPlayer(dying)==GetPlayer(14))) then
                // Si joueur du tué est Player(13) ou Player(14)
                if(GetRandomInt(0, 100)<=15) then // 15% chances
                    call CreateItem('I00E', x, y) // Crée pièce de cuivre
                else
                    if(GetRandomInt(0, 100)<=3) then // 0.15*0.03 % de chances
                        call CreateItem('I018', x, y) // Crée pièce d'or
                    else
                        if(GetRandomInt(0, 100)<=2) then // 0.15*0.03*0.02 % de chances
                            call CreateItem('I01J', x, y) // Crée rune amélioration arme
                        endif
                    endif
                endif
            endif
        endif
    endif
    set killing_owner = null
    set dying_owner = null
    set killing = null
    set dying = null
endfunction

function InitTrig_UnitDieEvents takes nothing returns nothing
    set gg_trg_UnitDieEvents = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_UnitDieEvents, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(gg_trg_UnitDieEvents, Condition(function CUnitDieEvents))
    call TriggerAddAction(gg_trg_UnitDieEvents, function AUnitDieEvents)
endfunction//===========================================================================
// Trigger: PlayerLeave
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function RemovePlayerOnDefeat takes player p returns nothing
    local integer id = GetPlayerId(p)
    call DisplayTextToAll(0., "|cFFF00000"+GetPlayerName(p)+" a quitté la partie.|r")
    call StopCombatState(udg_Hero[id])
    call DisableTrigger(gg_trg_UnitDieEvents)
    call DisableTrigger(gg_trg_DeathMessageAndRespawn)
    call HTFlushChildHashtable(udg_Hero[id])
    call KillUnit(udg_Hero[id])
    call RemoveUnit(udg_Hero[id])
    set udg_Hero[id]=null
    call EnableTrigger(gg_trg_UnitDieEvents)
    call EnableTrigger(gg_trg_DeathMessageAndRespawn)
    call MultiboardSetItemValue(MultiboardGetItem(udg_Board, udg_BoardLine[id], 1), "-")
    set udg_PlayersCount = udg_PlayersCount - 1
    if(IsPlayerInTeam(GetPlayer(id),1)) then
            set udg_PlayersTeam1 = udg_PlayersTeam1 - 1
    elseif(IsPlayerInTeam(GetPlayer(id),2)) then
        set udg_PlayersTeam2 = udg_PlayersTeam2 - 1
    endif
    call HTFlushChildHashtable(p)
    call DisableTrigger(gg_trg_PlayerLeave)
    call RemovePlayer(p, PLAYER_GAME_RESULT_DEFEAT)
    if(GetLocal()==p) then
        call EndGame(true)
    endif
    call EnableTrigger(gg_trg_PlayerLeave)
endfunction
function RemovePlayerOnVictory takes player p returns nothing
    local integer id = GetPlayerId(p)
    call DisplayTextToAll(0., "|cFFF00000"+GetPlayerName(p)+" a quitté la partie.|r")
    call StopCombatState(udg_Hero[id])
    call DisableTrigger(gg_trg_UnitDieEvents)
    call DisableTrigger(gg_trg_DeathMessageAndRespawn)
    call HTFlushChildHashtable(udg_Hero[id])
    call KillUnit(udg_Hero[id])
    call RemoveUnit(udg_Hero[id])
    set udg_Hero[id]=null
    call EnableTrigger(gg_trg_UnitDieEvents)
    call EnableTrigger(gg_trg_DeathMessageAndRespawn)
    call MultiboardSetItemValue(MultiboardGetItem(udg_Board, udg_BoardLine[id], 1), "-")
    set udg_PlayersCount = udg_PlayersCount - 1
   if(IsPlayerInTeam(GetPlayer(id),1)) then
            set udg_PlayersTeam1 = udg_PlayersTeam1 - 1
    elseif(IsPlayerInTeam(GetPlayer(id),2)) then
        set udg_PlayersTeam2 = udg_PlayersTeam2 - 1
    endif
    call HTFlushChildHashtable(p)
    call DisableTrigger(gg_trg_PlayerLeave)
    call RemovePlayer(p, PLAYER_GAME_RESULT_VICTORY)
    if(GetLocal()==p) then
        call EndGame(true)
    endif
    call EnableTrigger(gg_trg_PlayerLeave)
endfunction

function APlayerLeave takes nothing returns nothing
    call RemovePlayerOnDefeat(GetTriggerPlayer())
endfunction

function InitTrig_PlayerLeave takes nothing returns nothing
    set gg_trg_PlayerLeave = CreateTrigger()
    call TriggerRegisterPlayerEvent(gg_trg_PlayerLeave, GetPlayer(0), EVENT_PLAYER_LEAVE)
    call TriggerRegisterPlayerEvent(gg_trg_PlayerLeave, GetPlayer(1), EVENT_PLAYER_LEAVE)
    call TriggerRegisterPlayerEvent(gg_trg_PlayerLeave, GetPlayer(2), EVENT_PLAYER_LEAVE)
    call TriggerRegisterPlayerEvent(gg_trg_PlayerLeave, GetPlayer(3), EVENT_PLAYER_LEAVE)
    call TriggerRegisterPlayerEvent(gg_trg_PlayerLeave, GetPlayer(4), EVENT_PLAYER_LEAVE)
    call TriggerRegisterPlayerEvent(gg_trg_PlayerLeave, GetPlayer(5), EVENT_PLAYER_LEAVE)
    call TriggerRegisterPlayerEvent(gg_trg_PlayerLeave, GetPlayer(6), EVENT_PLAYER_LEAVE)
    call TriggerRegisterPlayerEvent(gg_trg_PlayerLeave, GetPlayer(7), EVENT_PLAYER_LEAVE)
    call TriggerRegisterPlayerEvent(gg_trg_PlayerLeave, GetPlayer(8), EVENT_PLAYER_LEAVE)
    call TriggerRegisterPlayerEvent(gg_trg_PlayerLeave, GetPlayer(9), EVENT_PLAYER_LEAVE)
    call TriggerRegisterPlayerEvent(gg_trg_PlayerLeave, GetPlayer(10), EVENT_PLAYER_LEAVE)
    call TriggerRegisterPlayerEvent(gg_trg_PlayerLeave, GetPlayer(11), EVENT_PLAYER_LEAVE)
    call TriggerAddAction(gg_trg_PlayerLeave, function APlayerLeave)
endfunction//===========================================================================
// Trigger: Castles destroyed
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function VictoryLeave takes nothing returns nothing
    local trigger t = GetTriggeringTrigger()
    local player p = GetTriggerPlayer()
    local dialog d = GetClickedDialog()
    local button b = GetClickedButton()
    if(b==HTLoadButtonHandle(d, BUTTON1)) then
    elseif(b==HTLoadButtonHandle(d, BUTTON2)) then
        call RemovePlayerOnVictory(p)
    endif
    call DialogDisplay(p, d, false)
    call HTFlushChildHashtable(d)
    call DialogClear(d)
    call DialogDestroy(d)
    call TriggerRemoveAction(t, HTLoadTriggerActionHandle(t, TRIGGERACTION))
    call HTFlushChildHashtable(t)
    call DestroyTrigger(t)
    set b = null
    set d = null
    set p = null
    set t = null
endfunction
function DefeatLeave takes nothing returns nothing
    local trigger t = GetTriggeringTrigger()
    local player p = GetTriggerPlayer()
    local dialog d = GetClickedDialog()
    local button b = GetClickedButton()
    if(b==HTLoadButtonHandle(d, BUTTON1)) then
    elseif(b==HTLoadButtonHandle(d, BUTTON2)) then
        call RemovePlayerOnDefeat(p)
    endif
    call DialogDisplay(p, d, false)
    call HTFlushChildHashtable(d)
    call DialogClear(d)
    call DialogDestroy(d)
    call TriggerRemoveAction(t, HTLoadTriggerActionHandle(t, TRIGGERACTION))
    call HTFlushChildHashtable(t)
    call DestroyTrigger(t)
    set b = null
    set d = null
    set p = null
    set t = null
endfunction
//call EnableUserControl( true )
//call EnableUserUI(false)
function VictoryPlayer takes player p returns nothing
    local trigger t = CreateTrigger()
    local dialog d = DialogCreate()
    local button continue = DialogAddButton(d, "Continuer", GetLocalizedHotkey("c"))
    local button leave = DialogAddButton(d, "Quitter", GetLocalizedHotkey("q"))
    call HTSaveButtonHandle(d, BUTTON1, continue)
    call HTSaveButtonHandle(d, BUTTON2, leave)
    call TriggerRegisterDialogButtonEvent(t, continue)
    call TriggerRegisterDialogButtonEvent(t, leave)
    call HTSaveTriggerActionHandle(t, TRIGGERACTION, TriggerAddAction(t, function VictoryLeave))
    call DialogSetMessage(d, "Vous avez gagné")
    call DialogDisplay(p, d, true)
    set leave = null
    set continue = null
    set d = null
    set t = null
endfunction
function DefeatPlayer takes player p returns nothing
    local trigger t = CreateTrigger()
    local dialog d = DialogCreate()
    local button continue = DialogAddButton(d, "Continuer", GetLocalizedHotkey("c"))
    local button leave = DialogAddButton(d, "Quitter", GetLocalizedHotkey("q"))
    call HTSaveButtonHandle(d, BUTTON1, continue)
    call HTSaveButtonHandle(d, BUTTON2, leave)
    call TriggerRegisterDialogButtonEvent(t, continue)
    call TriggerRegisterDialogButtonEvent(t, leave)
    call HTSaveTriggerActionHandle(t, TRIGGERACTION, TriggerAddAction(t, function DefeatLeave))
    call DialogSetMessage(d, "Vous avez perdu")
    call DialogDisplay(p, d, true)
    set leave = null
    set continue = null
    set d = null
    set t = null
endfunction

function CastlesDestroyed takes nothing returns nothing
    local real x
    local real y
    local integer i =0
    call DisableTrigger(GetTriggeringTrigger())
    if(GetTriggerUnit()==gg_unit_h000_0013) then
        loop
            exitwhen i>=12
            if(IsSlotHuman(GetPlayer(i))) then
                if(IsPlayerInTeam(GetPlayer(i),1)) then
                    call DefeatPlayer(GetPlayer(i))
                else
                    call VictoryPlayer(GetPlayer(i))
                endif
            endif
            set i = i + 1
        endloop
    elseif(GetTriggerUnit()==gg_unit_o000_0012) then
        loop
            exitwhen i>=12
            if(IsSlotHuman(GetPlayer(i))) then
                if(IsPlayerInTeam(GetPlayer(i),2)) then
                    call DefeatPlayer(GetPlayer(i))
                else
                    call VictoryPlayer(GetPlayer(i))
                endif
            endif
            set i = i + 1
        endloop
    endif
    call DisableTrigger(gg_trg_CreepSpawn)
    call DisableTrigger(gg_trg_BossSpawn)
    
    set udg_GameStateEnd = true
    call TimerDialogDisplay(udg_WaveTimerDialog, false)
    call PauseTimer(udg_WaveTimer)
    call DestroyTimer(udg_WaveTimer)
    call DestroyTimerDialog(udg_WaveTimerDialog)
    set udg_WaveCount = 11
    call DisplayTimer()
    call DisplayGroup()
endfunction

function InitTrig_Castles_destroyed takes nothing returns nothing
    set gg_trg_Castles_destroyed = CreateTrigger()
    call TriggerRegisterUnitEvent(gg_trg_Castles_destroyed, gg_unit_h000_0013, EVENT_UNIT_DEATH)
    call TriggerRegisterUnitEvent(gg_trg_Castles_destroyed, gg_unit_o000_0012, EVENT_UNIT_DEATH)
    call TriggerAddAction(gg_trg_Castles_destroyed, function CastlesDestroyed)
endfunction//===========================================================================
// Trigger: Cheats
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function CCheats takes nothing returns boolean
    return udg_PlayersCount<3
endfunction
function ACheats takes nothing returns nothing
    local player p = GetTriggerPlayer()
    local unit u = GroupPickRandomUnit(GetUnitsSelectedAll(p))
    if(GetEventPlayerChatString()=="kill") then
        call KillUnit(u)
    endif
    if(GetEventPlayerChatString()=="test") then
        call SetPlayerTechResearched(p, 'R004', 1)
    endif
    if(GetEventPlayerChatString()=="add") then
        call SetHeroStr(u, GetHeroStr(u, false)+10, true)
        call SetHeroAgi(u, GetHeroAgi(u, false)+10, true)
        call SetHeroInt(u, GetHeroInt(u, false)+10, true)
    endif
    if(GetEventPlayerChatString()=="px") then
        call SetHeroLevel(u, 20, false)
    endif
    if(GetEventPlayerChatString()=="lvl") then
        call SetHeroLevel(u, GetHeroLevel(u)+1, false)
    endif
    if(GetEventPlayerChatString()=="isee") then
        call FogMaskEnable(false)
        call FogEnable(false)
    endif
    if(GetEventPlayerChatString()=="ms") then
        call MortalStrikeTarget(u, 10.)
    endif
    if(GetEventPlayerChatString()=="blind") then
        call BlindTarget(u, 10.)
    endif
    if(GetEventPlayerChatString()=="disarm") then
        call DisarmTarget(u, 10.)
    endif
    if(GetEventPlayerChatString()=="stun") then
        call StunTarget(u, 3.)
    endif
    if(GetEventPlayerChatString()=="mute") then
        call MuteTarget(u, 3.)
    endif
    if(GetEventPlayerChatString()=="fear") then
        call FearTarget(u, 5.)
    endif
    if(GetEventPlayerChatString()=="immune") then
        call ImmuneTarget(u, 5.)
    endif
    if(GetEventPlayerChatString()=="dispel") then
        call DispelTarget(u, u, true, true)
    endif
    set u = null
    set p = null
endfunction

function InitTrig_Cheats takes nothing returns nothing
    set gg_trg_Cheats = CreateTrigger()
    call TriggerRegisterPlayerChatEvent(gg_trg_Cheats, GetPlayer(0), "", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Cheats, GetPlayer(1), "", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Cheats, GetPlayer(2), "", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Cheats, GetPlayer(3), "", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Cheats, GetPlayer(4), "", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Cheats, GetPlayer(5), "", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Cheats, GetPlayer(6), "", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Cheats, GetPlayer(7), "", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Cheats, GetPlayer(8), "", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Cheats, GetPlayer(9), "", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Cheats, GetPlayer(10), "", false)
    call TriggerRegisterPlayerChatEvent(gg_trg_Cheats, GetPlayer(11), "", false)
    call TriggerAddCondition(gg_trg_Cheats, Condition(function CCheats))
    call TriggerAddAction(gg_trg_Cheats, function ACheats)
endfunction//===========================================================================
// Trigger: ChangePatrolOrder
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function CChangePatrolOrder takes nothing returns boolean
    return IsUnitHero(GetTriggerUnit()) and GetIssuedOrderId()==PATROL
endfunction
function AChangePatrolOrder takes nothing returns nothing
    call IssuePointOrderById(GetTriggerUnit(), ATTACK, GetOrderPointX(), GetOrderPointY())
endfunction

function InitTrig_ChangePatrolOrder takes nothing returns nothing
    set gg_trg_ChangePatrolOrder = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_ChangePatrolOrder, EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER)
    call TriggerAddCondition(gg_trg_ChangePatrolOrder, Condition(function CChangePatrolOrder))
    call TriggerAddAction(gg_trg_ChangePatrolOrder, function AChangePatrolOrder)
endfunction//===========================================================================
// Trigger: ItemSpells
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function AParcheminDeLiberation takes nothing returns nothing
    call NoPathingTimed(GetTriggerUnit(), 8.)
endfunction

function AGantsDeLEternel takes nothing returns nothing
    call SetUnitXY(GetTriggerUnit(), GetSpellTargetX(), GetSpellTargetY())
endfunction

function ABouclierDeLEternel takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    call ModLife(caster, 0.5 * GetUnitState(caster, UNIT_STATE_MAX_LIFE))
    call ModMana(caster, 0.5 * GetUnitState(caster, UNIT_STATE_MAX_MANA))
    set caster = null
endfunction

function AArmureDeLEternel takes nothing returns nothing
    call ImmuneTarget(GetTriggerUnit(), 6.)
endfunction

function ARuneDuDemon takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local group g = NewGroup()
    local real duration = 4.
    call DefineUnitGroup(g, GetUnitX(caster), GetUnitY(caster), 350., GetOwningPlayer(caster), true, 25)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call BlindTarget(u, duration)
        call DisarmTarget(u, duration)
        call FearTarget(u, duration)
        call DisorientTarget(u, duration)
        call MuteTarget(u, duration)
        call SlowTarget(u, duration)
        call MortalStrikeTarget(u, duration)
    endloop
    call DeleteGroup(g)
    set u = null
    set caster = null
endfunction

function AItemSpells takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid=='A031') then
        call ExecuteFunc("AParcheminDeLiberation")
    elseif(abilid=='A04X') then
        call ExecuteFunc("AGantsDeLEternel")
    elseif(abilid=='A04Z') then
        call ExecuteFunc("ABouclierDeLEternel")
    elseif(abilid=='A080') then
        call ExecuteFunc("AArmureDeLEternel")
    elseif(abilid=='A038') then
        call ExecuteFunc("ARuneDuDemon")
    endif
endfunction

function InitTrig_ItemSpells takes nothing returns nothing
    set gg_trg_ItemSpells = CreateTrigger()
    call TriggerRegisterAnyUnitEvent(gg_trg_ItemSpells, EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerAddAction(gg_trg_ItemSpells, function AItemSpells)
endfunction//===========================================================================
// Trigger: ItemSystem
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function CUnstackItems takes nothing returns boolean
    return GetIssuedOrderId()>=852002 and GetIssuedOrderId()<=852007
endfunction
function UnstackItems takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local item it = GetOrderTargetItem()
    local item itw = UnitItemInSlot(u, (GetIssuedOrderId()-852002))
    local integer i = 0
    if(itw!=null) then
        if(it==itw) then
            if(GetItemCharges(it)>1) then
                loop
                    exitwhen i>=6
                    if(UnitItemInSlot(u, i) == null) then
                        call DisableTrigger(gg_trg_ItemSystem)
                        call SetItemCharges(it, GetItemCharges(it)-1)
                        call UnitAddItem(u, CreateItem(GetItemTypeId(it), 0., 0.))
                        call EnableTrigger(gg_trg_ItemSystem)
                        exitwhen true
                    endif
                    set i = i + 1
                endloop
            endif
        elseif(GetItemTypeId(it)==GetItemTypeId(itw)) then
            if(GetItemCharges(it)>0) then
                call SetItemCharges(it, GetItemCharges(it)+GetItemCharges(itw))
                call RemoveItem(itw)
            endif
        endif
    endif
    set itw = null
    set it = null
    set u = null
endfunction
function ItemSystem takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local player p = GetOwningPlayer(u)
    local item it = GetManipulatedItem()
    local item it2 = null
    local integer i = 0
    local real X = GetItemX(it)
    local real Y = GetItemY(it)
    local string category = null
    local boolean b = true
  ///Amélioration arme
    if(GetItemTypeId(it) == 'I01J') then
        set i = 0
        loop
            exitwhen i==6
            if(GetItemTypeId(UnitItemInSlot(u, i))=='I00C') then
                if(GetRandomInt(0, 100)<=25) then
                    call RemoveItem(UnitItemInSlot(u, i))
                    call UnitAddItemToSlotById(u, 'I011', i)
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme améliorée!|r")
                else
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme inchangée.|r")
                endif
            elseif(GetItemTypeId(UnitItemInSlot(u, i))=='I00B') then
                if(GetRandomInt(0, 100)<=25) then
                    call RemoveItem(UnitItemInSlot(u, i))
                    call UnitAddItemToSlotById(u, 'I013', i)
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme améliorée!|r")
                else
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme inchangée.|r")
                endif
            elseif(GetItemTypeId(UnitItemInSlot(u, i))=='I00D') then
                if(GetRandomInt(0, 100)<=25) then
                    call RemoveItem(UnitItemInSlot(u, i))
                    call UnitAddItemToSlotById(u, 'I012', i)
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme améliorée!|r")
                else
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme inchangée.|r")
                endif
            elseif(GetItemTypeId(UnitItemInSlot(u, i))=='I011') then
                if(GetRandomInt(0, 100)<=25) then
                    call RemoveItem(UnitItemInSlot(u, i))
                    call UnitAddItemToSlotById(u, 'I015', i)
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme améliorée!|r")
                else
                    call RemoveItem(UnitItemInSlot(u, i))
                    call UnitAddItemToSlotById(u, 'I00C', i)
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme retrogradée.|r")
                endif
            elseif(GetItemTypeId(UnitItemInSlot(u, i))=='I013') then
                if(GetRandomInt(0, 100)<=25) then
                    call RemoveItem(UnitItemInSlot(u, i))
                    call UnitAddItemToSlotById(u, 'I017', i)
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme améliorée!|r")
                else
                    call RemoveItem(UnitItemInSlot(u, i))
                    call UnitAddItemToSlotById(u, 'I00B', i)
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme retrogradée.|r")
                endif
            elseif(GetItemTypeId(UnitItemInSlot(u, i))=='I012') then
                if(GetRandomInt(0, 100)<=25) then
                    call RemoveItem(UnitItemInSlot(u, i))
                    call UnitAddItemToSlotById(u, 'I016', i)
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme améliorée!|r")
                else
                    call RemoveItem(UnitItemInSlot(u, i))
                    call UnitAddItemToSlotById(u, 'I00D', i)
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme retrogradée.|r")
                endif
            elseif(GetItemTypeId(UnitItemInSlot(u, i))=='I007') then
                if(GetRandomInt(0, 100)<=25) then
                    call RemoveItem(UnitItemInSlot(u, i))
                    call UnitAddItemToSlotById(u, 'I01C', i)
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme améliorée!|r")
                else
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme inchangée.|r")
                endif
            elseif(GetItemTypeId(UnitItemInSlot(u, i))=='I021') then
                if(GetRandomInt(0, 100)<=25) then
                    call RemoveItem(UnitItemInSlot(u, i))
                    call UnitAddItemToSlotById(u, 'I023', i)
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme améliorée!|r")
                else
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme inchangée.|r")
                endif
            elseif(GetItemTypeId(UnitItemInSlot(u, i))=='I01Z') then
                if(GetRandomInt(0, 100)<=25) then
                    call RemoveItem(UnitItemInSlot(u, i))
                    call UnitAddItemToSlotById(u, 'I020', i)
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme améliorée!|r")
                else
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme inchangée.|r")
                endif
            elseif(GetItemTypeId(UnitItemInSlot(u, i))=='I01C') then
                if(GetRandomInt(0, 100)<=25) then
                    call RemoveItem(UnitItemInSlot(u, i))
                    call UnitAddItemToSlotById(u, 'I01E', i)
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme améliorée!|r")
                else
                    call RemoveItem(UnitItemInSlot(u, i))
                    call UnitAddItemToSlotById(u, 'I007', i)
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme retrogradée.|r")
                endif
            elseif(GetItemTypeId(UnitItemInSlot(u, i))=='I023') then
                if(GetRandomInt(0, 100)<=25) then
                    call RemoveItem(UnitItemInSlot(u, i))
                    call UnitAddItemToSlotById(u, 'I022', i)
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme améliorée!|r")
                else
                    call RemoveItem(UnitItemInSlot(u, i))
                    call UnitAddItemToSlotById(u, 'I021', i)
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme retrogradée.|r")
                endif
            elseif(GetItemTypeId(UnitItemInSlot(u, i))=='I020') then
                if(GetRandomInt(0, 100)<=25) then
                    call RemoveItem(UnitItemInSlot(u, i))
                    call UnitAddItemToSlotById(u, 'I01I', i)
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme améliorée!|r")
                else
                    call RemoveItem(UnitItemInSlot(u, i))
                    call UnitAddItemToSlotById(u, 'I01Z', i)
                    call DisplayTextToOne(p, 0., "|cfffccc66Arme retrogradée.|r")
                endif
            endif
            set i = i + 1
        endloop
    endif
  // Alchimie rang 1
    if(GetPlayerTechCount(p, 'R005', true)>=1) then
        if(GetItemTypeId(it)=='I00I') then
            set it2 = CreateItem('I00Q', X, Y)
            call SetItemCharges(it2, GetItemCharges(it))
            call RemoveItem(it)
            call UnitAddItem(u, it2)
            set b = false
        elseif(GetItemTypeId(it)=='I00K') then
            set it2 = CreateItem('I00R', X, Y)
            call SetItemCharges(it2, GetItemCharges(it))
            call RemoveItem(it)
            call UnitAddItem(u, it2)
            set b = false
        elseif(GetItemTypeId(it)=='I00L') then
            set it2 = CreateItem('I00S', X, Y)
            call SetItemCharges(it2, GetItemCharges(it))
            call RemoveItem(it)
            call UnitAddItem(u, it2)
            set b = false
        endif
    endif
  // Alchimie rang 2
    if(GetPlayerTechCount(p, 'R005', true)>=2) then
        if(GetItemTypeId(it)=='I00N') then
            set it2 = CreateItem('I00T', X, Y)
            call SetItemCharges(it2, GetItemCharges(it))
            call RemoveItem(it)
            call UnitAddItem(u, it2)
            set b = false
        elseif(GetItemTypeId(it)=='I000') then
            set it2 = CreateItem('I00P', X, Y)
            call SetItemCharges(it2, GetItemCharges(it))
            call RemoveItem(it)
            call UnitAddItem(u, it2)
            set b = false
        elseif(GetItemTypeId(it)=='I00O') then
            set it2 = CreateItem('I005', X, Y)
            call SetItemCharges(it2, GetItemCharges(it))
            call RemoveItem(it)
            call UnitAddItem(u, it2)
            set b = false
        endif
    endif
  // Alchimie rang 3
    if(GetPlayerTechCount(p, 'R005', true)>=3) then
        if(GetItemTypeId(it)=='I00M') then
            set it2 = CreateItem('I00V', X, Y)
            call SetItemCharges(it2, GetItemCharges(it))
            call RemoveItem(it)
            call UnitAddItem(u, it2)
            set b = false
        elseif(GetItemTypeId(it)=='I00Y') then
            set it2 = CreateItem('I00U', X, Y)
            call SetItemCharges(it2, GetItemCharges(it))
            call RemoveItem(it)
            call UnitAddItem(u, it2)
            set b = false
        elseif(GetItemTypeId(it)=='I00X') then
            set it2 = CreateItem('I00W', X, Y)
            call SetItemCharges(it2, GetItemCharges(it))
            call RemoveItem(it)
            call UnitAddItem(u, it2)
            set b = false
        endif
    endif
  // Enchantement rang 1
    if(GetPlayerTechCount(p, 'R01A', true)>=1) then
        if(GetItemTypeId(it)=='I00I') then
            set it2 = CreateItem('I010', X, Y)
            call SetItemCharges(it2, GetItemCharges(it) * 2)
            call RemoveItem(it)
            call UnitAddItem(u, it2)
            set b = false
        elseif(GetItemTypeId(it)=='I00K') then
            set it2 = CreateItem('I01S', X, Y)
            call SetItemCharges(it2, GetItemCharges(it) * 2)
            call RemoveItem(it)
            call UnitAddItem(u, it2)
            set b = false
        elseif(GetItemTypeId(it)=='I00L') then
            set it2 = CreateItem('I01R', X, Y)
            call SetItemCharges(it2, GetItemCharges(it) * 2)
            call RemoveItem(it)
            call UnitAddItem(u, it2)
            set b = false
        endif
    endif
  // Enchantement rang 2
    if(GetPlayerTechCount(p, 'R01A', true)>=2) then
        if(GetItemTypeId(it)=='I00N') then
            set it2 = CreateItem('I01T', X, Y)
            call SetItemCharges(it2, GetItemCharges(it) * 2)
            call RemoveItem(it)
            call UnitAddItem(u, it2)
            set b = false
        elseif(GetItemTypeId(it)=='I000') then
            set it2 = CreateItem('I01U', X, Y)
            call SetItemCharges(it2, GetItemCharges(it) * 2)
            call RemoveItem(it)
            call UnitAddItem(u, it2)
            set b = false
        elseif(GetItemTypeId(it)=='I00O') then
            set it2 = CreateItem('I02L', X, Y)
            call SetItemCharges(it2, GetItemCharges(it) * 2)
            call RemoveItem(it)
            call UnitAddItem(u, it2)
            set b = false
        endif
    endif
  // Enchantement rang 3
    if(GetPlayerTechCount(p, 'R01A', true)>=3) then
        if(GetItemTypeId(it)=='I00M') then
            set it2 = CreateItem('I01X', X, Y)
            call SetItemCharges(it2, GetItemCharges(it))
            call RemoveItem(it)
            call UnitAddItem(u, it2)
            set b = false
        elseif(GetItemTypeId(it)=='I00Y') then
            set it2 = CreateItem('I01Y', X, Y)
            call SetItemCharges(it2, GetItemCharges(it))
            call RemoveItem(it)
            call UnitAddItem(u, it2)
            set b = false
        elseif(GetItemTypeId(it)=='I00X') then
            set it2 = CreateItem('I01V', X, Y)
            call SetItemCharges(it2, GetItemCharges(it))
            call RemoveItem(it)
            call UnitAddItem(u, it2)
            set b = false
        endif
    endif
  // ItemSystem
    if(b) then
    if(GetItemType(it) == ITEM_TYPE_CAMPAIGN) then
        set category = "anneaux"
    elseif(GetItemType(it) == ITEM_TYPE_PURCHASABLE) then
        set category = "paires de gants"
    elseif(GetItemType(it) == ITEM_TYPE_POWERUP) then
        set category = "boucliers"
    elseif(GetItemType(it) == ITEM_TYPE_PERMANENT) then
        set category = "armes"
    elseif(GetItemType(it) == ITEM_TYPE_MISCELLANEOUS) then
        set category = "armures"
    endif
    if(GetItemType(it) != ITEM_TYPE_CHARGED) then
        if(GetItemType(it) != ITEM_TYPE_ARTIFACT) then
        set i = 0
        loop
            exitwhen i>=6
            if(GetItemType(UnitItemInSlot(u, i))==GetItemType(it)) then
                if(UnitItemInSlot(u, i)!=null) then
                    if(UnitItemInSlot(u, i)!=it) then
                        call DisplayTextToOne(p, 0., "|cfffccc66Impossible de porter deux " + category + " en même temps. Vous lâchez |r|cFFF00000" + GetItemName(UnitItemInSlot(u, i)) + ".|r")
                        call UnitRemoveItemFromSlot(u, i)
                    endif
                endif
            endif
            set i = i + 1
        endloop
        endif
    else
        set i = 0
        loop
            exitwhen i>=6
            if(GetItemTypeId(it)==GetItemTypeId(UnitItemInSlot(u,i))) then
                if(UnitItemInSlot(u, i)!=null) then
                    if(UnitItemInSlot(u,i)!=it) then
                        call SetItemCharges(UnitItemInSlot(u, i), GetItemCharges(UnitItemInSlot(u, i))+GetItemCharges(it))
                        call RemoveItem(it)
                    endif
                endif
            endif
            set i = i + 1
        endloop
    endif
    endif
    set category = null
    set it2 = null
    set it = null
    set p = null
    set u = null
endfunction

function InitTrig_ItemSystem takes nothing returns nothing
    local trigger RightClic = CreateTrigger()
    set gg_trg_ItemSystem = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_ItemSystem, EVENT_PLAYER_UNIT_PICKUP_ITEM)
    call TriggerRegisterAnyUnitEventBJ(RightClic, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
    call TriggerAddCondition(RightClic, Condition(function CUnstackItems))
    call TriggerAddAction(gg_trg_ItemSystem, function ItemSystem)
    call TriggerAddAction(RightClic, function UnstackItems)
endfunction//===========================================================================
// Trigger: UsingItems
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function ARuneDeRenaissanceInterieureTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit u = HTLoadUnitHandle(t, CASTER)
    local integer i = HTLoadInteger(t, INDEX)
    if(GetUnitAbilityLevel(u, udg_Buff_runederenaissanceinterieu)<=0) then
        set i = 0
    endif
    if(i<=0) then
        call CleanTimer(t)
    else
        call ModLife(u, 0.1*(GetUnitState(u, UNIT_STATE_MAX_LIFE)*0.4))
        call ModMana(u, 0.1*(GetUnitState(u, UNIT_STATE_MAX_MANA)*0.4))
        call HTSaveInteger(t, INDEX, i-1)
    endif
    set u = null
endfunction
function Potions takes nothing returns nothing
    local timer t = null
    local unit caster = GetTriggerUnit()
    local player p = GetOwningPlayer(caster)
    local item it = GetManipulatedItem()
    local integer min = 0
    local integer delta = 0
    local real r = 0.
    if(GetItemTypeId(GetManipulatedItem()) == 'I00Z') then // Rune de résilience
        set r = GetUnitState(caster, UNIT_STATE_LIFE)
        call AddAbilityTimed(caster, 10., 'A013')
        call SetUnitState(caster, UNIT_STATE_LIFE, r+750.)
    elseif(GetItemTypeId(GetManipulatedItem()) == 'I004') then // Rune de renaissance intérieure
        set t = NewTimer()
        call HTSaveInteger(t, INDEX, 12)
        call HTSaveUnitHandle(t, CASTER, caster)
        call TimerStart(t, 1., true, function ARuneDeRenaissanceInterieureTick)
    elseif(GetItemTypeId(it)=='I00F') then // Potion de jeunesse
        set min = GetHeroLevel(caster)+1
        if(GetHeroStr(caster, false)>min) then
            set delta = GetHeroStr(caster, false)-min
            call SetHeroStr(caster, min, true)
            call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED)+delta)
        endif
        if(GetHeroInt(caster, false)>min) then
            set delta = GetHeroInt(caster, false)-min
            call SetHeroInt(caster, min, true)
            call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED)+delta)
        endif
        if(GetHeroAgi(caster, false)>min) then
            set delta = GetHeroAgi(caster, false)-min
            call SetHeroAgi(caster, min, true)
            call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED)+delta)
        endif
    elseif(GetItemTypeId(GetManipulatedItem()) == 'I008') then // Potion stat str
        call AddAbilityTimed(caster, 15., 'A01B')
    elseif(GetItemTypeId(GetManipulatedItem()) == 'I00A') then // Potion stat int
        call AddAbilityTimed(caster, 15., 'A00M')
    elseif(GetItemTypeId(GetManipulatedItem()) == 'I009') then // Potion stat agi
        call AddAbilityTimed(caster, 15., 'A01A')
    elseif(GetItemTypeId(it) == 'I00Q') then // Potion de soins mineure
        call ModLife(caster, GetUnitState(caster, UNIT_STATE_MAX_LIFE)*0.25)
    elseif(GetItemTypeId(it) == 'I003') then // Potion de soins
        call ModLife(caster, GetUnitState(caster, UNIT_STATE_MAX_LIFE)*0.4)
    elseif(GetItemTypeId(it) == 'I00T') then // Potion de soins majeure 
        call ModLife(caster, GetUnitState(caster, UNIT_STATE_MAX_LIFE)*0.6)
    elseif(GetItemTypeId(it) == 'I00R') then // Potions de mana inférieure
        call ModMana(caster, GetUnitState(caster, UNIT_STATE_MAX_MANA)*0.25)
    elseif(GetItemTypeId(it) == 'I001') then // Potions de mana
        call ModMana(caster, GetUnitState(caster, UNIT_STATE_MAX_MANA)*0.4)
    elseif(GetItemTypeId(it) == 'I00P') then // Potions de mana supérieure
        call ModMana(caster, GetUnitState(caster, UNIT_STATE_MAX_MANA)*0.6)
    elseif(GetItemTypeId(it) == 'I00S') then // Potions de restauration mineure
        call ModLife(caster, GetUnitState(caster, UNIT_STATE_MAX_LIFE)*0.2)
        call ModMana(caster, GetUnitState(caster, UNIT_STATE_MAX_MANA)*0.2)
    elseif(GetItemTypeId(it) == 'I002') then // Potions de restauration
        call ModLife(caster, GetUnitState(caster, UNIT_STATE_MAX_LIFE)*0.35)
        call ModMana(caster, GetUnitState(caster, UNIT_STATE_MAX_MANA)*0.35)
    elseif(GetItemTypeId(it) == 'I005') then // Potions de restauration majeure
        call ModLife(caster, GetUnitState(caster, UNIT_STATE_MAX_LIFE)*0.5)
        call ModMana(caster, GetUnitState(caster, UNIT_STATE_MAX_MANA)*0.5)
    elseif(GetItemTypeId(it) == 'I00V') then // Potion craft str
        call AddAbilityTimed(caster, 15., 'A01B')
        call ModLife(caster, GetUnitState(caster, UNIT_STATE_MAX_LIFE)*0.4)
        call ModMana(caster, GetUnitState(caster, UNIT_STATE_MAX_MANA)*0.4)
    elseif(GetItemTypeId(it) == 'I00U') then // Potion craft int
        call AddAbilityTimed(caster, 15., 'A00M')
        call ModLife(caster, GetUnitState(caster, UNIT_STATE_MAX_LIFE)*0.4)
        call ModMana(caster, GetUnitState(caster, UNIT_STATE_MAX_MANA)*0.4)
    elseif(GetItemTypeId(it) == 'I00W') then // Potion craft agi
        call AddAbilityTimed(caster, 15., 'A01A')
        call ModLife(caster, GetUnitState(caster, UNIT_STATE_MAX_LIFE)*0.4)
        call ModMana(caster, GetUnitState(caster, UNIT_STATE_MAX_MANA)*0.4)
    endif
    set it = null
    set p = null
    set caster = null
endfunction

function InitTrig_UsingItems takes nothing returns nothing
    set gg_trg_UsingItems = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_UsingItems, EVENT_PLAYER_UNIT_USE_ITEM)
    call TriggerAddAction(gg_trg_UsingItems, function Potions)
endfunction//===========================================================================
// Trigger: LearningAlchemy
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function CLearningAlchemy takes nothing returns boolean
    return GetResearched()=='R005'
endfunction
function ALearningAlchemy takes nothing returns nothing
    local player p = GetOwningPlayer(GetTriggerUnit())
    local integer i = 0
    local integer count = 0
    local integer id = GetPlayerId(p)
    call DisableTrigger(gg_trg_ItemSystem)
    call SetPlayerTechMaxAllowed(p, 'R01A', 0)
    call SetPlayerTechMaxAllowed(p, 'R005', 3)
    if(GetPlayerTechCount(p, 'R005', true)>=1) then
        set i = 0
        loop
            exitwhen i>=6
            if(GetItemTypeId(UnitItemInSlot(udg_Hero[id], i))=='I00I') then
                set count = GetItemCharges(UnitItemInSlot(udg_Hero[id], i))
                call RemoveItem(UnitItemInSlot(udg_Hero[id], i))
                call UnitAddItemToSlotById(udg_Hero[id], 'I00Q', i)
                call SetItemCharges(UnitItemInSlot(udg_Hero[id], i), count)
            elseif(GetItemTypeId(UnitItemInSlot(udg_Hero[id], i))=='I00K') then
                set count = GetItemCharges(UnitItemInSlot(udg_Hero[id], i))
                call RemoveItem(UnitItemInSlot(udg_Hero[id], i))
                call UnitAddItemToSlotById(udg_Hero[id], 'I00R', i)
                call SetItemCharges(UnitItemInSlot(udg_Hero[id], i), count)
            elseif(GetItemTypeId(UnitItemInSlot(udg_Hero[id], i))=='I00L') then
                set count = GetItemCharges(UnitItemInSlot(udg_Hero[id], i))
                call RemoveItem(UnitItemInSlot(udg_Hero[id], i))
                call UnitAddItemToSlotById(udg_Hero[id], 'I00S', i)
                call SetItemCharges(UnitItemInSlot(udg_Hero[id], i), count)
            endif
            set i = i + 1
        endloop
    endif
    if(GetPlayerTechCount(p, 'R005', true)>=2) then
        set i = 0
        loop
            exitwhen i>=6
            if(GetItemTypeId(UnitItemInSlot(udg_Hero[id], i))=='I00N') then
                set count = GetItemCharges(UnitItemInSlot(udg_Hero[id], i))
                call RemoveItem(UnitItemInSlot(udg_Hero[id], i))
                call UnitAddItemToSlotById(udg_Hero[id], 'I00T', i)
                call SetItemCharges(UnitItemInSlot(udg_Hero[id], i), count)
            elseif(GetItemTypeId(UnitItemInSlot(udg_Hero[id], i))=='I000') then
                set count = GetItemCharges(UnitItemInSlot(udg_Hero[id], i))
                call RemoveItem(UnitItemInSlot(udg_Hero[id], i))
                call UnitAddItemToSlotById(udg_Hero[id], 'I00P', i)
                call SetItemCharges(UnitItemInSlot(udg_Hero[id], i), count)
            elseif(GetItemTypeId(UnitItemInSlot(udg_Hero[id], i))=='I00O') then
                set count = GetItemCharges(UnitItemInSlot(udg_Hero[id], i))
                call RemoveItem(UnitItemInSlot(udg_Hero[id], i))
                call UnitAddItemToSlotById(udg_Hero[id], 'I005', i)
                call SetItemCharges(UnitItemInSlot(udg_Hero[id], i), count)
            endif
            set i = i + 1
        endloop
    endif
    if(GetPlayerTechCount(p, 'R005', true)>=3) then
        set i = 0
        loop
            exitwhen i>=6
            if(GetItemTypeId(UnitItemInSlot(udg_Hero[id], i))=='I00M') then
                set count = GetItemCharges(UnitItemInSlot(udg_Hero[id], i))
                call RemoveItem(UnitItemInSlot(udg_Hero[id], i))
                call UnitAddItemToSlotById(udg_Hero[id], 'I00V', i)
                call SetItemCharges(UnitItemInSlot(udg_Hero[id], i), count)
            elseif(GetItemTypeId(UnitItemInSlot(udg_Hero[id], i))=='I00Y') then
                set count = GetItemCharges(UnitItemInSlot(udg_Hero[id], i))
                call RemoveItem(UnitItemInSlot(udg_Hero[id], i))
                call UnitAddItemToSlotById(udg_Hero[id], 'I00U', i)
                call SetItemCharges(UnitItemInSlot(udg_Hero[id], i), count)
            elseif(GetItemTypeId(UnitItemInSlot(udg_Hero[id], i))=='I00X') then
                set count = GetItemCharges(UnitItemInSlot(udg_Hero[id], i))
                call RemoveItem(UnitItemInSlot(udg_Hero[id], i))
                call UnitAddItemToSlotById(udg_Hero[id], 'I00W', i)
                call SetItemCharges(UnitItemInSlot(udg_Hero[id], i), count)
            endif
            set i = i + 1
        endloop
    endif
    call EnableTrigger(gg_trg_ItemSystem)
    set p = null
endfunction

function InitTrig_LearningAlchemy takes nothing returns nothing
    set gg_trg_LearningAlchemy = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_LearningAlchemy, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
    call TriggerAddCondition(gg_trg_LearningAlchemy, Condition(function CLearningAlchemy))
    call TriggerAddAction(gg_trg_LearningAlchemy, function ALearningAlchemy)
endfunction//===========================================================================
// Trigger: LearningEnchant
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function CLearningEnchant takes nothing returns boolean
    return GetResearched()=='R01A'
endfunction
function ALearningEnchant takes nothing returns nothing
    local player p = GetOwningPlayer(GetTriggerUnit())
    local integer i = 0
    local integer count = 0
    local integer id = GetPlayerId(p)
    call DisableTrigger(gg_trg_ItemSystem)
    call SetPlayerTechMaxAllowed(p, 'R005', 0)
    call SetPlayerTechMaxAllowed(p, 'R01A', 3)
    if(GetPlayerTechCount(p, 'R01A', true)>=1) then
        set i = 0
        loop
            exitwhen i>=6
            if(GetItemTypeId(UnitItemInSlot(udg_Hero[id], i))=='I00I') then
                set count = GetItemCharges(UnitItemInSlot(udg_Hero[id], i))
                call RemoveItem(UnitItemInSlot(udg_Hero[id], i))
                call UnitAddItemToSlotById(udg_Hero[id], 'I010', i)
                call SetItemCharges(UnitItemInSlot(udg_Hero[id], i), count*2)
            elseif(GetItemTypeId(UnitItemInSlot(udg_Hero[id], i))=='I00K') then
                set count = GetItemCharges(UnitItemInSlot(udg_Hero[id], i))
                call RemoveItem(UnitItemInSlot(udg_Hero[id], i))
                call UnitAddItemToSlotById(udg_Hero[id], 'I01S', i)
                call SetItemCharges(UnitItemInSlot(udg_Hero[id], i), count*2)
            elseif(GetItemTypeId(UnitItemInSlot(udg_Hero[id], i))=='I00L') then
                set count = GetItemCharges(UnitItemInSlot(udg_Hero[id], i))
                call RemoveItem(UnitItemInSlot(udg_Hero[id], i))
                call UnitAddItemToSlotById(udg_Hero[id], 'I01R', i)
                call SetItemCharges(UnitItemInSlot(udg_Hero[id], i), count*2)
            endif
            set i = i + 1
        endloop
    endif
    if(GetPlayerTechCount(p, 'R01A', true)>=2) then
        set i = 0
        loop
            exitwhen i>=6
            if(GetItemTypeId(UnitItemInSlot(udg_Hero[id], i))=='I00N') then
                set count = GetItemCharges(UnitItemInSlot(udg_Hero[id], i))
                call RemoveItem(UnitItemInSlot(udg_Hero[id], i))
                call UnitAddItemToSlotById(udg_Hero[id], 'I01T', i)
                call SetItemCharges(UnitItemInSlot(udg_Hero[id], i), count*2)
            elseif(GetItemTypeId(UnitItemInSlot(udg_Hero[id], i))=='I000') then
                set count = GetItemCharges(UnitItemInSlot(udg_Hero[id], i))
                call RemoveItem(UnitItemInSlot(udg_Hero[id], i))
                call UnitAddItemToSlotById(udg_Hero[id], 'I01U', i)
                call SetItemCharges(UnitItemInSlot(udg_Hero[id], i), count*2)
            elseif(GetItemTypeId(UnitItemInSlot(udg_Hero[id], i))=='I00O') then
                set count = GetItemCharges(UnitItemInSlot(udg_Hero[id], i))
                call RemoveItem(UnitItemInSlot(udg_Hero[id], i))
                call UnitAddItemToSlotById(udg_Hero[id], 'I02L', i)
                call SetItemCharges(UnitItemInSlot(udg_Hero[id], i), count*2)
            endif
            set i = i + 1
        endloop
    endif
    if(GetPlayerTechCount(p, 'R01A', true)>=3) then
        set i = 0
        loop
            exitwhen i>=6
            if(GetItemTypeId(UnitItemInSlot(udg_Hero[id], i))=='I00M') then
                set count = GetItemCharges(UnitItemInSlot(udg_Hero[id], i))
                call RemoveItem(UnitItemInSlot(udg_Hero[id], i))
                call UnitAddItemToSlotById(udg_Hero[id], 'I01X', i)
                call SetItemCharges(UnitItemInSlot(udg_Hero[id], i), count)
            elseif(GetItemTypeId(UnitItemInSlot(udg_Hero[id], i))=='I00Y') then
                set count = GetItemCharges(UnitItemInSlot(udg_Hero[id], i))
                call RemoveItem(UnitItemInSlot(udg_Hero[id], i))
                call UnitAddItemToSlotById(udg_Hero[id], 'I01Y', i)
                call SetItemCharges(UnitItemInSlot(udg_Hero[id], i), count)
            elseif(GetItemTypeId(UnitItemInSlot(udg_Hero[id], i))=='I00X') then
                set count = GetItemCharges(UnitItemInSlot(udg_Hero[id], i))
                call RemoveItem(UnitItemInSlot(udg_Hero[id], i))
                call UnitAddItemToSlotById(udg_Hero[id], 'I01V', i)
                call SetItemCharges(UnitItemInSlot(udg_Hero[id], i), count)
            endif
            set i = i + 1
        endloop
    endif
    call EnableTrigger(gg_trg_ItemSystem)
    set p = null
endfunction

function InitTrig_LearningEnchant takes nothing returns nothing
    set gg_trg_LearningEnchant = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_LearningEnchant, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
    call TriggerAddCondition(gg_trg_LearningEnchant, Condition(function CLearningEnchant))
    call TriggerAddAction(gg_trg_LearningEnchant, function ALearningEnchant)
endfunction//===========================================================================
// Trigger: InventorySwitch
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function CInventorySwitch takes nothing returns boolean
    return GetSpellAbilityId()=='A06W'
endfunction

function AInventorySwitch takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local item it = null
    local integer i = 0
    local integer id = GetPlayerId(GetOwningPlayer(caster))
    if(udg_Hero[id]!=null) then
        if(GetUnitState(udg_Hero[id], UNIT_STATE_LIFE)>0) then
            call DisableTrigger(gg_trg_ItemSystem)
            loop
                exitwhen i>=6
                if(UnitItemInSlot(caster, i)!=null) then
                    set it = UnitItemInSlot(caster, i)
                    call UnitRemoveItem(caster, it)
                    if(UnitItemInSlot(udg_Hero[id], i)!=null) then
                        call UnitAddItem(caster, UnitItemInSlot(udg_Hero[id], i))
                    endif
                    call UnitAddItem(udg_Hero[id], it)
                    set it = null
                elseif(UnitItemInSlot(udg_Hero[id], i)!=null) then
                    call UnitAddItem(caster, UnitItemInSlot(udg_Hero[id], i))
                endif
                set i = i + 1
            endloop
            call EnableTrigger(gg_trg_ItemSystem)
        endif
    endif
    set caster = null
endfunction

function InitTrig_InventorySwitch takes nothing returns nothing
    set gg_trg_InventorySwitch = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_InventorySwitch, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(gg_trg_InventorySwitch, Condition(function CInventorySwitch))
    call TriggerAddAction(gg_trg_InventorySwitch, function AInventorySwitch)
endfunction//===========================================================================
// Trigger: Enchants
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function AEnchantSkills takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid=='A074') then
        call UnitAddItem(GetTriggerUnit(), GetSpellTargetItem())
    elseif(abilid=='A075') then
        call MortalStrikeTarget(GetSpellTargetUnit(), 6.)
    elseif(abilid=='A077') then
        call BlindTarget(GetSpellTargetUnit(), 6.)
    elseif(abilid=='A076') then
        call DisarmTarget(GetSpellTargetUnit(), 4.)
    elseif(abilid=='A078') then
        call FearTarget(GetSpellTargetUnit(), 2.)
    elseif(abilid=='A079') then
        call SlowTarget(GetSpellTargetUnit(), 4.)
    elseif(abilid=='A089') then
        call MuteTarget(GetSpellTargetUnit(), 4.)
    elseif(abilid=='A03Y') then
        call ImmuneTarget(GetTriggerUnit(), 4.)
    endif
endfunction

function InitTrig_Enchants takes nothing returns nothing
    local trigger EnchantSkills = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(EnchantSkills, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddAction(EnchantSkills, function AEnchantSkills)
endfunction//===========================================================================
// Trigger: Tracking
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function CTrackingPlants takes nothing returns boolean
    if(GetSpellAbilityId()=='A01V') then
        return true
    elseif(GetSpellAbilityId()=='A06Q') then
        return true
    elseif(GetSpellAbilityId()=='A02J') then
        return true
    elseif(GetSpellAbilityId()=='A06K') then
        return true
    elseif(GetSpellAbilityId()=='A06L') then
        return true
    elseif(GetSpellAbilityId()=='A06M') then
        return true
    elseif(GetSpellAbilityId()=='A06N') then
        return true
    elseif(GetSpellAbilityId()=='A06O') then
        return true
    elseif(GetSpellAbilityId()=='A06P') then
        return true
    endif
    return false
endfunction

function PingPlant takes nothing returns nothing
    local player p = GetOwningPlayer(GetTriggerUnit())
    local item it = GetEnumItem()
    if(GetLocal()==p) then
        call PingMinimapEx(GetItemX(it), GetItemY(it), 6., 64, 255, 64, false)
    endif
    set it = null
    set p = null
endfunction
function CPingHerbeRevigorante takes nothing returns boolean
    return GetItemTypeId(GetFilterItem())=='I00I'
endfunction
function CPingRacineRevitalisante takes nothing returns boolean
    return GetItemTypeId(GetFilterItem())=='I00K'
endfunction
function CPingFleurRestauratrice takes nothing returns boolean
    return GetItemTypeId(GetFilterItem())=='I00L'
endfunction
function CPingRepina takes nothing returns boolean
    return GetItemTypeId(GetFilterItem())=='I00N'
endfunction
function CPingRacilna takes nothing returns boolean
    return GetItemTypeId(GetFilterItem())=='I000'
endfunction
function CPingLiaina takes nothing returns boolean
    return GetItemTypeId(GetFilterItem())=='I00O'
endfunction
function CPingPyrolia takes nothing returns boolean
    return GetItemTypeId(GetFilterItem())=='I00M'
endfunction
function CPingNaglia takes nothing returns boolean
    return GetItemTypeId(GetFilterItem())=='I00Y'
endfunction
function CPingVenolia takes nothing returns boolean
    return GetItemTypeId(GetFilterItem())=='I00X'
endfunction
function ATrackingPlants takes nothing returns nothing
    local player p = GetOwningPlayer(GetTriggerUnit())
    local boolexpr be = null
    local integer abilid = GetSpellAbilityId()
    local integer tech = 0
    local integer req = 0
    set tech = GetPlayerTechCount(p, 'R005', true) + GetPlayerTechCount(p, 'R01A', true)
    if(abilid=='A01V') then
        set be = Condition(function CPingHerbeRevigorante)
        set req = 1
    elseif(abilid=='A06Q') then
        set be = Condition(function CPingRacineRevitalisante)
        set req = 1
    elseif(abilid=='A02J') then
        set be = Condition(function CPingFleurRestauratrice)
        set req = 1
    elseif(abilid=='A06K') then
        set be = Condition(function CPingRepina)
        set req = 2
    elseif(abilid=='A06L') then
        set be = Condition(function CPingRacilna)
        set req = 2
    elseif(abilid=='A06M') then
        set be = Condition(function CPingLiaina)
        set req = 2
    elseif(abilid=='A06N') then
        set be = Condition(function CPingPyrolia)
        set req = 3
    elseif(abilid=='A06O') then
        set be = Condition(function CPingNaglia)
        set req = 3
    elseif(abilid=='A06P') then
        set be = Condition(function CPingVenolia)
        set req = 3
    endif
    if(tech>=req) then
        call EnumItemsInRect(bj_mapInitialPlayableArea, be, function PingPlant)
    else
        call DisplayTextToOne(p, 0., "|cFFF00000Compétence en Alchimie ou Enchantement insuffisante.|r")
    endif
    call DestroyBoolExpr(be)
    set be = null
    set p = null
endfunction

function InitTrig_Tracking takes nothing returns nothing
    set gg_trg_Tracking = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_Tracking, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddCondition(gg_trg_Tracking, Condition(function CTrackingPlants))
    call TriggerAddAction(gg_trg_Tracking, function ATrackingPlants)
endfunction//===========================================================================
// Trigger: Waves
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function Waves takes nothing returns nothing
    local real time = 0.
    if(udg_WaveCount<=0) then
        set time = 89.
        call TimerDialogSetTitle(udg_WaveTimerDialog, "Début de la partie :")
    elseif(udg_WaveCount<=1) then
        set time = 240.
        call EnableTrigger(gg_trg_CreepSpawn)
        call TimerDialogSetTitle(udg_WaveTimerDialog, "Renforts (2ème vague) :")
    elseif(udg_WaveCount<=2) then
        set time = 300.
        call TimerDialogSetTitle(udg_WaveTimerDialog, "Renforts (3ème vague) :")
    elseif(udg_WaveCount<=3) then
        set time = 420.
        call TimerDialogSetTitle(udg_WaveTimerDialog, "Renforts (4ème vague) :")
    elseif(udg_WaveCount<=4) then
        set time = 640.
        call TimerDialogSetTitle(udg_WaveTimerDialog, "Renforts (5ème vague) :")
    elseif(udg_WaveCount<=5) then
        set time = 900.
        call EnableTrigger(gg_trg_BossSpawn)
        call TimerDialogDisplay(udg_WaveTimerDialog, false)
    endif
    if(udg_WaveCount<=4) then
        call TimerDialogDisplay(udg_WaveTimerDialog, true)
        call TimerStart(udg_WaveTimer, time, false, null)
    endif
    set udg_WaveCount = udg_WaveCount + 1
endfunction

function InitTrig_Waves takes nothing returns nothing
    set gg_trg_Waves = CreateTrigger()
    set udg_WaveTimerDialog = CreateTimerDialog(udg_WaveTimer)
    call TriggerRegisterTimerExpireEvent(gg_trg_Waves, udg_WaveTimer)
    call TriggerRegisterTimerEvent(gg_trg_Waves, 1., false)
    call TriggerAddAction(gg_trg_Waves, function Waves)
endfunction//===========================================================================
// Trigger: CreepSpawn
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function ACreepSpawn takes nothing returns nothing
    // HUMAN CREEPS //
    if(udg_WaveCount<=1) then
    elseif(udg_WaveCount<=2) then
        call CreateUnit(GetPlayer(13), 'h005', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.) // Homme d'armes
        call CreateUnit(GetPlayer(13), 'h005', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'n003', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.) // Archer
        call CreateUnit(GetPlayer(13), 'h005', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h005', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'n003', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h005', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h005', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
        call CreateUnit(GetPlayer(13), 'n003', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
    elseif(udg_WaveCount<=3) then
        call CreateUnit(GetPlayer(13), 'h006', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h006', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'n00A', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h006', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h006', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'n00A', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h006', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h006', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
        call CreateUnit(GetPlayer(13), 'n00A', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
    elseif(udg_WaveCount<=4) then
        call CreateUnit(GetPlayer(13), 'h006', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h007', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00A', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'n00A', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h006', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h007', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00A', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'n00A', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h006', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h007', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00A', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
        call CreateUnit(GetPlayer(13), 'n00A', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
    elseif(udg_WaveCount<=5) then
        call CreateUnit(GetPlayer(13), 'h007', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h008', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00A', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00B', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00C', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h007', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h008', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00A', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00B', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00C', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h007', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h008', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00A', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00B', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00C', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
    else
        call CreateUnit(GetPlayer(13), 'h008', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00A', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00B', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00C', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00E', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00F', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h008', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00A', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00B', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00C', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00E', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00F', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h008', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00A', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00B', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00C', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00E', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
        call CreateUnit(GetPlayer(13), 'h00F', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
    endif
    
    // ORC CREEPS //
    if(udg_WaveCount<=1) then
    elseif(udg_WaveCount<=2) then
        call CreateUnit(GetPlayer(14), 'o004', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.) // Péon
        call CreateUnit(GetPlayer(14), 'o004', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o005', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.) // Chasseur de têtes
        call CreateUnit(GetPlayer(14), 'o004', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o004', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o005', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o004', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o004', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o005', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
    elseif(udg_WaveCount<=3) then
        call CreateUnit(GetPlayer(14), 'o006', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o006', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o007', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o006', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o006', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o007', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o006', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o006', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o007', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
    elseif(udg_WaveCount<=4) then
        call CreateUnit(GetPlayer(14), 'o006', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o007', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o008', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o009', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o006', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o007', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o008', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o009', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o006', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o007', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o008', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o009', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
    elseif(udg_WaveCount<=5) then
        call CreateUnit(GetPlayer(14), 'o008', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o009', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o00B', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o00E', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'n00G', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o008', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o009', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o00B', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'n00G', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o00E', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o008', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o009', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o00B', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
        call CreateUnit(GetPlayer(14), 'n00G', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o00E', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
    else
        call CreateUnit(GetPlayer(14), 'o009', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o00B', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o00E', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o00G', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o00H', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'n00G', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o009', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o00B', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o00E', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o00G', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o00H', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'n00G', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o009', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o00B', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o00E', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o00G', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
        call CreateUnit(GetPlayer(14), 'o00H', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
        call CreateUnit(GetPlayer(14), 'n00G', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
    endif
endfunction

function InitTrig_CreepSpawn takes nothing returns nothing
    set gg_trg_CreepSpawn = CreateTrigger()
    call DisableTrigger(gg_trg_CreepSpawn)
    call TriggerRegisterTimerEvent(gg_trg_CreepSpawn, 15., true)
    call TriggerAddAction(gg_trg_CreepSpawn, function ACreepSpawn)
endfunction//===========================================================================
// Trigger: BossSpawn
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function ABossSpawn takes nothing returns nothing
    call CreateUnit(GetPlayer(13), 'h004', CAS_HUM_NORD_X, CAS_HUM_NORD_Y, 320.)
    call CreateUnit(GetPlayer(13), 'h004', CAS_HUM_SUD_X, CAS_HUM_SUD_Y, 320.)
    call CreateUnit(GetPlayer(13), 'h004', CAS_HUM_CENTER_X, CAS_HUM_CENTER_Y, 320.)
    call CreateUnit(GetPlayer(14), 'o00J', CAS_ORC_NORD_X, CAS_ORC_NORD_Y, 135.)
    call CreateUnit(GetPlayer(14), 'o00J', CAS_ORC_SUD_X, CAS_ORC_SUD_Y, 135.)
    call CreateUnit(GetPlayer(14), 'o00J', CAS_ORC_CENTER_X, CAS_ORC_CENTER_Y, 135.)
endfunction

function InitTrig_BossSpawn takes nothing returns nothing
    set gg_trg_BossSpawn = CreateTrigger()
    call DisableTrigger(gg_trg_BossSpawn)
    call TriggerRegisterTimerEvent(gg_trg_BossSpawn, 60., true)
    call TriggerAddAction(gg_trg_BossSpawn, function ABossSpawn)
endfunction//===========================================================================
// Trigger: InactiveCreepsOrders
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function CInactiveCreepsOrders takes nothing returns boolean
    if(IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE)==false and IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO)==false) then
        if(GetUnitCurrentOrder(GetFilterUnit())!=ATTACK) then
            return GetPlayerId(GetOwningPlayer(GetFilterUnit()))==13 or GetPlayerId(GetOwningPlayer(GetFilterUnit()))==14
        endif
    endif
    return false
endfunction

function AInactiveCreepsOrders takes nothing returns nothing
    local unit u = null
    local group g = NewGroup()
    local boolexpr be = Condition(function CInactiveCreepsOrders)
    local integer i
    call GroupEnumUnitsInRect(g, bj_mapInitialPlayableArea, be)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        set i = GetUnitUserData(u)
        call SetUnitPosition(u, GetUnitX(u), GetUnitY(u))
        if(i<=1) then
            if(IsUnitInTeam(u,1)) then
                call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathAPC), GetRectCenterY(gg_rct_PathAPC))
            elseif(IsUnitInTeam(u,2)) then
                call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathHum), GetRectCenterY(gg_rct_PathHum))
            endif
        elseif(i<=2) then
            if(IsUnitInTeam(u,1)) then
                call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathAPN), GetRectCenterY(gg_rct_PathAPN))
            elseif(IsUnitInTeam(u,2)) then
                call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathHum), GetRectCenterY(gg_rct_PathHum))
            endif
        elseif(i<=3) then
            if(IsUnitInTeam(u,1)) then
                call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathOrc), GetRectCenterY(gg_rct_PathOrc))
            elseif(IsUnitInTeam(u,2)) then
                call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathAPS), GetRectCenterY(gg_rct_PathAPS))
            endif
        elseif(i<=4) then
            if(IsUnitInTeam(u,1)) then
                call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathOrc), GetRectCenterY(gg_rct_PathOrc))
            elseif(IsUnitInTeam(u,2)) then
                call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathAPC), GetRectCenterY(gg_rct_PathAPC))
            endif
        elseif(i<=5) then
            if(IsUnitInTeam(u,1)) then
                call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathOrc), GetRectCenterY(gg_rct_PathOrc))
            elseif(IsUnitInTeam(u,2)) then
                call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathAPN), GetRectCenterY(gg_rct_PathAPN))
            endif
        elseif(i<=6) then
            if(IsUnitInTeam(u,1)) then
                call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathSud), GetRectCenterY(gg_rct_PathSud))
            elseif(IsUnitInTeam(u,2)) then
                call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathOuest), GetRectCenterY(gg_rct_PathOuest))
            endif
        elseif(i<=7) then
            if(IsUnitInTeam(u,1)) then
                call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathSE), GetRectCenterY(gg_rct_PathSE))
            elseif(IsUnitInTeam(u,2)) then
                call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathNW), GetRectCenterY(gg_rct_PathNW))
            endif
        elseif(i<=8) then
            if(IsUnitInTeam(u,1)) then
                call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathEst), GetRectCenterY(gg_rct_PathEst))
            elseif(IsUnitInTeam(u,2)) then
                call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathNord), GetRectCenterY(gg_rct_PathNord))
            endif
        elseif(i<=9) then
            if(IsUnitInTeam(u,1)) then
                call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathAPS), GetRectCenterY(gg_rct_PathAPS))
            elseif(IsUnitInTeam(u,2)) then
                call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathHum), GetRectCenterY(gg_rct_PathHum))
            endif
        elseif(i<=10) then
            call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathOuest), GetRectCenterY(gg_rct_PathOuest))
        elseif(i<=11) then
            call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathNW), GetRectCenterY(gg_rct_PathNW))
        elseif(i<=12) then
            call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathNord), GetRectCenterY(gg_rct_PathNord))
        elseif(i<=20) then
            call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathSud), GetRectCenterY(gg_rct_PathSud))
        elseif(i<=21) then
            call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathSE), GetRectCenterY(gg_rct_PathSE))
        elseif(i<=22) then
            call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathEst), GetRectCenterY(gg_rct_PathEst))
        endif
    endloop
    call DestroyBoolExpr(be)
    set be = null
    call DeleteGroup(g)
    set u = null
endfunction

function InitTrig_InactiveCreepsOrders takes nothing returns nothing
    set gg_trg_InactiveCreepsOrders = CreateTrigger()
    call TriggerRegisterTimerEvent(gg_trg_InactiveCreepsOrders, 30., true)
    call TriggerAddAction(gg_trg_InactiveCreepsOrders, function AInactiveCreepsOrders)
endfunction//===========================================================================
// Trigger: Orders
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function PathBoth takes nothing returns boolean
    return GetPlayerId(GetOwningPlayer(GetTriggerUnit()))==13 or GetPlayerId(GetOwningPlayer(GetTriggerUnit()))==14
endfunction
function PathHum takes nothing returns boolean
    return GetPlayerId(GetOwningPlayer(GetTriggerUnit()))==13
endfunction
function PathOrc takes nothing returns boolean
    return GetPlayerId(GetOwningPlayer(GetTriggerUnit()))==14
endfunction

function APathCasHumNor takes nothing returns nothing
    local unit u = GetTriggerUnit()
    call SetUnitPosition(u, GetUnitX(u), GetUnitY(u))
    call SetUnitUserData(u, 12)
    call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathNord), GetRectCenterY(gg_rct_PathNord))
    set u = null
endfunction
function APathCasHumSud takes nothing returns nothing
    local unit u = GetTriggerUnit()
    call SetUnitPosition(u, GetUnitX(u), GetUnitY(u))
    call SetUnitUserData(u, 10)
    call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathOuest), GetRectCenterY(gg_rct_PathOuest))
    set u = null
endfunction
function APathCasHumCen takes nothing returns nothing
    local unit u = GetTriggerUnit()
    call SetUnitPosition(u, GetUnitX(u), GetUnitY(u))
    call SetUnitUserData(u, 11)
    call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathNW), GetRectCenterY(gg_rct_PathNW))
    set u = null
endfunction
function APathCasOrcNor takes nothing returns nothing
    local unit u = GetTriggerUnit()
    call SetUnitPosition(u, GetUnitX(u), GetUnitY(u))
    call SetUnitUserData(u, 22)
    call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathEst), GetRectCenterY(gg_rct_PathEst))
    set u = null
endfunction
function APathCasOrcSud takes nothing returns nothing
    local unit u = GetTriggerUnit()
    call SetUnitPosition(u, GetUnitX(u), GetUnitY(u))
    call SetUnitUserData(u, 20)
    call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathSud), GetRectCenterY(gg_rct_PathSud))
    set u = null
endfunction
function APathCasOrcCen takes nothing returns nothing
    local unit u = GetTriggerUnit()
    call SetUnitPosition(u, GetUnitX(u), GetUnitY(u))
    call SetUnitUserData(u, 21)
    call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathSE), GetRectCenterY(gg_rct_PathSE))
    set u = null
endfunction

function APathAPN takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local integer i = GetPlayerId(GetOwningPlayer(u))
    call SetUnitPosition(u, GetUnitX(u), GetUnitY(u))
    call SetUnitUserData(u, 8)
    if(i==13) then
        call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathEst), GetRectCenterY(gg_rct_PathEst))
    elseif(i==14) then
        call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathNord), GetRectCenterY(gg_rct_PathNord))
    endif
    set u = null
endfunction
function APathAPS takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local integer i = GetPlayerId(GetOwningPlayer(u))
    call SetUnitPosition(u, GetUnitX(u), GetUnitY(u))
    call SetUnitUserData(u, 6)
    if(i==13) then
        call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathSud), GetRectCenterY(gg_rct_PathSud))
    elseif(i==14) then
        call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathOuest), GetRectCenterY(gg_rct_PathOuest))
    endif
    set u = null
endfunction
function APathAPC takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local integer i = GetPlayerId(GetOwningPlayer(u))
    call SetUnitPosition(u, GetUnitX(u), GetUnitY(u))
    call SetUnitUserData(u, 7)
    if(i==13) then
        call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathSE), GetRectCenterY(gg_rct_PathSE))
    elseif(i==14) then
        call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathNW), GetRectCenterY(gg_rct_PathNW))
    endif
    set u = null
endfunction

function APathNord takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local integer i = GetPlayerId(GetOwningPlayer(u))
    call SetUnitPosition(u, GetUnitX(u), GetUnitY(u))
    call SetUnitUserData(u, 2)
    if(i==13) then
        call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathAPN), GetRectCenterY(gg_rct_PathAPN))
    elseif(i==14) then
        call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathHum), GetRectCenterY(gg_rct_PathHum))
    endif
    set u = null
endfunction
function APathSud takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local integer i = GetPlayerId(GetOwningPlayer(u))
    call SetUnitPosition(u, GetUnitX(u), GetUnitY(u))
    call SetUnitUserData(u, 3)
    if(i==13) then
        call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathOrc), GetRectCenterY(gg_rct_PathOrc))
    elseif(i==14) then
        call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathAPS), GetRectCenterY(gg_rct_PathAPS))
    endif
    set u = null
endfunction
function APathOuest takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local integer i = GetPlayerId(GetOwningPlayer(u))
    call SetUnitPosition(u, GetUnitX(u), GetUnitY(u))
    call SetUnitUserData(u, 9)
    if(i==13) then
        call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathAPS), GetRectCenterY(gg_rct_PathAPS))
    elseif(i==14) then
        call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathHum), GetRectCenterY(gg_rct_PathHum))
    endif
    set u = null
endfunction
function APathEst takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local integer i = GetPlayerId(GetOwningPlayer(u))
    call SetUnitPosition(u, GetUnitX(u), GetUnitY(u))
    call SetUnitUserData(u, 5)
    if(i==13) then
        call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathOrc), GetRectCenterY(gg_rct_PathOrc))
    elseif(i==14) then
        call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathAPN), GetRectCenterY(gg_rct_PathAPN))
    endif
    set u = null
endfunction
function APathNW takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local integer i = GetPlayerId(GetOwningPlayer(u))
    call SetUnitPosition(u, GetUnitX(u), GetUnitY(u))
    call SetUnitUserData(u, 1)
    if(i==13) then
        call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathAPC), GetRectCenterY(gg_rct_PathAPC))
    elseif(i==14) then
        call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathHum), GetRectCenterY(gg_rct_PathHum))
    endif
    set u = null
endfunction
function APathSE takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local integer i = GetPlayerId(GetOwningPlayer(u))
    call SetUnitPosition(u, GetUnitX(u), GetUnitY(u))
    call SetUnitUserData(u, 4)
    if(i==13) then
        call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathOrc), GetRectCenterY(gg_rct_PathOrc))
    elseif(i==14) then
        call IssuePointOrderById(u, ATTACK, GetRectCenterX(gg_rct_PathAPC), GetRectCenterY(gg_rct_PathAPC))
    endif
    set u = null
endfunction

function InitTrig_Orders takes nothing returns nothing
    local trigger PathCasHumNor = CreateTrigger()
    local trigger PathCasHumSud = CreateTrigger()
    local trigger PathCasHumCen = CreateTrigger()
    local trigger PathCasOrcNor = CreateTrigger()
    local trigger PathCasOrcSud = CreateTrigger()
    local trigger PathCasOrcCen = CreateTrigger()
    local trigger PathAPN = CreateTrigger()
    local trigger PathAPS = CreateTrigger()
    local trigger PathAPC = CreateTrigger()
    local trigger PathNord = CreateTrigger()
    local trigger PathSud = CreateTrigger()
    local trigger PathEst = CreateTrigger()
    local trigger PathOuest = CreateTrigger()
    local trigger PathNW = CreateTrigger()
    local trigger PathSE = CreateTrigger()
    call TriggerRegisterEnterRectSimple(PathCasHumNor, gg_rct_CHN)
    call TriggerRegisterEnterRectSimple(PathCasHumSud, gg_rct_CHS)
    call TriggerRegisterEnterRectSimple(PathCasHumCen, gg_rct_CHC)
    call TriggerRegisterEnterRectSimple(PathCasOrcNor, gg_rct_CON)
    call TriggerRegisterEnterRectSimple(PathCasOrcSud, gg_rct_COS)
    call TriggerRegisterEnterRectSimple(PathCasOrcCen, gg_rct_COC)
    call TriggerRegisterEnterRectSimple(PathAPN, gg_rct_PathAPN)
    call TriggerRegisterEnterRectSimple(PathAPS, gg_rct_PathAPS)
    call TriggerRegisterEnterRectSimple(PathAPC, gg_rct_PathAPC)
    call TriggerRegisterEnterRectSimple(PathNord, gg_rct_PathNord)
    call TriggerRegisterEnterRectSimple(PathSud, gg_rct_PathSud)
    call TriggerRegisterEnterRectSimple(PathEst, gg_rct_PathEst)
    call TriggerRegisterEnterRectSimple(PathOuest, gg_rct_PathOuest)
    call TriggerRegisterEnterRectSimple(PathNW, gg_rct_PathNW)
    call TriggerRegisterEnterRectSimple(PathSE, gg_rct_PathSE)
    call TriggerAddCondition(PathCasHumNor, Condition(function PathHum))
    call TriggerAddCondition(PathCasHumSud, Condition(function PathHum))
    call TriggerAddCondition(PathCasHumCen, Condition(function PathHum))
    call TriggerAddCondition(PathCasOrcNor, Condition(function PathOrc))
    call TriggerAddCondition(PathCasOrcSud, Condition(function PathOrc))
    call TriggerAddCondition(PathCasOrcCen, Condition(function PathOrc))
    call TriggerAddCondition(PathAPN, Condition(function PathBoth))
    call TriggerAddCondition(PathAPS, Condition(function PathBoth))
    call TriggerAddCondition(PathAPC, Condition(function PathBoth))
    call TriggerAddCondition(PathNord, Condition(function PathBoth))
    call TriggerAddCondition(PathSud, Condition(function PathBoth))
    call TriggerAddCondition(PathEst, Condition(function PathBoth))
    call TriggerAddCondition(PathOuest, Condition(function PathBoth))
    call TriggerAddCondition(PathNW, Condition(function PathBoth))
    call TriggerAddCondition(PathSE, Condition(function PathBoth))
    call TriggerAddAction(PathCasHumNor, function APathCasHumNor)
    call TriggerAddAction(PathCasHumSud, function APathCasHumSud)
    call TriggerAddAction(PathCasHumCen, function APathCasHumCen)
    call TriggerAddAction(PathCasOrcNor, function APathCasOrcNor)
    call TriggerAddAction(PathCasOrcSud, function APathCasOrcSud)
    call TriggerAddAction(PathCasOrcCen, function APathCasOrcCen)
    call TriggerAddAction(PathAPN, function APathAPN)
    call TriggerAddAction(PathAPS, function APathAPS)
    call TriggerAddAction(PathAPC, function APathAPC)
    call TriggerAddAction(PathNord, function APathNord)
    call TriggerAddAction(PathSud, function APathSud)
    call TriggerAddAction(PathEst, function APathEst)
    call TriggerAddAction(PathOuest, function APathOuest)
    call TriggerAddAction(PathNW, function APathNW)
    call TriggerAddAction(PathSE, function APathSE)
endfunction//===========================================================================
// Trigger: Capping Avant Postes
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function CappingConditions takes nothing returns boolean
    if(GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE)>0) then
        if(IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE)==false) then
            if(IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO)==true) then
                return true
            endif
        endif
    endif
    return false
endfunction
function RefreshAPBars takes unit u returns nothing
    local texttag t = CreateTextTag()
    local string bar = null
    local integer nb = GetUnitUserData(u)*10
    local integer i = 0
    local real x = GetUnitX(u)
    local real y = GetUnitY(u)
    if(nb>0) then
        set bar = "|c00ff8000"
    elseif(nb<0) then
        set bar = "|c00804000"
    else
        set bar = BLANK
    endif
    loop
        exitwhen i>=49
        if((i==nb)or(i==-nb)) then
            set bar = bar+ENDCOLOR+BLANK
        endif
        set bar = bar+barBit
        set i = i + 1
    endloop
    set bar = bar+ENDCOLOR
    call SetTextTagText(t, bar, 0.02)
    call SetTextTagPos(t, x, y, 200.)
    call SetTextTagPermanent(t, false)
    call SetTextTagLifespan(t, 5.5)
    if(IsUnitVisible(u, GetLocal())) then
        call SetTextTagVisibility(t, true)
    else
        call SetTextTagVisibility(t, false)
    endif
    set bar = null
    set t = null
endfunction
function CappingAvantPosteNord takes nothing returns nothing
    local unit u = null
    local group g = NewGroup()
    local boolexpr be = Condition(function CappingConditions)
    local integer change = 0
    call GroupEnumUnitsInRect(g, gg_rct_APN, be)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        if(GetPlayerId(GetOwningPlayer(u))!=15) then
            if(IsUnitInTeam(u,1)) then
                set change = change + 1
            elseif(IsUnitInTeam(u,2)) then
                set change = change - 1
            endif
        endif
        set u = null
    endloop
    if(change>2) then
        set change = 2
    endif
    if(change<-2) then
        set change = -2
    endif
    call SetUnitUserData(APN, GetUnitUserData(APN)+change)
    if(GetUnitUserData(APN)>=5) then
        call SetUnitUserData(APN, 5)
        call SetUnitOwner(APN, GetPlayer(13), true)
        call SetUnitOwner(ForgeN, GetPlayer(13), true)
        call SetUnitOwner(ArmurieN, GetPlayer(13), true)
        call SetUnitOwner(TOUR_APN_1, GetPlayer(13), true)
        call SetUnitOwner(TOUR_APN_2, GetPlayer(13), true)
        call SetUnitOwner(TOUR_APN_3, GetPlayer(13), true)
        call SetUnitOwner(TOUR_APN_4, GetPlayer(13), true)
    elseif(GetUnitUserData(APN)<=-5) then
        call SetUnitUserData(APN, -5)
        call SetUnitOwner(APN, GetPlayer(14), true)
        call SetUnitOwner(ForgeN, GetPlayer(14), true)
        call SetUnitOwner(ArmurieN, GetPlayer(14), true)
        call SetUnitOwner(TOUR_APN_1, GetPlayer(14), true)
        call SetUnitOwner(TOUR_APN_2, GetPlayer(14), true)
        call SetUnitOwner(TOUR_APN_3, GetPlayer(14), true)
        call SetUnitOwner(TOUR_APN_4, GetPlayer(14), true)
    elseif(GetUnitUserData(APN)>-3) then
        if(GetUnitUserData(APN)<3) then
            call SetUnitOwner(APN, GetPlayer(15), true)
            call SetUnitOwner(ForgeN, GetPlayer(15), true)
            call SetUnitOwner(ArmurieN, GetPlayer(15), true)
            call SetUnitOwner(TOUR_APN_1, GetPlayer(15), true)
            call SetUnitOwner(TOUR_APN_2, GetPlayer(15), true)
            call SetUnitOwner(TOUR_APN_3, GetPlayer(15), true)
            call SetUnitOwner(TOUR_APN_4, GetPlayer(15), true)
            call PingMinimapEx(APNX, APNY, 3., 255, 255, 0, false)
        endif
    endif
    if(change!=0) then
        if(GetUnitUserData(APN)>0) then
            call CombatText(I2S(GetUnitUserData(APN)), 11, APN, 255, 165, 0, 135., 225.)
        elseif(GetUnitUserData(APN)<0) then
            call CombatText(I2S(-GetUnitUserData(APN)), 11, APN, 150, 75, 0, 135., 225.)
        endif
    endif
    call RefreshAPBars(APN)
    call DeleteGroup(g)
    call DestroyBoolExpr(be)
    set be = null
    set u = null
endfunction
function CappingAvantPosteSud takes nothing returns nothing
    local unit u = null
    local group g = NewGroup()
    local boolexpr be = Condition(function CappingConditions)
    local integer change = 0
    call GroupEnumUnitsInRect(g, gg_rct_APS, be)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        if(GetPlayerId(GetOwningPlayer(u))!=15) then
            if(IsUnitInTeam(u,1)) then
                set change = change + 1
            elseif(IsUnitInTeam(u,2)) then
                set change = change - 1
            endif
        endif
        set u = null
    endloop
    if(change>2) then
        set change = 2
    endif
    if(change<-2) then
        set change = -2
    endif
    call SetUnitUserData(APS, GetUnitUserData(APS)+change)
    if(GetUnitUserData(APS)>=5) then
        call SetUnitUserData(APS, 5)
        call SetUnitOwner(APS, GetPlayer(13), true)
        call SetUnitOwner(ForgeS, GetPlayer(13), true)
        call SetUnitOwner(ArmurieS, GetPlayer(13), true)
        call SetUnitOwner(TOUR_APS_1, GetPlayer(13), true)
        call SetUnitOwner(TOUR_APS_2, GetPlayer(13), true)
        call SetUnitOwner(TOUR_APS_3, GetPlayer(13), true)
        call SetUnitOwner(TOUR_APS_4, GetPlayer(13), true)
    elseif(GetUnitUserData(APS)<=-5) then
        call SetUnitUserData(APS, -5)
        call SetUnitOwner(APS, GetPlayer(14), true)
        call SetUnitOwner(ForgeS, GetPlayer(14), true)
        call SetUnitOwner(ArmurieS, GetPlayer(14), true)
        call SetUnitOwner(TOUR_APS_1, GetPlayer(14), true)
        call SetUnitOwner(TOUR_APS_2, GetPlayer(14), true)
        call SetUnitOwner(TOUR_APS_3, GetPlayer(14), true)
        call SetUnitOwner(TOUR_APS_4, GetPlayer(14), true)
    elseif(GetUnitUserData(APS)>-3) then
        if(GetUnitUserData(APS)<3) then
            call SetUnitOwner(APS, GetPlayer(15), true)
            call SetUnitOwner(ForgeS, GetPlayer(15), true)
            call SetUnitOwner(ArmurieS, GetPlayer(15), true)
            call SetUnitOwner(TOUR_APS_1, GetPlayer(15), true)
            call SetUnitOwner(TOUR_APS_2, GetPlayer(15), true)
            call SetUnitOwner(TOUR_APS_3, GetPlayer(15), true)
            call SetUnitOwner(TOUR_APS_4, GetPlayer(15), true)
            call PingMinimapEx(APSX, APSY, 3., 255, 255, 0, false)
        endif
    endif
    if(change!=0) then
        if(GetUnitUserData(APS)>0) then
            call CombatText(I2S(GetUnitUserData(APS)), 11, APS, 255, 165, 0, 135., 225.)
        elseif(GetUnitUserData(APS)<0) then
            call CombatText(I2S(-GetUnitUserData(APS)), 11, APS, 150, 75, 0, 135., 225.)
        endif
    endif
    call RefreshAPBars(APS)
    call DeleteGroup(g)
    call DestroyBoolExpr(be)
    set be = null
    set u = null
endfunction
function CappingAvantPosteCentre takes nothing returns nothing
    local unit u = null
    local group g = NewGroup()
    local boolexpr be = Condition(function CappingConditions)
    local integer change = 0
    call GroupEnumUnitsInRect(g, gg_rct_APC, be)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        if(GetPlayerId(GetOwningPlayer(u))!=15) then
            if(IsUnitInTeam(u,1)) then
                set change = change + 1
            elseif(IsUnitInTeam(u,2)) then
                set change = change - 1
            endif
        endif
        set u = null
    endloop
    if(change>2) then
        set change = 2
    endif
    if(change<-2) then
        set change = -2
    endif
    call SetUnitUserData(APC, GetUnitUserData(APC)+change)
    if(GetUnitUserData(APC)>=5) then
        call SetUnitUserData(APC, 5)
        call SetUnitOwner(APC, GetPlayer(13), true)
        call SetUnitOwner(ForgeC, GetPlayer(13), true)
        call SetUnitOwner(ArmurieC, GetPlayer(13), true)
        call SetUnitOwner(TOUR_APC_1, GetPlayer(13), true)
        call SetUnitOwner(TOUR_APC_2, GetPlayer(13), true)
        call SetUnitOwner(TOUR_APC_3, GetPlayer(13), true)
        call SetUnitOwner(TOUR_APC_4, GetPlayer(13), true)
    elseif(GetUnitUserData(APC)<=-5) then
        call SetUnitUserData(APC, -5)
        call SetUnitOwner(APC, GetPlayer(14), true)
        call SetUnitOwner(ForgeC, GetPlayer(14), true)
        call SetUnitOwner(ArmurieC, GetPlayer(14), true)
        call SetUnitOwner(TOUR_APC_1, GetPlayer(14), true)
        call SetUnitOwner(TOUR_APC_2, GetPlayer(14), true)
        call SetUnitOwner(TOUR_APC_3, GetPlayer(14), true)
        call SetUnitOwner(TOUR_APC_4, GetPlayer(14), true)
    elseif(GetUnitUserData(APC)>-3) then
        if(GetUnitUserData(APC)<3) then
            call SetUnitOwner(APC, GetPlayer(15), true)
            call SetUnitOwner(ForgeC, GetPlayer(15), true)
            call SetUnitOwner(ArmurieC, GetPlayer(15), true)
            call SetUnitOwner(TOUR_APC_1, GetPlayer(15), true)
            call SetUnitOwner(TOUR_APC_2, GetPlayer(15), true)
            call SetUnitOwner(TOUR_APC_3, GetPlayer(15), true)
            call SetUnitOwner(TOUR_APC_4, GetPlayer(15), true)
            call PingMinimapEx(APCX, APCY, 3., 255, 255, 0, false)
        endif
    endif
    if(change!=0) then
        if(GetUnitUserData(APC)>0) then
            call CombatText(I2S(GetUnitUserData(APC)), 11, APC, 255, 165, 0, 135., 225.)
        elseif(GetUnitUserData(APC)<0) then
            call CombatText(I2S(-GetUnitUserData(APC)), 11, APC, 150, 75, 0, 135., 225.)
        endif
    endif
    call RefreshAPBars(APC)
    call DeleteGroup(g)
    call DestroyBoolExpr(be)
    set be = null
    set u = null
endfunction
function CappingAvantPostes takes nothing returns nothing
    call ExecuteFunc("CappingAvantPosteNord")
    call ExecuteFunc("CappingAvantPosteSud")
    call ExecuteFunc("CappingAvantPosteCentre")
endfunction

function InitTrig_Capping_Avant_Postes takes nothing returns nothing
    set gg_trg_Capping_Avant_Postes = CreateTrigger()
    call DisableTrigger(gg_trg_Capping_Avant_Postes)
    call TriggerRegisterTimerEvent(gg_trg_Capping_Avant_Postes, 5., true)
    call TriggerAddAction(gg_trg_Capping_Avant_Postes, function CappingAvantPostes)
endfunction//===========================================================================
// Trigger: Creep Spells
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function ACreepKB takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local real angle = AngleBetweenXY(GetUnitX(caster), GetUnitY(caster), GetUnitX(target), GetUnitY(target))
    call SlideUnit(target, 300., angle, 0.4, false)
    set target = null
    set caster = null
endfunction

function ACreepCharge takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local real xc = GetUnitX(caster)
    local real yc = GetUnitY(caster)
    local real xt = GetUnitX(target)
    local real yt = GetUnitY(target)
    call SlideUnit(GetTriggerUnit(), DistanceBetweenXY(xc, yc, xt, yt), AngleBetweenXY(xc, yc, xt, yt), 0.30, false)
    set target = null
    set caster = null
endfunction

function ACreepHook takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local real xc = GetUnitX(caster)
    local real yc = GetUnitY(caster)
    local real xt = GetUnitX(target)
    local real yt = GetUnitY(target)
    call NoPathingTimed(target, 0.4)
    call ChangeTargetHeightOverTime(target, 0.4, 300.)
    call SlideUnit(target, DistanceBetweenXY(xt, yt, xc, yc), AngleBetweenXY(xt, yt, xc, yc), 0.4, false)
    set target = null
    set caster = null
endfunction

function ATowerDamage takes nothing returns nothing
    if(GetUnitTypeId(GetAttacker()) == 'n02U') then
        if(IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO)==true) then
            call UnitDamageTarget(GetAttacker(), GetTriggerUnit(), GetUnitState(GetTriggerUnit(), UNIT_STATE_MAX_LIFE)*0.03, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
        else
            call UnitDamageTarget(GetAttacker(), GetTriggerUnit(), GetUnitState(GetTriggerUnit(), UNIT_STATE_MAX_LIFE)*0.3, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
        endif
    endif
endfunction

function ACreepSpells takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid==CreepSpellsKB) then
        call ExecuteFunc("ACreepKB")
    elseif(abilid==CreepSpellsCharge) then
        call ExecuteFunc("ACreepCharge")
    elseif(abilid==CreepSpellsHook) then
        call ExecuteFunc("ACreepHook")
    endif
endfunction
function FCreepSpells takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE)==false and IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO)==false and (GetPlayerId(GetOwningPlayer(GetFilterUnit()))==5 or GetPlayerId(GetOwningPlayer(GetFilterUnit()))==11)
endfunction
globals
    constant integer CreepSpellsHook = 'A04L'
    constant integer CreepSpellsKB = 'A02T'
    constant integer CreepSpellsCharge = 'A00O'
    boolexpr CreepSpellsFilter
endglobals
function InitTrig_Creep_Spells takes nothing returns nothing
    local trigger TowerDamage = CreateTrigger()
    set CreepSpellsFilter = Filter(function FCreepSpells)
    set gg_trg_Creep_Spells = CreateTrigger()
    call TriggerRegisterAnyUnitEvent(gg_trg_Creep_Spells, EVENT_PLAYER_UNIT_SPELL_EFFECT, CreepSpellsFilter)
    call TriggerAddAction(gg_trg_Creep_Spells, function ACreepSpells)
    call TriggerRegisterAnyUnitEventBJ(TowerDamage, EVENT_PLAYER_UNIT_ATTACKED)
    call TriggerAddAction(TowerDamage, function ATowerDamage)
endfunction//===========================================================================
// Trigger: PorteMort
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function AExecution takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local integer i = 0
    local real x = 0.
    local real y = 0.
    local real xt = GetUnitX(target)
    local real yt = GetUnitY(target)
    if(GetUnitState(target, UNIT_STATE_LIFE)<GetUnitState(target, UNIT_STATE_MAX_LIFE)*0.25) then
        call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, GetSpellAbilityId(), STAT_AGI)*2.)
    else
        call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, GetSpellAbilityId(), STAT_AGI)*0.5)
    endif
    call CreateEffectTimed(target, "Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodLarge0.mdl", "overhead", 0.)
    loop
        exitwhen i>=3
        set x = PolarX(xt, 400., 45.+I2R(i*90))
        set y = PolarY(yt, 400., 45.+I2R(i*90))
        set u = CreateUnit(p, 'n023', x, y, AngleBetweenXY(x, y, xt, yt))
        call UnitApplyTimedLife(u, 'BTLF', 0.3)
        call SlideUnit(u, 300., AngleBetweenXY(x, y, xt, yt), 0.3, true)
        set i=i+1
    endloop
    set p = null
    set u = null
    set target = null
    set caster = null
endfunction

function ACoupAllonge takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call CreateEffectTimed(target, "Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl", "origin", 0.0)
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, PorteMortStr, STAT_STR))
    if(IsUnitFeared(target)) then
        call ResetAbilityCooldown(caster, PorteMortInt)
    endif
    call MortalStrikeTarget(target, 5.)
    call StopTarget(target)
    set target = null
    set caster = null
endfunction

function AHurlementDeTerreur takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local group g = NewGroup()
    call CreateEffectTimed(caster, "DarkForce.mdx", "origin", 0.)
    call DefineUnitGroup(g, GetUnitX(caster), GetUnitY(caster), 450., GetOwningPlayer(caster), true, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        if(IsUnitFeared(u)) then
            call SpellDamageTarget(caster, u, 1.1 * GetSpellDamage(caster, u, PorteMortInt, STAT_INT))
        else
            call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, PorteMortInt, STAT_INT))
        endif
        call FearTarget(u, 2.)
    endloop
    call DeleteGroup(g)
    set u = null
    set caster = null
endfunction

function AMainDeMort takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local real xc = GetUnitX(caster)
    local real yc = GetUnitY(caster)
    local real xt = GetUnitX(target)
    local real yt = GetUnitY(target)
    local real angle = AngleBetweenXY(xt, yt, xc, yc)
    local real dur = 1.5+I2R(GetUnitAbilityLevel(caster, PorteMortAgi))*0.5
    call UnitApplyTimedLife(CreateUnit(GetOwningPlayer(caster), 'n007', PolarX(xc, (xt-xc)*0.2, angle), PolarY(yc, (yt-yc)*0.2, angle), angle), 'BTLF', 0.2)
    call SlideUnit(target, DistanceBetweenXY(xt, yt, xc, yc), angle, 0.5, false)
    call CreateEffectTimed(target, "Abilities\\Spells\\Undead\\Cripple\\CrippleTarget.mdl", "chest", dur)
    call SlowTarget(target, dur)
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, PorteMortAgi, STAT_AGI))
    call UnitAddAbility(target, 'A08A')
    call SetUnitAbilityLevel(target, 'A08A', GetUnitAbilityLevel(caster, PorteMortAgi))
    call RemoveAbilityBuffAfterTime(target, 'A08A', udg_Buff_maindemort, dur)
    set target = null
    set caster = null
endfunction

function AChaineDeLaMortProc takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit u = HTLoadUnitHandle(t, UNIT)
    local unit v
    local integer i = HTLoadInteger(t, INDEX)
    local real xc = GetUnitX(caster)
    local real yc = GetUnitY(caster)
    local real xu = GetUnitX(u)
    local real yu = GetUnitY(u)
    local real dist = DistanceBetweenXY(xc, yc, xu, yu)*(1.05-(0.1*I2R(i)))
    local real angle = AngleBetweenXY(xc, yc, xu, yu)
    if(i<=0) then
        call CleanTimer(t)
        call UltimateDamageTarget(caster, u, GetSpellDamage(caster, u, PorteMortUlt, STAT_ULT))
        call NoPathingTimed(u, 0.4)
        call SlideUnit(u, DistanceBetweenXY(xc, yc, xu, yu), angle-180.0, 0.4, false)
    else
        set v = CreateUnit(GetOwningPlayer(caster), 'n008', PolarX(xc, dist, angle), PolarY(yc, dist, angle), angle)
        call UnitApplyTimedLife(v, 'BTLF', 1.5*(0.04*I2R(i)))
        call SetUnitVertexColor(v, 255, 255, 255, 128)
        call HTSaveInteger(t, INDEX, i-1)
    endif
    set v = null
    set u = null
    set caster = null
endfunction
function AChaineDeLaMort takes nothing returns nothing
    local timer t = null
    local unit caster = GetTriggerUnit()
    local unit u = null
    local group g = NewGroup()
    local integer abilid = GetSpellAbilityId()
    call DefineUnitGroup(g, GetUnitX(caster), GetUnitY(caster), 700., GetOwningPlayer(caster), true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        set t = NewTimer()
        call HTSaveInteger(t, INDEX, 10)
        call HTSaveUnitHandle(t, CASTER, caster)
        call HTSaveUnitHandle(t, UNIT, u)
        call TimerStart(t, 0.04, true, function AChaineDeLaMortProc)
    endloop
    call DeleteGroup(g)
    set u = null
    set caster = null
endfunction

function APorteMort takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid=='A08B') then
        call ExecuteFunc("AExecution")
    elseif(abilid==PorteMortStr) then
        call ExecuteFunc("ACoupAllonge")
    elseif(abilid==PorteMortInt) then
        call ExecuteFunc("AHurlementDeTerreur")
    elseif(abilid==PorteMortAgi) then
        call ExecuteFunc("AMainDeMort")
    elseif(abilid==PorteMortUlt) then
        call ExecuteFunc("AChaineDeLaMort")
    endif
endfunction//===========================================================================
// Trigger: DrakeDeLaGuerre
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function ACharge takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local real xc = GetUnitX(caster)
    local real yc = GetUnitY(caster)
    local real xt = GetUnitX(target)
    local real yt = GetUnitY(target)
    local real dist = DistanceBetweenXY(xc, yc, xt, yt)
    local real angle = AngleBetweenXY(xc, yc, xt, yt)
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, DrakeDeLaGuerreStr, STAT_STR))
    call NoPathingTimed(caster, 0.5)
    call SlideUnit(caster, dist, angle, 0.5, false)
    call BubbleTarget(caster, 0.5)
    set target = null
    set caster = null
endfunction

function AMartellementTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit picked = HTLoadUnitHandle(t, UNIT)
    local unit u = null
    local group g = NewGroup()
    local integer i = HTLoadInteger(t, INDEX)
    call DefineUnitGroup(g, GetUnitX(picked), GetUnitY(picked), 450., GetOwningPlayer(caster), true, 10)
    if(i<=0) then
        call KillUnit(picked)
        call RemoveUnit(picked)
        call CleanTimer(t)
    else
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, DrakeDeLaGuerreInt, STAT_INT)*0.25)
        endloop
        call HTSaveInteger(t, INDEX, i-1)
    endif
    call DeleteGroup(g)
    set u = null
    set picked = null
    set caster = null
endfunction
function AMartellement takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local unit u = null
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)
    call CreateEffectTimed(caster, "Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl", "origin", 0.0)
    set u = CreateUnit(GetOwningPlayer(caster), 'e002', x, y, 0.0)
    call UnitAddAbility(u, 'A024')
    call IssuePointOrder(u, "earthquake", x, y)
    call HTSaveInteger(t, INDEX, 4)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveUnitHandle(t, UNIT, u)
    call TimerStart(t, 1.00, true, function AMartellementTick)
    set u = null
    set caster = null
endfunction

function ANovaDeChoc takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local group g = NewGroup()
    local real radius = 250.0+I2R(GetUnitAbilityLevel(caster, DrakeDeLaGuerreAgi)*50)
    local real dist = 0.0
    local real angle = 0.0
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)
    local real xp = 0.0
    local real yp = 0.0
    call CreateEffectTimed(caster, "Units\\NightElf\\Wisp\\WispExplode.mdl", "origin", 0.0)
    call DefineUnitGroup(g, x, y, radius, GetOwningPlayer(caster), true, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, DrakeDeLaGuerreAgi, STAT_AGI))
        set xp = GetUnitX(u)
        set yp = GetUnitY(u)
        set angle = AngleBetweenXY(x, y, xp, yp)
        set dist = radius - DistanceBetweenXY(x, y, xp, yp)
        call ChangeTargetHeightOverTime(u, 0.5, 300.)
        call SlowTarget(u, 2.)
        call SlideUnit(u, dist, angle, 0.5, true)
        call CreateEffectTimed(u, "Objects\\Spawnmodels\\Undead\\ImpaleTargetDust\\ImpaleTargetDust.mdl", "origin", 0.0)
    endloop
    call DeleteGroup(g)
    set u = null
    set caster = null
endfunction

function AFrappeDuDragon takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local unit u = null
    local group g = NewGroup()
    call DefineUnitGroup(g, GetUnitX(target), GetUnitY(target), 550., GetOwningPlayer(caster), true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
    call CreateEffectTimed(target, "FrostNova.mdx", "overhead", 0.)
    call CreateEffectTimed(target, "FrostNova.mdx", "overhead", 0.)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        if(GetUnitState(target, UNIT_STATE_LIFE)<GetUnitState(target, UNIT_STATE_MAX_LIFE)*0.25) then
            call UltimateDamageTarget(caster, u, 1.25*GetSpellDamage(caster, u, DrakeDeLaGuerreUlt, STAT_ULT))
        else
            call UltimateDamageTarget(caster, u, GetSpellDamage(caster, u, DrakeDeLaGuerreUlt, STAT_ULT))
        endif
    endloop
    call DeleteGroup(g)
    set u = null
    set target = null
    set caster = null
endfunction

function ADrakeDeLaGuerre takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid==DrakeDeLaGuerreStr) then
        call ExecuteFunc("ACharge")
    elseif(abilid==DrakeDeLaGuerreInt) then
        call ExecuteFunc("AMartellement")
    elseif(abilid==DrakeDeLaGuerreAgi) then
        call ExecuteFunc("ANovaDeChoc")
    elseif(abilid==DrakeDeLaGuerreUlt) then
        call ExecuteFunc("AFrappeDuDragon")
    endif
endfunction//===========================================================================
// Trigger: MarcheurDeLhiver
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function AFrappePetrificatrice takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call CreateEffectTimed(target, "Shiva'sWrath.mdx", "origin", 0.0)
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, MarcheurDeLhiverStr, STAT_STR))
    call SlowTarget(target, 5.)
    set target = null
    set caster = null
endfunction

function ATombeauDeGlace takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local integer i = 0
    local real x = GetSpellTargetX()
    local real y = GetSpellTargetY()
    call CreateEffectXYTimed(x, y, "Objects\\Spawnmodels\\Naga\\NagaDeath\\NagaDeath.mdl", 0.)
    call DefineUnitGroup(g, x, y, 450., p, true, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, MarcheurDeLhiverInt, STAT_INT))
    endloop
    set u = CreateUnit(p, 'n005', x, y, 0.)
    call UnitApplyTimedLife(u, 'BTLF', 5.3)
    call SetUnitVertexColor(u, 255, 255, 255, 128)
    set i = 0
    loop
        exitwhen i>=20
        set u = CreateUnit(p, 'n00E', PolarX(x, 400., I2R(i*18)), PolarY(y, 400., I2R(i*18)), 0.)
        call UnitApplyTimedLife(u, 'BTLF', 5.8)
        call SetUnitVertexColor(u, 255, 255, 255, 128)
        call CreateDestructableTimed('YTpc', PolarX(x, 400., I2R(i*18)), PolarY(y, 400., I2R(i*18)), 5.)
        set i=i+1
    endloop
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction

function ABlocDeGivreTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit u = null
    local group g = NewGroup()
    local integer i = HTLoadInteger(t, INDEX)
    if(i<=0) then
        call CleanTimer(t)
    else
        call DefineUnitGroup(g, GetUnitX(caster), GetUnitY(caster), 350, GetOwningPlayer(caster), true, 10)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            call SpellDamageTarget(caster, u, 0.5 * GetSpellDamage(caster, u, MarcheurDeLhiverAgi, STAT_AGI))
        endloop
        call HTSaveInteger(t, INDEX, i-1)
    endif
    call DeleteGroup(g)
    set u = null
    set caster = null
endfunction
function ABlocDeGivre takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local real dur = 1.5+0.5*GetUnitAbilityLevel(caster, MarcheurDeLhiverAgi)
    call AddDurationBar(caster, dur, STAT_AGI, true)
    call CreateEffectTimed(caster, "Abilities\\Spells\\Undead\\FreezingBreath\\FreezingBreathTargetArt.mdl", "origin", dur)
    call ImmuneTarget(caster, dur)
    call HTSaveInteger(t, INDEX, R2I(dur))
    call HTSaveUnitHandle(t, CASTER, caster)
    call TimerStart(t, 1.0, true, function ABlocDeGivreTick)
    set caster = null
endfunction

function AEreGlaciaireEnd takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit u = null
    local group g = HTLoadGroupHandle(t, GROUP)
    call SetUnitAnimation(caster, "attack")
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call CreateEffectTimed(u, "IceNova.mdl", "origin", 0.)
        call UltimateDamageTarget(caster, u, GetSpellDamage(caster, u, MarcheurDeLhiverUlt, STAT_ULT))
    endloop
    call CleanTimer(t)
    call DeleteGroup(g)
    set u = null
    set caster = null
endfunction
function AEreGlaciaire takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local group gt = NewGroup()
    local integer i = 0
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)
    call DefineUnitGroup(g, x, y, 500., p, true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
    call GroupAddGroup(g, gt)
    loop
        exitwhen i>=4
        call UnitApplyTimedLife(CreateUnit(p, 'n00R', PolarX(x, 200., I2R(i*90)), PolarY(y, 200., I2R(i*90)), 0.0), 'BTLF', 0.5)
        set i=i+1
    endloop
    call CreateEffectTimed(caster, "IceNova.mdx", "origin", 1.5)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call CreateEffectTimed(u, "Abilities\\Spells\\Undead\\FrostNova\\FrostNovaTarget.mdl", "origin", 1.5)
        call CreateEffectTimed(u, "Abilities\\Spells\\Undead\\FreezingBreath\\FreezingBreathTargetArt.mdl", "origin", 1.5)
        call StunTarget(u, 1.5)
    endloop
    call HTSaveGroupHandle(t, GROUP, gt)
    call HTSaveUnitHandle(t, CASTER, caster)
    call TimerStart(t, 1.5, false, function AEreGlaciaireEnd)
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction

function AMarcheurDeLhiver takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid==MarcheurDeLhiverStr) then
        call ExecuteFunc("AFrappePetrificatrice")
    elseif(abilid==MarcheurDeLhiverInt) then
        call ExecuteFunc("ATombeauDeGlace")
    elseif(abilid==MarcheurDeLhiverAgi) then
        call ExecuteFunc("ABlocDeGivre")
    elseif(abilid==MarcheurDeLhiverUlt) then
        call ExecuteFunc("AEreGlaciaire")
    endif
endfunction//===========================================================================
// Trigger: GardienDeLaTerre
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function ALienTerrestre takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, GardienDeLaTerreStr, STAT_STR))
    call CreateEffectTimed(target, "SandTrap.mdx", "origin", 0.0)
    call SlowTarget(target, 3.)
    set target = null
    set caster = null
endfunction

function AOndeDeTerreTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit picked = HTLoadUnitHandle(t, UNIT)
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group damaged = HTLoadGroupHandle(t, GROUP)
    local group g = NewGroup()
    local integer i = HTLoadInteger(t, INDEX)
    local real x = GetUnitX(picked)
    local real y = GetUnitY(picked)
    if(i<=0) then
        call KillUnit(picked)
        call RemoveUnit(picked)
        call CleanTimer(t)
        call DeleteGroup(damaged)
    else
        call UnitApplyTimedLife(CreateUnit(p, 'n01F', x, y, 0.0), 'BTLF', 2.5)
        call DefineUnitGroup(g, x, y, 250.0, p, true, 10)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            if(IsUnitInGroup(u, damaged)==false) then
                if(CountUnitsInGroup(damaged)<10) then
                    call GroupAddUnit(damaged, u)
                    call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, GardienDeLaTerreInt, STAT_INT))
                endif
            endif
        endloop
        call HTSaveInteger(t, INDEX, i-1)
    endif
    call DeleteGroup(g)
    set p = null
    set u = null
    set picked = null
    set caster = null
endfunction
function AOndeDeTerre takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local unit picked = null
    local real xc = GetUnitX(caster)
    local real yc = GetUnitY(caster)
    local real angle = AngleBetweenXY(xc, yc, GetSpellTargetX(), GetSpellTargetY())
    set picked = CreateUnit(GetOwningPlayer(caster), 'n021', PolarX(xc, 50.0, angle), PolarY(yc, 50.0, angle), angle)
    call SlideUnit(picked, 600.0, angle, 0.45, true)
    call HTSaveInteger(t, INDEX, 10)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveUnitHandle(t, UNIT, picked)
    call HTSaveGroupHandle(t, GROUP, NewGroup())
    call TimerStart(t, 0.05, true, function AOndeDeTerreTick)
    set picked = null
    set caster = null
endfunction

function CTempeteDeSable takes nothing returns boolean
    return GetSpellAbilityId()==GardienDeLaTerreAgi
endfunction
function ATempeteDeSableTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local integer i = HTLoadInteger(t, INDEX)
    local integer j = 0
    local integer k = 0
    local real x = HTLoadReal(t, REAL1)
    local real y = HTLoadReal(t, REAL2)
    local real damage = 0.
    if(i<=0 or HTHaveSavedBoolean(t, ENDCHANNELSTOP)) then
        call CleanTimer(t)
    else
        call DefineUnitGroup(g, x, y, 450., p, true, 15)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            call SpellDamageTarget(caster, u, 0.3 * GetSpellDamage(caster, u, GardienDeLaTerreAgi, STAT_AGI))
            call BlindTarget(u, 5.)
        endloop
        loop
            exitwhen j>=3
            set k = R2I(Pow(2., 2. + I2R(j)))
            loop
                exitwhen k<=0
                    set u = CreateUnit(p, 'e003', PolarX(x, I2R(j*140), 90./(Pow(2.,I2R(j))) * I2R(k)), PolarY(y, I2R(j*140), 90.0/(Pow(2.0,I2R(j))) * I2R(k)), 0.0)
                    call UnitApplyTimedLife(u, 'BTLF', 0.8)
                    call SetUnitAbilityLevel(u, 'A03B', GetUnitAbilityLevel(caster, GardienDeLaTerreAgi))
                    call SetUnitVertexColor(u, 255, 255, 255, 128)
                set k = k - 1
            endloop
            set j = j + 1
        endloop
        call HTSaveInteger(t, INDEX, i-1)
    endif
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction
function ATempeteDeSable takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    call HTSaveInteger(t, INDEX, 5)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveReal(t, REAL1, GetSpellTargetX())
    call HTSaveReal(t, REAL2, GetSpellTargetY())
    call EndChannelTrigger(caster, t, CondTempeteDeSable)
    call TimerStart(t, 1., true, function ATempeteDeSableTick)
    set caster = null
endfunction

function CPluieDeRoc takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit())=='n02T'
endfunction
function APluieDeRoc takes nothing returns nothing
    local unit dying = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(dying)
    local group g = NewGroup()
    local real x = GetUnitX(dying)
    local real y = GetUnitY(dying)
    call CreateEffectXYTimed(x, y, "SandExplosion.mdx", 0.)
    call DefineUnitGroup(g, x, y, 300., p, true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call SpellDamageTarget(udg_Hero[GetPlayerId(p)], u, GetSpellDamage(udg_Hero[GetPlayerId(p)], u, GardienDeLaTerreUlt, STAT_ULT)*0.5)
    endloop
    call DeleteGroup(g)
    set p = null
    set u = null
    set dying = null
endfunction

function AGardienDeLaTerre takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid==GardienDeLaTerreStr) then
        call ExecuteFunc("ALienTerrestre")
    elseif(abilid==GardienDeLaTerreInt) then
        call ExecuteFunc("AOndeDeTerre")
    elseif(abilid==GardienDeLaTerreAgi) then
        call ExecuteFunc("ATempeteDeSable")
    endif
endfunction

globals
    boolexpr CondTempeteDeSable
    boolexpr CondPluieDeRoc
endglobals
function InitTrig_GardienDeLaTerre takes nothing returns nothing
    set CondTempeteDeSable = Condition(function CTempeteDeSable)
    set CondPluieDeRoc = Condition(function CPluieDeRoc)
    set gg_trg_GardienDeLaTerre = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_GardienDeLaTerre, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(gg_trg_GardienDeLaTerre, CondPluieDeRoc)
    call TriggerAddAction(gg_trg_GardienDeLaTerre, function APluieDeRoc)
endfunction//===========================================================================
// Trigger: Justicier
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function JusticierIncreaseEnergy takes unit caster, boolean enemy, integer delta returns integer
    local integer limit = 2
    call UnitRemoveAbility(caster, 'S001')
    call UnitRemoveAbility(caster, 'S002')
    if(GetUnitAbilityLevel(caster, udg_Buff_fanatisme) > 0) then
        set limit = limit + 2
    endif
    if(enemy) then
        call UnitAddAbility(caster, 'S001')
        if(GetUnitUserData(caster)>0) then
            call SetUnitUserData(caster, -delta)
        else
            call SetUnitUserData(caster, GetUnitUserData(caster)-delta)
        endif
        
        if(GetUnitUserData(caster)<=-limit) then
            call SetUnitUserData(caster, -limit)
        endif
        call CombatText(I2S(-GetUnitUserData(caster))+"!", 10, caster, 100., 50., 100., 135., 225.)
    else
        call UnitAddAbility(caster, 'S002')
        if(GetUnitUserData(caster)<0) then
            call SetUnitUserData(caster, delta)
        else
            call SetUnitUserData(caster, GetUnitUserData(caster)+delta)
        endif
        
        if(GetUnitUserData(caster)>=limit) then
            call SetUnitUserData(caster, limit)
        endif
        call CombatText(I2S(GetUnitUserData(caster))+"!", 10, caster, 100., 100., 50., 135., 225.)
    endif
    return GetUnitUserData(caster)
endfunction

function AImpositionDeFoi takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local player p = GetOwningPlayer(caster)
    local integer energies = JusticierIncreaseEnergy(caster, IsUnitEnemy(target, p), 1)
    call CreateEffectTimed(target, "LightStrikeArray.mdx", "origin", 0.8)
    if(IsUnitEnemy(target, p) == true) then
        call StunTarget(target, 1.)
        if(GetUnitAbilityLevel(caster, udg_Buff_fanatisme)>0) then
            call UltimateDamageTarget(caster, target, -1.*GetSpellDamage(caster, target, JusticierStr, STAT_STR)*0.6*energies)
        else
            call SpellDamageTarget(caster, target, -1.*GetSpellDamage(caster, target, JusticierStr, STAT_STR)*0.6*energies)
        endif
    else
        if(GetUnitAbilityLevel(caster, udg_Buff_fanatisme)>0) then
            call UltimateDamageTarget(caster, target, GetSpellDamage(caster, target, JusticierStr, STAT_STR)*0.6*energies)
        else
            call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, JusticierStr, STAT_STR)*0.6*energies)
        endif
    endif
    set p = null
    set target = null
    set caster = null
endfunction

function AExplosionDeJusticeEnd takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit target = HTLoadUnitHandle(t, TARGET)
    local unit u = null
    local group g = NewGroup()
    local real x = GetUnitX(target)
    local real y = GetUnitY(target)
    if(GetUnitState(target, UNIT_STATE_LIFE)>0) then
        call CreateEffectXYTimed(x, y, "LightNova.mdx", 0.)
        call CreateEffectXYTimed(x, y, "LightNova.mdx", 0.)
        call DefineUnitGroup(g, x, y, 450., GetOwningPlayer(target), false, 10)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            if(IsUnitEnemy(u, GetOwningPlayer(caster))) then
                if(GetUnitAbilityLevel(caster, udg_Buff_fanatisme)>0) then
                    call UltimateDamageTarget(caster, u, -0.5*GetSpellDamage(caster, u, JusticierInt, STAT_INT)*GetUnitUserData(caster))
                else
                    call SpellDamageTarget(caster, u, -0.5*GetSpellDamage(caster, u, JusticierInt, STAT_INT)*GetUnitUserData(caster))
                endif
            else
                if(GetUnitAbilityLevel(caster, udg_Buff_fanatisme)>0) then
                    call UltimateDamageTarget(caster, u, 0.5*GetSpellDamage(caster, u, JusticierInt, STAT_INT)*GetUnitUserData(caster))
                else
                    call SpellDamageTarget(caster, u, 0.5*GetSpellDamage(caster, u, JusticierInt, STAT_INT)*GetUnitUserData(caster))
                endif
            endif
        endloop
    endif
    call CleanTimer(t)
    call DeleteGroup(g)
    set u = null
    set target = null
    set caster = null
endfunction
function AExplosionDeJustice takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call JusticierIncreaseEnergy(caster, IsUnitEnemy(target, GetOwningPlayer(caster)), 1)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveUnitHandle(t, TARGET, target)
    call TimerStart(t, 2., false, function AExplosionDeJusticeEnd)
    set target = null
    set caster = null
endfunction

function AInterventionDivine takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local integer limit = 2
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)
    local real duration = 0.5 + 0.5 * GetUnitAbilityLevel(caster, JusticierAgi)
    call JusticierIncreaseEnergy(caster, GetUnitUserData(caster) < 0, 4)
    call CreateEffectTimed(caster, "TheHolyBomb.mdx", "origin", 0.)
    if(GetUnitUserData(caster)<0) then
        call DefineUnitGroup(g, x, y, 450., p, true, 10)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            if(GetUnitAbilityLevel(caster, udg_Buff_fanatisme)>0) then
                call UltimateDamageTarget(caster, u, -1.*GetSpellDamage(caster, u, JusticierAgi, STAT_AGI)*0.6*GetUnitUserData(caster))
            else
                call SpellDamageTarget(caster, u, -1.*GetSpellDamage(caster, u, JusticierAgi, STAT_AGI)*0.6*GetUnitUserData(caster))
            endif
            call SlowTarget(u, duration)
        endloop
    elseif(GetUnitUserData(caster)>0) then
        call DefineUnitGroup(g, x, y, 450., p, false, 10)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            if(GetUnitAbilityLevel(caster, udg_Buff_fanatisme)>0) then
                call UltimateDamageTarget(caster, u, GetSpellDamage(caster, u, JusticierAgi, STAT_AGI)*0.5*GetUnitUserData(caster))
            else
                call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, JusticierAgi, STAT_AGI)*0.5*GetUnitUserData(caster))
            endif
            call ImmuneTarget(u, duration)
            call CreateEffectTimed(u, "DivineRage.mdx", "chest", 0.)
            call CreateEffectTimed(u, "HolyAura_ModifiedbyGF.mdx", "origin", 2.)
        endloop
    endif
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction

function AJusticier takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid==JusticierStr) then
        call ExecuteFunc("AImpositionDeFoi")
    elseif(abilid==JusticierInt) then
        call ExecuteFunc("AExplosionDeJustice")
    elseif(abilid==JusticierAgi) then
        call ExecuteFunc("AInterventionDivine")
    elseif(abilid==JusticierUlt) then
        call AddDurationBar(GetTriggerUnit(), 15, STAT_ULT, true)
    endif
endfunction//===========================================================================
// Trigger: ChevalierNoir
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function AVoileMortel takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, ChevalierNoirStr, STAT_STR))
    call FearTarget(target, 1.0)
    call UnitApplyTimedLife(CreateUnit(GetOwningPlayer(caster), 'e005', GetUnitX(caster), GetUnitY(caster), 0.0), 'BTLF', 3.0)
    set target = null
    set caster = null
endfunction

function ACorruptionMentale takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)
    call DefineUnitGroup(g, x, y, 350.0, p, true, 10)
    call UnitApplyTimedLife(CreateUnit(p, 'e006', x, y, 0.0), 'BTLF', 3.0)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call AddAbilityTimed(u, 1.5, udg_Abil_corruptionmentale)
        call DoTMatchingBuff(caster, u, 1., 4, STAT_INT, ChevalierNoirInt, udg_Buff_corruptionmentale)
        call SlowTarget(u, 2.)
    endloop
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction

function AEmpriseDesTenebres takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local real xc = 0.
    local real yc = 0.
    local real xt = 0.
    local real yt = 0.
    call ModLife(caster, (-0.3+(0.05*GetUnitAbilityLevel(caster, ChevalierNoirAgi)))*GetUnitState(caster, UNIT_STATE_MAX_LIFE))
    if(GetUnitState(caster, UNIT_STATE_LIFE)<=0.) then
        set target = null
        set caster = null
        return
    endif
    set xc = GetUnitX(caster)
    set yc = GetUnitY(caster)
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, ChevalierNoirAgi, STAT_AGI)*0.8)
    call UnitApplyTimedLife(CreateUnit(GetOwningPlayer(caster), 'e007', xc, yc, 0.0), 'BTLF', 3.0)
    if(GetUnitState(target, UNIT_STATE_LIFE)<=0.0) then
        set target = null
        set caster = null
        return
    endif
    set xt = GetUnitX(target)
    set yt = GetUnitY(target)
    call CreateLightningBetweenUnitsTimed(caster, target, "AFOD", 0.4)
    call NoPathingTimed(target, 0.45)
    call CreateEffectTimed(target, "DarkForcefield.mdx", "origin", 0.45)
    call ChangeTargetHeightOverTime(target, 0.4, 400.0)
    call SlideUnit(target, DistanceBetweenXY(xt, yt, xc, yc), AngleBetweenXY(xt, yt, xc, yc), 0.4, false)
    set target = null
    set caster = null
endfunction

function AOndeDeMort takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local integer i = 0
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)
    call DefineUnitGroup(g, x, y, 600.0, p, true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call UltimateDamageTarget(caster, u, GetSpellDamage(caster, u, ChevalierNoirUlt, STAT_ULT))
        call DisarmTarget(u, 3.)
    endloop
    loop
        exitwhen i>=15
        set u = CreateUnit(p, 'n016', x, y, 180.+I2R(i*24))
        call UnitApplyTimedLife(u, 'BTLF', 0.45)
        call SlideUnit(u, 600., I2R(i*24), 0.4, true)
        set i=i+1
    endloop
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction

function AChevalierNoir takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid==ChevalierNoirStr) then
        call ExecuteFunc("AVoileMortel")
    elseif(abilid==ChevalierNoirInt) then
        call ExecuteFunc("ACorruptionMentale")
    elseif(abilid==ChevalierNoirAgi) then
        call ExecuteFunc("AEmpriseDesTenebres")
    elseif(abilid==ChevalierNoirUlt) then
        call ExecuteFunc("AOndeDeMort")
    endif
endfunction//===========================================================================
// Trigger: HerautDeLaPaix
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function ALumiereDePaix takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local real factor = 1.
    call CreateEffectTimed(target, "HolyAwakening.mdx", "origin", 0.)
    if(IsUnitEnemy(target, GetOwningPlayer(caster))) then
        call DisarmTarget(target, 3.)
    else
        set factor = factor + 0.1 * I2R(DispelTarget(caster, target, false, true))
    endif
    call SpellDamageTarget(caster, target, factor * GetSpellDamage(caster, target, HerautDeLaPaixStr, STAT_STR))
    set target = null
    set caster = null
endfunction

function APacifisme takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local group g = NewGroup()
    local real x = GetSpellTargetX()
    local real y = GetSpellTargetY()
    call CreateEffectXYTimed(x, y, "Abilities\\Spells\\Other\\Andt\\Andt.mdl", 0.)
    call CreateEffectXYTimed(x, y, "Abilities\\Spells\\Other\\Andt\\Andt.mdl", 0.)
    call DefineUnitGroup(g, x, y, 400., GetOwningPlayer(caster), true, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, HerautDeLaPaixInt, STAT_INT))
        call DisorientTarget(u, 0.5)
        call CreateEffectTimed(u, "Judgment of Light.mdx", "origin", 0.0)
    endloop
    call DeleteGroup(g)
    set u = null
    set caster = null
endfunction

function ASanctuaireEnd takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local real dur = 1.5+I2R(HTLoadInteger(t, INTEGER))*0.5
    local real x = HTLoadReal(t, REAL1)
    local real y = HTLoadReal(t, REAL2)
    local integer i = 0
    call UnitApplyTimedLife(CreateUnit(Player(15), 'n01W', x, y, 0.0), 'BTLF', dur)
    call UnitApplyTimedLife(CreateUnit(Player(15), 'n01W', x, y, 0.0), 'BTLF', dur)
    loop
        exitwhen i>=15
        call CreateDestructableTimed('YTpc', PolarX(x, 300.0, I2R(i*24)), PolarY(y, 300.0, I2R(i*24)), dur)
        set i=i+1
    endloop
    call CleanTimer(t)
endfunction
function ASanctuaire takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)
    local real xp = 0.0
    local real yp = 0.0
    local real angle = 0.0
    call CreateEffectTimed(caster, "HolyStomp.mdx", "origin", 0.0)
    call DefineUnitGroup(g, x, y, 350.0, p, false, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, HerautDeLaPaixAgi, STAT_AGI)*0.75)
        call CreateEffectTimed(u, "DivineRage.mdx", "chest", 0.0)
    endloop
    call GroupClear(g)
    call DefineUnitGroup(g, x, y, 350.0, p, true, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, HerautDeLaPaixAgi, STAT_AGI)*0.75)
        set xp = GetUnitX(u)
        set yp = GetUnitY(u)
        set angle = AngleBetweenXY(x, y, xp, yp)
        call SlideUnit(u, 400.0-DistanceBetweenXY(x, y, xp, yp), angle, 0.4, true)
        call CreateEffectTimed(u, "DivineRage.mdx", "chest", 0.0)
    endloop
    call HTSaveInteger(t, INTEGER, GetUnitAbilityLevel(caster, HerautDeLaPaixAgi))
    call HTSaveReal(t, REAL1, x)
    call HTSaveReal(t, REAL2, y)
    call TimerStart(t, 0.6, false, function ASanctuaireEnd)
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction

function AColereDivine takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local integer i = 0
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)
    call DefineUnitGroup(g, x, y, 500., p, true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call UltimateDamageTarget(caster, u, GetSpellDamage(caster, u, HerautDeLaPaixUlt, STAT_ULT)*0.75)
    endloop
    call GroupClear(g)
    call DefineUnitGroup(g, x, y, 500., p, false, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call UltimateDamageTarget(caster, u, GetSpellDamage(caster, u, HerautDeLaPaixUlt, STAT_ULT)*0.75)
    endloop
    loop
        exitwhen i>=18
        set u = CreateUnit(p, 'n01Z', x, y, I2R(i*20))
        call SetUnitVertexColor(u, 255, 255, 255, 128)
        call UnitApplyTimedLife(u, 'BTLF', 0.39)
        call SlideUnit(u, 500., I2R(i*20), 0.39, true)
        set i=i+1
    endloop
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction

function AHerautDeLaPaix takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid==HerautDeLaPaixStr) then
        call ExecuteFunc("ALumiereDePaix")
    elseif(abilid==HerautDeLaPaixInt) then
        call ExecuteFunc("APacifisme")
    elseif(abilid==HerautDeLaPaixAgi) then
        call ExecuteFunc("ASanctuaire")
    elseif(abilid==HerautDeLaPaixUlt) then
        call ExecuteFunc("AColereDivine")
    endif
endfunction//===========================================================================
// Trigger: Barbare
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function AFrappeColerique takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call CreateEffectTimed(target, "SoulshotB-gradeTarget.mdx", "chest", 0.)
    call SpellDamageTarget(caster, target, 1. * GetSpellDamage(caster, target, 'A07S', STAT_AGI))
    call MortalStrikeTarget(target, 4.)
    set target = null
    set caster = null
endfunction

function APunch takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, BarbareStr, STAT_STR))
    call CreateEffectTimed(target, "Objects\\Spawnmodels\\Undead\\ImpaleTargetDust\\ImpaleTargetDust.mdl", "origin", 0.0)
    call SlideUnit(target, 300., AngleBetweenXY(GetUnitX(caster), GetUnitY(caster), GetUnitX(target), GetUnitY(target)), 0.4, true)
    call DisarmTarget(target, 3.)
    set target = null
    set caster = null
endfunction

function ACriDeBataille takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local group g = NewGroup()
    call CreateEffectTimed(caster, "BlackChakraExplosion.mdx", "origin", 0.0)
    call DefineUnitGroup(g, GetUnitX(caster), GetUnitY(caster), 400.0, GetOwningPlayer(caster), true, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u == null
        call GroupRemoveUnit(g, u)
        call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, BarbareInt, STAT_INT))
    endloop
    call DeleteGroup(g)
    set u = null
    set caster = null
endfunction

globals
    boolexpr CondRush
endglobals
function CRush takes nothing returns boolean
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO)==true and IsUnitAlly(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit()))
endfunction
function InitTrig_Barbare takes nothing returns nothing
    set CondRush = Condition(function CRush)
endfunction
function ARush takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local unit u = null
    local group g = NewGroup()
    local real xc = GetUnitX(caster)
    local real yc = GetUnitY(caster)
    local real xt = GetUnitX(target)
    local real yt = GetUnitY(target)
    local real xp = 0.0
    local real yp = 0.0
    call GroupEnumUnitsInRange(g, xc, yc, 350.0, CondRush)
    call SpellDamageTarget(caster, target, 0.4*GetSpellDamage(caster, target, BarbareAgi, STAT_AGI)*I2R(CountUnitsInGroup(g)))
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        set xp = GetUnitX(u)
        set yp = GetUnitY(u)
        call NoPathingTimed(u, 0.45)
        call SlideUnit(u, DistanceBetweenXY(xp, yp, xt, yt), AngleBetweenXY(xp, yp, xt, yt), 0.4, false)
        call SetUnitFacing(u, AngleBetweenXY(xc, yc, xt, yt))
        call BubbleTarget(u, 0.40)
    endloop
    call DeleteGroup(g)
    set u = null
    set target = null
    set caster = null
endfunction

function ARageTemeraire takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    call ResetAbilityCooldown(caster, BarbareStr)
    call ResetAbilityCooldown(caster, BarbareInt)
    call ResetAbilityCooldown(caster, BarbareAgi)
    call ResetAbilityCooldown(caster, 'A07S')
    call AddDurationBar(caster, 12, STAT_ULT, true)
    set caster = null
endfunction

function ABarbare takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid=='A07S') then
        call ExecuteFunc("AFrappeColerique")
    elseif(abilid==BarbareStr) then
        call ExecuteFunc("APunch")
    elseif(abilid==BarbareInt) then
        call ExecuteFunc("ACriDeBataille")
    elseif(abilid==BarbareAgi) then
        call ExecuteFunc("ARush")
    elseif(abilid==BarbareUlt) then
        call ExecuteFunc("ARageTemeraire")
    endif
endfunction//===========================================================================
// Trigger: Vampire
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function ALacerationFructueuse takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local real damage = GetSpellDamage(caster, target, VampireStr, STAT_STR)
    call SpellDamageTarget(caster, target, damage)
    call CreateEffectTimed(target, "Objects\\Spawnmodels\\NightElf\\NightElfBlood\\NightElfBloodDruidRaven.mdl", "overhead", 0.)
    call BlindTarget(target, 5.)
    call StopTarget(target)
    call CreateEffectTimed(caster, "VampiricAuraTarget.mdx", "origin", 0.)
    call ModLife(caster, 0.5*damage)
    set target = null
    set caster = null
endfunction

function AAbsorptionDeSang takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local integer i = 0
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)
    local real xp = 0.
    local real yp = 0.
    local real damage = 0.
    local real heal = 0.
    call CreateEffectTimed(caster, "Abilities\\Spells\\Items\\VampiricPotion\\VampPotionCaster.mdl", "origin", 1.5)
    call DefineUnitGroup(g, x, y, 450.0, p, true, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        set damage = GetSpellDamage(caster, u, VampireInt, STAT_INT)
        call SpellDamageTarget(caster, u, damage)
        set heal = heal + damage
        call DisorientTarget(u, 1.)
    endloop
    call CreateEffectTimed(caster, "VampiricAuraTarget.mdx", "origin", 0.)
    call ModLife(caster, heal*0.1)
    loop
        exitwhen i>=8
        set xp = PolarX(x, 300., I2R(45*i))
        set yp = PolarY(y, 300., I2R(45*i))
        set u = CreateUnit(p, 'n01X', xp, yp, AngleBetweenXY(xp, yp, x, y))
        call UnitApplyTimedLife(u, 'BTLF', 0.3)
        call SlideUnit(u, 300., I2R(45*i)-180.0, 0.3, true)
        set i=i+1
    endloop
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction

function ARituelVampirique takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local group g = NewGroup()
    local real damage = 0.
    local real heal = 0.
    call DefineUnitGroup(g, GetUnitX(caster), GetUnitY(caster), 600., GetOwningPlayer(caster), true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        set damage = GetSpellDamage(caster, u, VampireUlt, STAT_ULT)
        call AddAbilityTimed(u, 1.5, udg_Abil_rituelvampirique)
        call DoTMatchingBuff(caster, u, 1., 4, STAT_ULT, VampireUlt, udg_Buff_rituelvampirique)
        call CreateEffectTimed(u, "Abilities\\Spells\\Demon\\DarkPortal\\DarkPortalTarget.mdl", "origin", 0.)
        call SlowTarget(u, 4.)
        set heal = heal - damage
    endloop
    set heal = 0.1*heal
    call CreateEffectTimed(caster, "Abilities\\Spells\\Demon\\DarkPortal\\DarkPortalTarget.mdl", "origin", 0.)
    call CreateEffectTimed(caster, "BloodBreathDamage.mdx", "origin", 4.)
    call DamageOverTime(caster, caster, heal*0.25, 1., 4, UNIVERSAL)
    call DeleteGroup(g)
    set u = null
    set caster = null
endfunction

function AVampire takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid==VampireStr) then
        call ExecuteFunc("ALacerationFructueuse")
    elseif(abilid==VampireInt) then
        call ExecuteFunc("AAbsorptionDeSang")
    elseif(abilid==VampireAgi) then
        call AddDurationBar(GetTriggerUnit(), 4, STAT_AGI, true)
    elseif(abilid==VampireUlt) then
        call ExecuteFunc("ARituelVampirique")
    endif
endfunction//===========================================================================
// Trigger: Assassin
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function AAttaqueSournoise takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call CreateEffectTimed(target, "Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodLarge0.mdl", "overhead", 0.)
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, AssassinStr, STAT_STR))
    call StopTarget(target)
    set target = null
    set caster = null
endfunction

function ATourbillonDeLames takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local group g = NewGroup()
    call DefineUnitGroup(g, GetUnitX(caster), GetUnitY(caster), 450.0, GetOwningPlayer(caster), true, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        if(GetUnitAbilityLevel(u, udg_Buff_poison1)>0 or GetUnitAbilityLevel(u, udg_Buff_poison2)>0) then
            call UnitRemoveAbility(u, udg_Buff_poison1)
            call UnitRemoveAbility(u, udg_Buff_poison2)
            call SlowTarget(u, 3.)
            call SpellDamageTarget(caster, u, 1.1 * GetSpellDamage(caster, u, AssassinInt, STAT_INT))
        else
            call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, AssassinInt, STAT_INT))
        endif
        call MortalStrikeTarget(u, 3.)
    endloop
    call DeleteGroup(g)
    set u = null
    set caster = null
endfunction

function APasDeLombre takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call CreateEffectTimed(caster, "Abilities\\Spells\\Human\\FlakCannons\\FlakTarget.mdl", "origin", 0.0)
    call TriggerSleepAction(0.05)
    call SetUnitXY(caster, PolarX(GetUnitX(target), 92.0, GetUnitFacing(target)+180.0), PolarY(GetUnitY(target), 92.0, GetUnitFacing(target)+180.0))
    call SetUnitFacingTimed(caster, GetUnitFacing(target), 0)
    call StunTarget(target, 0.5+I2R(GetUnitAbilityLevel(caster, AssassinAgi))*0.25)
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, AssassinAgi, STAT_AGI))
    set target = null
    set caster = null
endfunction

function ASeriesMeurtrieresTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local group g = HTLoadGroupHandle(t, GROUP)
    local integer i = HTLoadInteger(t, INDEX)
    local unit u = GetWoundestUnitOfGroup(g)
    if(i<=0) then
        call CleanTimer(t)
        call DeleteGroup(g)
    else
        if(u!=null and GetUnitState(u, UNIT_STATE_LIFE)>0.) then
            call CreateEffectTimed(caster, "Abilities\\Spells\\Human\\FlakCannons\\FlakTarget.mdl", "origin", 0.0)
            call SetUnitXY(caster, PolarX(GetUnitX(u), 92.0, (GetUnitFacing(u)+180.0)), PolarY(GetUnitY(u), 92.0, (GetUnitFacing(u)+180.0)))
            call UltimateDamageTarget(caster, u, GetSpellDamage(caster, u, AssassinUlt, STAT_ULT))
            call StopTarget(u)
        endif
        call GroupRemoveUnit(g, u)
        call HTSaveInteger(t, INDEX, i-1)
    endif
    set u = null
    set caster = null
endfunction
function ASeriesMeurtrieres takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local group g = NewGroup()
    call DefineUnitGroup(g, GetUnitX(caster), GetUnitY(caster), 550., GetOwningPlayer(caster), true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
    call BubbleTarget(caster, 0.25*CountUnitsInGroup(g))
    call HTSaveGroupHandle(t, GROUP, g)
    call HTSaveInteger(t, INDEX, CountUnitsInGroup(g))
    call HTSaveUnitHandle(t, CASTER, caster)
    call TimerStart(t, 0.25, true, function ASeriesMeurtrieresTick)
    set caster = null
endfunction

function AAssassin takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid==AssassinStr) then
        call ExecuteFunc("AAttaqueSournoise")
    elseif(abilid==AssassinInt) then
        call ExecuteFunc("ATourbillonDeLames")
    elseif(abilid==AssassinAgi) then
        call ExecuteFunc("APasDeLombre")
    elseif(abilid==AssassinUlt) then
        call ExecuteFunc("ASeriesMeurtrieres")
    endif
endfunction//===========================================================================
// Trigger: TisseurDeLiens
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function AFrappeInsectoide takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, TisseurDeLiensStr, STAT_STR))
    call MuteTarget(target, 2.0)
    set target = null
    set caster = null
endfunction

function ARets takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local group g = NewGroup()
    local integer i = 0
    local real x = GetSpellTargetX()
    local real y = GetSpellTargetY()
    call DefineUnitGroup(g, x, y, 300.0, GetOwningPlayer(caster), true, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, TisseurDeLiensInt, STAT_INT))
    endloop
    loop
        exitwhen i>=8
        call CreateEffectXYTimed(PolarX(x, 125.0, I2R(45*i)), PolarY(y, 125.0, I2R(45*i)), "Abilities\\Spells\\NightElf\\CorrosiveBreath\\ChimaeraAcidTargetArt.mdl", 1.0)
        set i=i+1
    endloop
    call DeleteGroup(g)
    set u = null
    set caster = null
endfunction

function ALienSolideTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit target = HTLoadUnitHandle(t, TARGET)
    local unit u = null
    local integer i = HTLoadInteger(t, INDEX)
    local integer j = 0
    local real xc = GetUnitX(caster)
    local real yc = GetUnitY(caster)
    local real xt = GetUnitX(target)
    local real yt = GetUnitY(target)
    local real dist = DistanceBetweenXY(xt, yt, xc, yc)
    local real angle = AngleBetweenXY(xt, yt, xc, yc)
    if(GetUnitState(caster, UNIT_STATE_LIFE)<=0) then
        set i = 0
    endif
    if(GetUnitState(target, UNIT_STATE_LIFE)<=0) then
        set i = 0
    endif
    if(i<=0) then
        loop
            exitwhen j>=15
            set u = HTLoadUnitHandle(t, DUMMY+j)
            call KillUnit(u)
            call RemoveUnit(u)
            set j=j+1
        endloop
        call CleanTimer(t)
    else
        if(dist>550.) then
            call SetUnitXY(target, PolarX(xt, dist-550., angle), PolarY(yt, dist-550., angle))
            set dist = DistanceBetweenXY(xc, yc, xt, yt)
        endif
        loop
            exitwhen j>=15
            set u = HTLoadUnitHandle(t, DUMMY+j)
            call SetUnitPosition(u, PolarX(xc, dist*0.06*I2R(j), angle+180.), PolarY(yc, dist*0.06*I2R(j), angle+180.))
            set j=j+1
        endloop
        call HTSaveInteger(t, INDEX, i-1)
    endif
    set u = null
    set target = null
    set caster = null
endfunction
function ALienSolide takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local player p = GetOwningPlayer(caster)
    local integer i = 0
    local real duration = 3.+I2R(GetUnitAbilityLevel(caster, TisseurDeLiensAgi))*0.5
    local real xc = GetUnitX(caster)
    local real yc = GetUnitY(caster)
    local real xt = GetUnitX(target)
    local real yt = GetUnitY(target)
    local real angle = AngleBetweenXY(xc, yc, xt, yt)
    local real dist = DistanceBetweenXY(xc, yc, xt, yt)
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, TisseurDeLiensAgi, STAT_AGI))
    loop
        exitwhen i>=15
        call HTSaveUnitHandle(t, DUMMY+i, CreateUnit(p, 'n01I', PolarX(xc, dist*0.06*I2R(i), angle), PolarY(yc, dist*0.06*I2R(i), angle), angle))
        set i=i+1
    endloop
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveUnitHandle(t, TARGET, target)
    call HTSaveInteger(t, INDEX, R2I(duration*20))
    call TimerStart(t, 0.05, true, function ALienSolideTick)
    set p = null
    set target = null
    set caster = null
endfunction

function ANueeDinsectesTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit u = null
    local group g = null
    local integer i = HTLoadInteger(t, INDEX)
    local real damage = 0.0
    local real heal = 0.0
    if(GetUnitState(caster, UNIT_STATE_LIFE)<=0) then
        set i = 0
    endif
    if(i<=0) then
        call CleanTimer(t)
    else
        set g = NewGroup()
        call DefineUnitGroup(g, GetUnitX(caster), GetUnitY(caster), 600., GetOwningPlayer(caster), true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            set damage = GetSpellDamage(caster, u, TisseurDeLiensUlt, STAT_ULT)*0.25
            call UltimateDamageTarget(caster, u, damage)
            set heal = heal + damage
        endloop
        call ModLife(caster, 0.15*heal)
        call DeleteGroup(g)
        call HTSaveInteger(t, INDEX, i-1)
    endif
    set u = null
    set caster = null
endfunction
function ANueeDinsectes takes nothing returns nothing
    local timer t = NewTimer()
    call HTSaveUnitHandle(t, CASTER, GetTriggerUnit())
    call HTSaveInteger(t, INDEX, 5)
    call TimerStart(t, 2.0, true, function ANueeDinsectesTick)
endfunction

function ATisseurDeLiens takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid==TisseurDeLiensStr) then
        call ExecuteFunc("AFrappeInsectoide")
    elseif(abilid==TisseurDeLiensInt) then
        call ExecuteFunc("ARets")
    elseif(abilid==TisseurDeLiensAgi) then
        call ExecuteFunc("ALienSolide")
    elseif(abilid==TisseurDeLiensUlt) then
        call ExecuteFunc("ANueeDinsectes")
    endif
endfunction//===========================================================================
// Trigger: DiscipleDuTemps
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function AEclairDeDephasage takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local real dist = GetRandomReal(150., 300.)
    local real angle = GetRandomReal(0., 360.)
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, DiscipleDuTempsStr, STAT_STR))
    call CreateEffectTimed(target, "Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl", "origin", 0.0)
    call SetUnitXY(target, PolarX(GetUnitX(target), dist, angle), PolarY(GetUnitY(target), dist, angle))
    set target = null
    set caster = null
endfunction

function AArretDuTemps takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local integer i = 0
    local real x = GetSpellTargetX()
    local real y = GetSpellTargetY()
    call DefineUnitGroup(g, x, y, 300.00, p, true, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u == null
        call GroupRemoveUnit(g, u)
        call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, DiscipleDuTempsInt, STAT_INT))
        call StunTarget(u, 1.0)
    endloop
    loop
        exitwhen i>=6
        set u = CreateUnit(p, 'n00S', PolarX(x, 250.0, I2R(i*60)), PolarY(y, 250.0, I2R(i*60)), 0.0)
        call UnitApplyTimedLife(u, 'BTLF', 1.2)
        call SetUnitVertexColor(u, 255, 255, 255, 128)
        set i = i + 1
    endloop
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction

function ADistorsionTemporelleTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit picked = HTLoadUnitHandle(t, UNIT)
    local unit u = null
    local group g = NewGroup()
    local integer i = HTLoadInteger(t, INDEX)
    if(i<=0) then
        call CleanTimer(t)
        call ShowUnit(picked, false)
        call KillUnit(picked)
        call RemoveUnit(picked)
    else
        call DefineUnitGroup(g, GetUnitX(picked), GetUnitY(picked), 400., GetOwningPlayer(picked), true, 10)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, DiscipleDuTempsAgi, STAT_AGI)*0.3)
        endloop
        call HTSaveInteger(t, INDEX, i-1)
    endif
    call DeleteGroup(g)
    set u = null
    set picked = null
    set caster = null
endfunction
function ADistorsionTemporelle takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local unit u = CreateUnit(GetOwningPlayer(caster), 'o00C', GetSpellTargetX(), GetSpellTargetY(), 0.0)
    call SetUnitVertexColor(u, 255, 255, 255, 128)
    call SetUnitAbilityLevel(u, 'A00Z', GetUnitAbilityLevel(caster, DiscipleDuTempsAgi))
    call HTSaveInteger(t, INDEX, 5)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveUnitHandle(t, UNIT, u)
    call TimerStart(t, 1.0, true, function ADistorsionTemporelleTick)
    set u = null
    set caster = null
endfunction

function AVortexPull takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit u = null
    local group g = NewGroup()
    local integer i = HTLoadInteger(t, INDEX)
    local real x = HTLoadReal(t, REAL1)
    local real y = HTLoadReal(t, REAL2)
    local real xp = 0.0
    local real yp = 0.0
    local real dist = 0.0
    local real angle = 0.0
    if(i<=0) then
        call CleanTimer(t)
    else
        call DefineUnitGroup(g, x, y, 450., GetOwningPlayer(caster), true, 50)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            set xp = GetUnitX(u)
            set yp = GetUnitY(u)
            set dist = DistanceBetweenXY(x, y, xp, yp)-4.0
            set angle = AngleBetweenXY(x, y, xp, yp)-8.0
            call SetUnitXY(u, PolarX(x, dist, angle), PolarY(y, dist, angle))
        endloop
        if(ModuloInteger(i, 19)==0) then
            call GroupClear(g)
            call DefineUnitGroup(g, x, y, 450.0, GetOwningPlayer(caster), true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
            loop
                set u = FirstOfGroup(g)
                exitwhen u==null
                call GroupRemoveUnit(g, u)
                call UltimateDamageTarget(caster, u, 0.2*GetSpellDamage(caster, u, DiscipleDuTempsUlt, STAT_ULT))
            endloop
        endif
        call HTSaveInteger(t, INDEX, i-1)
    endif
    call DeleteGroup(g)
    set u = null
    set caster = null
endfunction
function AVortex takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local player p = GetOwningPlayer(caster)
    local real x = GetSpellTargetX()
    local real y = GetSpellTargetY()
    call UnitApplyTimedLife(CreateUnit(p, 'o00F', x, y, 0.00), 'BTLF', 5.0)
    call UnitApplyTimedLife(CreateUnit(p, 'o00F', x, y, 0.00), 'BTLF', 5.0)
    call HTSaveInteger(t, INDEX, 100)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveReal(t, REAL1, x)
    call HTSaveReal(t, REAL2, y)
    call TimerStart(t, 0.05, true, function AVortexPull)
    set p = null
    set caster = null
endfunction

function ADiscipleDuTemps takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid=='A08D') then// Faille temporelle
        call AddDurationBar(GetTriggerUnit(), 5, STAT_OTH, true)
    elseif(abilid==DiscipleDuTempsStr) then
        call ExecuteFunc("AEclairDeDephasage")
    elseif(abilid==DiscipleDuTempsInt) then
        call ExecuteFunc("AArretDuTemps")
    elseif(abilid==DiscipleDuTempsAgi) then
        call ExecuteFunc("ADistorsionTemporelle")
    elseif(abilid==DiscipleDuTempsUlt) then
        call ExecuteFunc("AVortex")
    endif
endfunction//===========================================================================
// Trigger: Necromancien
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function AVisionDhorreur takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local unit u = null
    local group g = NewGroup()
    local real x = GetUnitX(target)
    local real y = GetUnitY(target)
    call CreateEffectXYTimed(x, y, "DarkLightning.mdx", 0.0)
    call DefineUnitGroup(g, x, y, 300., GetOwningPlayer(caster), true, 6)
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, NecromancienStr, STAT_STR))
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        if(u!=target) then
            call FearTarget(u, 0.5)
        endif
    endloop
    call DeleteGroup(g)
    set u = null
    set target = null
    set caster = null
endfunction

function CSombreInvocation takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit())=='u000'
endfunction
function ASombreInvocation takes nothing returns nothing
    local unit dying = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(dying)
    local group g = NewGroup()
    local real x = GetUnitX(dying)
    local real y = GetUnitY(dying)
    call DefineUnitGroup(g, x, y, 400.00, p, true, 10)
    call CreateEffectXYTimed(x, y, "DarkNova.mdx", 0.0)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call SpellDamageTarget(udg_Hero[GetPlayerId(p)], u, GetSpellDamage(udg_Hero[GetPlayerId(p)], u, NecromancienInt, STAT_INT))
    endloop
    call DeleteGroup(g)
    set p = null
    set u = null
    set dying = null
endfunction

function AContactPlanaire takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, NecromancienAgi, STAT_AGI))
    set target = null
    set caster = null
endfunction

function AArmeeDesMorts takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local integer str = 0
    local integer int = 0
    local integer agi = 0
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)
    local real xu = 0.
    local real yu = 0.
    local real xp = 0.
    local real yp = 0.
    call DefineUnitGroup(g, x, y, 600., p, true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        set xu = GetUnitX(u)
        set yu = GetUnitY(u)
        if(IsUnitHero(u)) then
            set str = 'n013'
            set int = 'n019'
            set agi = 'n012'
        else
            set str = 'n01T'
            set int = 'n01L'
            set agi = 'n01D'
        endif
        
        set xp = PolarX(xu, 150., 0.)
        set yp = PolarY(yu, 150., 0.)
        call UnitApplyTimedLife(CreateUnit(p, str, xp, yp, 0.), 'BTLF', 6.)
        call CreateEffectXYTimed(xp, yp, "Abilities\\Spells\\Undead\\RaiseSkeletonWarrior\\RaiseSkeleton.mdl", 0.)
        set xp = PolarX(xu, 150., 240.)
        set yp = PolarY(yu, 150., 240.)
        call UnitApplyTimedLife(CreateUnit(p, int, xp, yp, 0.), 'BTLF', 6.)
        call CreateEffectXYTimed(xp, yp, "Abilities\\Spells\\Undead\\RaiseSkeletonWarrior\\RaiseSkeleton.mdl", 0.)
        set xp = PolarX(xu, 150., 120.)
        set yp = PolarY(yu, 150., 120.)
        call UnitApplyTimedLife(CreateUnit(p, agi, xp, yp, 0.), 'BTLF', 6.)
        call CreateEffectXYTimed(xp, yp, "Abilities\\Spells\\Undead\\RaiseSkeletonWarrior\\RaiseSkeleton.mdl", 0.)
    endloop
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction

function ANecromancien takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid==NecromancienStr) then
        call ExecuteFunc("AVisionDhorreur")
    elseif(abilid==NecromancienAgi) then
        call ExecuteFunc("AContactPlanaire")
    elseif(abilid==NecromancienUlt) then
        call ExecuteFunc("AArmeeDesMorts")
    endif
endfunction
globals
    boolexpr CondSombreInvocation
endglobals
function InitTrig_Necromancien takes nothing returns nothing
    set gg_trg_Necromancien = CreateTrigger()
    set CondSombreInvocation = Condition(function CSombreInvocation)
    call TriggerRegisterAnyUnitEventBJ(gg_trg_Necromancien, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(gg_trg_Necromancien, CondSombreInvocation)
    call TriggerAddAction(gg_trg_Necromancien, function ASombreInvocation)
endfunction//===========================================================================
// Trigger: Chaman
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function ATotemDePuissance takes nothing returns nothing
    call UnitApplyTimedLife(CreateUnit(GetOwningPlayer(GetTriggerUnit()), 'o00A', GetSpellTargetX(), GetSpellTargetY(), 0.0), 'BTLF', 5.0)
endfunction

function AChaineDenergie takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target1 = GetSpellTargetUnit()
    local unit target2 = null
    local unit target3 = null
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local player q = GetOwningPlayer(target1)
    local group g = NewGroup()
    local real x = GetUnitX(target1)
    local real y = GetUnitY(target1)
    call DefineUnitGroup(g, x, y, 450.0, q, false, 4)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        if(target1!=u) then
            set target2 = u
        endif
    endloop
    if(target2!=null) then
        call GroupClear(g)
        set x = GetUnitX(target2)
        set y = GetUnitY(target2)
        call DefineUnitGroup(g, x, y, 450.0, q, false, 4)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            if(target1!=u) then
                if(target2!=u) then
                    set target3 = u
                endif
            endif
        endloop
    endif
    if(IsUnitEnemy(target1, p)==true) then
        call CreateLightningBetweenUnitsTimed(caster, target1, "FORK", 1.0)
        call CreateEffectTimed(target1, "Abilities\\Weapons\\Bolt\\BoltImpact.mdl", "origin", 1.0)
        if(target2!=null) then
            call CreateLightningBetweenUnitsTimed(target1, target2, "FORK", 1.0)
            call CreateEffectTimed(target2, "Abilities\\Weapons\\Bolt\\BoltImpact.mdl", "origin", 1.0)
            if(target3!=null) then
                call CreateLightningBetweenUnitsTimed(target2, target3, "FORK", 1.0)
                call CreateEffectTimed(target3, "Abilities\\Weapons\\Bolt\\BoltImpact.mdl", "origin", 1.0)
            endif
        endif
    else
        call CreateLightningBetweenUnitsTimed(caster, target1, "NRJW", 1.0)
        call CreateEffectTimed(target1, "Abilities\\Spells\\Orc\\HealingWave\\HealingWaveTarget.mdl", "origin", 1.0)
        if(target2!=null) then
            call CreateLightningBetweenUnitsTimed(target1, target2, "NRJW", 1.0)
            call CreateEffectTimed(target2, "Abilities\\Spells\\Orc\\HealingWave\\HealingWaveTarget.mdl", "origin", 1.0)
            if(target3!=null) then
                call CreateLightningBetweenUnitsTimed(target2, target3, "NRJW", 1.0)
                call CreateEffectTimed(target3, "Abilities\\Spells\\Orc\\HealingWave\\HealingWaveTarget.mdl", "origin", 1.0)
            endif
        endif
    endif
    call SpellDamageTarget(caster, target1, GetSpellDamage(caster, target1, ChamanStr, STAT_STR))
    if(target2!=null) then
        call SpellDamageTarget(caster, target2, GetSpellDamage(caster, target2, ChamanStr, STAT_STR)*0.5)
        if(target3!=null) then
            call SpellDamageTarget(caster, target3, GetSpellDamage(caster, target3, ChamanStr, STAT_STR)*0.25)
        endif
    endif
    call DeleteGroup(g)
    set q = null
    set p = null
    set u = null
    set target3 = null
    set target2 = null
    set target1 = null
    set caster = null
endfunction

function AMaelstrom takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local integer i = 0
    local real x = GetSpellTargetX()
    local real y = GetSpellTargetY()
    local real xp = 0.
    local real yp = 0.
    call CreateEffectXYTimed(x, y, "Objects\\Spawnmodels\\Naga\\NagaDeath\\NagaDeath.mdl", 0.0)
    call DefineUnitGroup(g, x, y, 400.0, p, true, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, ChamanInt, STAT_INT))
        set xp = GetUnitX(u)
        set yp = GetUnitY(u)
        call SlideUnit(u, DistanceBetweenXY(xp, yp, x, y), AngleBetweenXY(xp, yp, x, y), 0.5, true)
    endloop
    loop
        exitwhen i>=8
        set xp = PolarX(x, 400.0, I2R(45*i))
        set yp = PolarY(y, 400.0, I2R(45*i))
        set u = CreateUnit(p, 'n01K', xp, yp, AngleBetweenXY(xp, yp, x, y))
        call UnitApplyTimedLife(u, 'BTLF', 0.35)
        call SlideUnit(u, 400.0, I2R(45*i)-180.0, 0.5, true)
        set i = i + 1
    endloop
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction

function ATotemDeFurieSanguinaireTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit dummy = HTLoadUnitHandle(t, DUMMY)
    local unit u = null
    local group g = null
    local integer i = HTLoadInteger(t, INDEX)
    if(i<=0) then
        call CleanTimer(t)
        call KillUnit(dummy)
        call RemoveUnit(dummy)
    else
        set g = NewGroup()
        call DefineUnitGroup(g, GetUnitX(dummy), GetUnitY(dummy), 450.0, GetOwningPlayer(caster), false, 10)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, ChamanAgi, STAT_AGI)*0.3)
        endloop
        call DeleteGroup(g)
        call HTSaveInteger(t, INDEX, i-1)
    endif
    set u = null
    set dummy = null
    set caster = null
endfunction
function ATotemDeFurieSanguinaire takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local unit u = CreateUnit(GetOwningPlayer(caster), 'o00L', GetSpellTargetX(), GetSpellTargetY(), 0.0)
    call SetUnitAbilityLevel(u, 'S000', GetUnitAbilityLevel(caster, ChamanAgi))
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveUnitHandle(t, DUMMY, u)
    call HTSaveInteger(t, INDEX, 5)
    call TimerStart(t, 1.0, true, function ATotemDeFurieSanguinaireTick)
    set u = null
    set caster = null
endfunction

function ATotemDeFureurElementaireTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit dummy = HTLoadUnitHandle(t, DUMMY)
    local unit u = null
    local group g = null
    local integer i = HTLoadInteger(t, INDEX)
    if(i<=-1) then
        call CleanTimer(t)
        call KillUnit(dummy)
        call RemoveUnit(dummy)
    elseif(i<=0) then
        call HTSaveInteger(t, INDEX, i-1)
    else
        set g = NewGroup()
        call DefineUnitGroup(g, GetUnitX(dummy), GetUnitY(dummy), 550.0, GetOwningPlayer(caster), true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
        set u = GroupPickRandomUnit(g)
        if(u!=null) then
            call CreateLightningBetweenUnitsTimed(dummy, u, "CLPB", 0.8)
            call CreateEffectTimed(u, "Abilities\\Weapons\\Bolt\\BoltImpact.mdl", "origin", 0.8)
            call UltimateDamageTarget(caster, u, GetSpellDamage(caster, u, ChamanUlt, STAT_ULT)*0.3)
        endif
        call DeleteGroup(g)
        call HTSaveInteger(t, INDEX, i-1)
    endif
    set u = null
    set dummy = null
    set caster = null
endfunction
function ATotemDeFureurElementaire takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local unit u = CreateUnit(GetOwningPlayer(caster), 'o00I', GetSpellTargetX(), GetSpellTargetY(), 0.0)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveUnitHandle(t, DUMMY, u)
    call HTSaveInteger(t, INDEX, 30)
    call TimerStart(t, 0.5, true, function ATotemDeFureurElementaireTick)
    set u = null
    set caster = null
endfunction

function AChaman takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid=='A00F') then
        call ExecuteFunc("ATotemDePuissance")
    elseif(abilid==ChamanStr) then
        call ExecuteFunc("AChaineDenergie")
    elseif(abilid==ChamanInt) then
        call ExecuteFunc("AMaelstrom")
    elseif(abilid==ChamanAgi) then
        call ExecuteFunc("ATotemDeFurieSanguinaire")
    elseif(abilid==ChamanUlt) then
        call ExecuteFunc("ATotemDeFureurElementaire")
    endif
endfunction//===========================================================================
// Trigger: SorcierRenegat
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function AProjectileArdent takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, SorcierRenegatStr, STAT_STR))
    call DisorientTarget(target, 1.0)
    set target = null
    set caster = null
endfunction

function ANovaDeGel takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local group g = NewGroup()
    call CreateEffectTimed(caster, "FrostNova2.MDX", "origin", 0.)
    call DefineUnitGroup(g, GetUnitX(caster), GetUnitY(caster), 400., GetOwningPlayer(caster), true, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, SorcierRenegatInt, STAT_INT))
    endloop
    call DeleteGroup(g)
    set u = null
    set caster = null
endfunction

function AInvisibilite takes nothing returns nothing
    call ModMana(GetSpellTargetUnit(), GetHeroAgi(GetTriggerUnit(), true))
endfunction

function ATempeteArcaniqueTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit picked = HTLoadUnitHandle(t, UNIT)
    local unit u = null
    local group g = NewGroup()
    local lightning l = null
    local integer i = HTLoadInteger(t, INDEX)
    if(i<=0) then
        call KillUnit(picked)
        call RemoveUnit(picked)
        call CleanTimer(t)
    else
        call DefineUnitGroup(g, GetUnitX(picked), GetUnitY(picked), 500., GetOwningPlayer(caster), true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            if(ModuloInteger(i, 4)==0) then
                call UltimateDamageTarget(caster, u, GetSpellDamage(caster, u, SorcierRenegatUlt, STAT_ULT)*0.5)
            endif
            set l = CreateLightningBetweenUnitsTimed(picked, u, "CLPB", 0.5)
            call SetLightningColor(l, GetLightningColorR(l), 0.0, GetLightningColorB(l), GetLightningColorA(l))
            call SlideUnit(u, GetRandomReal(150.0, 300.0), GetRandomReal(0.0, 360.0), 0.5, false)
            call ChangeTargetHeightOverTime(u, 0.5, GetRandomReal(100.0, 600.0))
            call CreateEffectTimed(u, "Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl", "chest", 0.0)
        endloop
        call HTSaveInteger(t, INDEX, i-1)
    endif
    call DeleteGroup(g)
    set l = null
    set u = null
    set picked = null
    set caster = null
endfunction
function ATempeteArcanique takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local unit u = CreateUnit(GetOwningPlayer(caster), 'n00X', GetSpellTargetX(), GetSpellTargetY(), 0.0)
    call HTSaveInteger(t, INDEX, 10)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveUnitHandle(t, UNIT, u)
    call TimerStart(t, 0.6, true, function ATempeteArcaniqueTick)
    set u = null
    set caster = null
endfunction

function ASorcierRenegat takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid==SorcierRenegatStr) then
        call ExecuteFunc("AProjectileArdent")
    elseif(abilid==SorcierRenegatInt) then
        call ExecuteFunc("ANovaDeGel")
    elseif(abilid==SorcierRenegatAgi) then
        call ExecuteFunc("AInvisibilite")
    elseif(abilid==SorcierRenegatUlt) then
        call ExecuteFunc("ATempeteArcanique")
    endif
endfunction//===========================================================================
// Trigger: Incinerateur
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function AIncineration takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call CreateEffectXYTimed(GetUnitX(target), GetUnitY(target), "Objects\\Spawnmodels\\Human\\FragmentationShards\\FragBoomSpawn.mdl", 0.0)
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, IncinerateurStr, STAT_STR))
    call DisorientTarget(target, 1.0)
    set target = null
    set caster = null
endfunction

function AConflagrationTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit picked = HTLoadUnitHandle(t, UNIT)
    local unit u = null
    local group g = NewGroup()
    local integer i = HTLoadInteger(t, INDEX)
    if(i<=0) then
        call CleanTimer(t)
        call KillUnit(picked)
        call RemoveUnit(picked)
    else
        if(DistanceBetweenXY(GetUnitX(caster), GetUnitY(caster), GetUnitX(picked), GetUnitY(picked))<300.0) then
            if(GetUnitState(caster, UNIT_STATE_LIFE)>0) then
                if(GetUnitState(caster, UNIT_STATE_LIFE)>(GetUnitState(caster, UNIT_STATE_MAX_LIFE)*0.97)) then
                    call ModLife(caster, GetUnitState(caster, UNIT_STATE_MAX_LIFE)-GetUnitState(caster, UNIT_STATE_LIFE))
                else
                    call ModLife(caster, GetUnitState(caster, UNIT_STATE_MAX_LIFE)*0.03)
                endif
            endif
        endif
        call DefineUnitGroup(g, GetUnitX(picked), GetUnitY(picked), 300.0, GetOwningPlayer(caster), true, 10)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, IncinerateurInt, STAT_INT)*0.25)
        endloop
        call HTSaveInteger(t, INDEX, i-1)
    endif
    call DeleteGroup(g)
    set u = null
    set picked = null
    set caster = null
endfunction
function AConflagration takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local real x = GetSpellTargetX()
    local real y = GetSpellTargetY()
    local unit u = CreateUnit(GetOwningPlayer(caster), 'n00U', x, y, 0.)
    call SetUnitVertexColor(u, 255, 255, 255, 128)
    call UnitApplyTimedLife(CreateUnit(GetOwningPlayer(caster), 'n00U', x, y, 0.), 'BTLF', 4.)
    call CreateEffectXYTimed(x, y, "Objects\\Spawnmodels\\Other\\NeutralBuildingExplosion\\NeutralBuildingExplosion.mdl", 0.0)
    call HTSaveInteger(t, INDEX, 4)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveUnitHandle(t, UNIT, u)
    call TimerStart(t, 1.0, true, function AConflagrationTick)
    set u = null
    set caster = null
endfunction

function ACheminArdentTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local group temp = NewGroup()
    local group fire = HTLoadGroupHandle(t, GROUP)
    local integer i = HTLoadInteger(t, INDEX)
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)
    if(i<=0) then
        call CleanTimer(t)
        loop
            set u = FirstOfGroup(fire)
            exitwhen u==null
            call GroupRemoveUnit(fire, u)
            call KillUnit(u)
            call RemoveUnit(u)
        endloop
        call DeleteGroup(fire)
    else
        set u = CreateUnit(p, 'n00V', x, y, GetUnitFacing(caster))
        call SetUnitVertexColor(u, 255, 255, 255, 128)
        call SetUnitUserData(u, 3)
        call GroupAddUnit(fire, u)
        set u = CreateUnit(p, 'n00V', x, y, GetUnitFacing(caster)+40.)
        call SetUnitVertexColor(u, 255, 255, 255, 128)
        call SetUnitUserData(u, 3)
        call GroupAddUnit(fire, u)
        set u = CreateUnit(p, 'n00V', x, y, GetUnitFacing(caster)-40.)
        call SetUnitVertexColor(u, 255, 255, 255, 128)
        call SetUnitUserData(u, 3)
        call GroupAddUnit(fire, u)
        if(ModuloInteger(i, 2)==0) then
            call GroupAddGroup(fire, temp)
            loop
                set u = FirstOfGroup(temp)
                exitwhen u==null
                call GroupRemoveUnit(temp, u)
                call SetUnitUserData(u, GetUnitUserData(u)-1)
                if(GetUnitUserData(u)==0) then
                    call KillUnit(u)
                    call RemoveUnit(u)
                    call GroupRemoveUnit(fire, u)
                endif
                call DefineUnitGroup(g, GetUnitX(u), GetUnitY(u), 256.0, p, true, 10)
            endloop
            loop
                set u = FirstOfGroup(g)
                exitwhen u==null
                call GroupRemoveUnit(g, u)
                if(IsUnitInGroup(u, temp)==false) then
                    if(CountUnitsInGroup(temp)<5) then
                        call GroupAddUnit(temp, u)
                    endif
                endif
            endloop
            loop
                set u = FirstOfGroup(temp)
                exitwhen u==null
                call GroupRemoveUnit(temp, u)
                call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, IncinerateurAgi, STAT_AGI)*0.5)
            endloop
        endif
        call HTSaveInteger(t, INDEX, i-1)
    endif
    call DeleteGroup(temp)
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction
function ACheminArdent takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local timer t = NewTimer()
    call AddDurationBar(caster, 4, STAT_AGI, true)
    call HTSaveInteger(t, INDEX, 8)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveGroupHandle(t, GROUP, NewGroup())
    call TimerStart(t, 0.5, true, function ACheminArdentTick)
    set caster = null
endfunction

function AMondeDeFlammesTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local integer count = HTLoadInteger(t, INDEX)
    local integer i = 0
    local integer j = 1
    local real x = HTLoadReal(t, REAL1)
    local real y = HTLoadReal(t, REAL2)
    if(count<=0) then
        call CleanTimer(t)
        call DefineUnitGroup(g, x, y, 600., p, true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            call UltimateDamageTarget(caster, u, GetSpellDamage(caster, u, IncinerateurUlt, STAT_ULT)*1.5)
        endloop
        call UnitApplyTimedLife(CreateUnit(p, 'n02N', x, y, 0.), 'BTLF', 8.)
        call UnitApplyTimedLife(CreateUnit(p, 'n02N', x, y, 0.), 'BTLF', 8.)
    else
        loop
            exitwhen j>=3
            set i = R2I(Pow(2.0, 2.0+I2R(j)))
            loop
                exitwhen i<=0
                    set u = CreateUnit(p, 'n018', PolarX(x, I2R(j*200), 90.0/(Pow(2.0,I2R(j)))*I2R(i)), PolarY(y, I2R(j*200), 90.0/(Pow(2.0,I2R(j)))*I2R(i)), 0.0)
                    call UnitApplyTimedLife(u, 'BTLF', 1.)
                    call SetUnitVertexColor(u, 255, 255, 255, 128)
                set i = i - 1
            endloop
            set j = j + 1
        endloop
        call HTSaveInteger(t, INDEX, count-1)
    endif
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction
function AMondeDeFlammes takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)
    call UnitApplyTimedLife(CreateUnit(GetOwningPlayer(caster), 'n02M', x, y, 0.0), 'BTLF', 4.0)
    call HTSaveInteger(t, INDEX, 4)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveReal(t, REAL1, x)
    call HTSaveReal(t, REAL2, y)
    call TimerStart(t, 1.0, true, function AMondeDeFlammesTick)
    set caster = null
endfunction

function AIncinerateur takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid==IncinerateurStr) then
        call ExecuteFunc("AIncineration")
    elseif(abilid==IncinerateurInt) then
        call ExecuteFunc("AConflagration")
    elseif(abilid==IncinerateurAgi) then
        call ExecuteFunc("ACheminArdent")
    elseif(abilid==IncinerateurUlt) then
        call ExecuteFunc("AMondeDeFlammes")
    endif
endfunction//===========================================================================
// Trigger: ErrantDeLombre
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function AApercuDeLaMort takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local integer unitid = 0
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, GetSpellAbilityId(), STAT_STR))
    if(GetUnitAbilityLevel(target, 'B009') > 0) then // Brume du Styx
        if(IsUnitHero(target)) then
            set unitid = 'n00W'
        else
            set unitid = 'n01U'
        endif
        call UnitApplyTimedLife(CreateUnit(GetOwningPlayer(caster), unitid, PolarX(GetUnitX(target), 200., GetUnitFacing(target) + 180.), PolarY(GetUnitY(target), 200., GetUnitFacing(target) + 180.), 0.), 'BTLF', 6.)
    endif
    set target = null
    set caster = null
endfunction

function ASombreConstriction takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call DoTMatchingBuff(caster, target, 1., 3, STAT_STR, ErrantDeLombreStr, udg_Buff_sombreconstriction)
    set target = null
    set caster = null
endfunction

function COmbresMorbides takes nothing returns boolean
    return GetSpellAbilityId()==ErrantDeLombreInt
endfunction
function AOmbresMorbidesTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit u = null
    local group g = NewGroup()
    local integer i = HTLoadInteger(t, INDEX)
    local real x = HTLoadReal(t, REAL1)
    local real y = HTLoadReal(t, REAL2)
    if(i<=0 or HTHaveSavedBoolean(t, ENDCHANNELSTOP)) then
        call CleanTimer(t)
    else
        call DefineUnitGroup(g, x, y, 350.0, GetOwningPlayer(caster), true, 10)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            if(IsUnitFeared(u)) then
                call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, ErrantDeLombreInt, STAT_INT)*0.5)
            else
                call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, ErrantDeLombreInt, STAT_INT)*0.25)
            endif
            if(GetRandomInt(0, 100)<40) then
                call FearTarget(u, 1.)
            endif
        endloop
        call HTSaveInteger(t, INDEX, i-1)
    endif
    call DeleteGroup(g)
    set u = null
    set caster = null
endfunction
function AOmbresMorbides takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    call HTSaveInteger(t, INDEX, 4)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveReal(t, REAL1, GetSpellTargetX())
    call HTSaveReal(t, REAL2, GetSpellTargetY())
    call EndChannelTrigger(caster, t, CondOmbresMorbides)
    call TimerStart(t, 1.0, true, function AOmbresMorbidesTick)
    set caster = null
endfunction

function AAccueilTenebreux takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)
    local real dur = 1.5+I2R(GetUnitAbilityLevel(caster, ErrantDeLombreAgi))*0.5
    local real mvt = I2R(GetHeroAgi(caster, true)/2)*0.01
    call DefineUnitGroup(g, x, y, 450., p, true, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call BlindTarget(u, dur)
        call CreateEffectTimed(u, "ShadowTrap.mdx", "origin", dur)
        call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, ErrantDeLombreAgi, STAT_AGI))
    endloop
    call GroupClear(g)
    call DefineUnitGroup(g, x, y, 450.0, p, false, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call NoPathingTimed(u, dur)
        call CreateEffectTimed(u, "ShadowTrap.mdx", "origin", dur)
        call VertexColorTarget(u, dur, 100)
        call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, ErrantDeLombreAgi, STAT_AGI))
    endloop
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction

function ABrumeDuStyx takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local integer unitid = 0
    local integer i = 0
    local real x = GetSpellTargetX()
    local real y = GetSpellTargetY()
    local real duration = 8.
    call DefineUnitGroup(g, x, y, 500., p, true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        if(IsUnitHero(u)) then
            set unitid = 'n00W'
        else
            set unitid = 'n01U'
        endif
        call UnitApplyTimedLife(CreateUnit(p, unitid, PolarX(GetUnitX(u), 200., GetUnitFacing(u) + 180.), PolarY(GetUnitY(u), 200., GetUnitFacing(u) + 180.), 0.), 'BTLF', duration)
    endloop
    call DeleteGroup(g)
    
    call UnitApplyTimedLife(CreateUnit(p, 'e001', x, y, 0.), 'BTLF', duration)
    loop
        exitwhen i>=8
        set u = CreateUnit(p, 'e001', PolarX(x, 350., I2R(i*45)), PolarY(y, 350., I2R(i*45)), 0.)
        call UnitApplyTimedLife(u, 'BTLF', duration)
        call SetUnitVertexColor(u, 255, 255, 255, 128)
        set u = CreateUnit(p, 'e001', PolarX(x, 175., I2R(i*45)), PolarY(y, 175., I2R(i*45)), 0.)
        call UnitApplyTimedLife(u, 'BTLF', duration)
        call SetUnitVertexColor(u, 255, 255, 255, 128)
        set i = i + 1
    endloop
    set p = null
    set u = null
    set caster = null
endfunction

function AErrantDeLombre takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid=='A01M') then
        call ExecuteFunc("AApercuDeLaMort")
    elseif(abilid==ErrantDeLombreStr) then
        call ExecuteFunc("ASombreConstriction")
    elseif(abilid==ErrantDeLombreInt) then
        call ExecuteFunc("AOmbresMorbides")
    elseif(abilid==ErrantDeLombreAgi) then
        call ExecuteFunc("AAccueilTenebreux")
    elseif(abilid==ErrantDeLombreUlt) then
        call ExecuteFunc("ABrumeDuStyx")
    endif
endfunction
globals
    boolexpr CondOmbresMorbides
endglobals
function InitTrig_ErrantDeLombre takes nothing returns nothing
    set CondOmbresMorbides = Condition(function COmbresMorbides)
endfunction//===========================================================================
// Trigger: PorteurDePeste
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function AAfflictionPandemiqueTickDummy takes nothing returns nothing
    call ExecuteFunc("AAfflictionPandemiqueTick")
endfunction

function AAfflictionPandemique takes unit caster, unit target returns nothing
    local timer t = NewTimer()
    call UnitAddAbility(target, udg_Abil_afflictionpandemique)
    call HTSaveInteger(t, INDEX, 4)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveUnitHandle(t, TARGET, target)
    call TimerStart(t, 2., false, function AAfflictionPandemiqueTickDummy)
endfunction

function AAfflictionPandemiqueTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit target = HTLoadUnitHandle(t, TARGET)
    local unit u = null
    local group g = null
    local integer i = HTLoadInteger(t, INDEX)
    local integer chances = 0
    local real interval = 2.
    if(i <= 0 or GetUnitState(target, UNIT_STATE_LIFE) < 0 or GetUnitAbilityLevel(target, udg_Buff_afflictionpandemique) <= 0) then
        call UnitRemoveAbility(target, udg_Abil_afflictionpandemique)
        call UnitRemoveAbility(target, udg_Buff_afflictionpandemique)
        call CleanTimer(t)
    else
        set g = NewGroup()
        call DefineUnitGroup(g, GetUnitX(target), GetUnitY(target), 250., GetOwningPlayer(caster), true, 10)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            if(u != target and GetUnitAbilityLevel(u, udg_Buff_afflictionpandemique) <= 0) then
                if(GetUnitState(u, UNIT_STATE_LIFE) < GetUnitState(u, UNIT_STATE_MAX_LIFE) * 0.4) then
                    set chances = 60
                else
                    set chances = 20
                endif
                if(GetRandomInt(0, 100) < chances) then
                    call AAfflictionPandemique(caster, u)
                endif
            endif
        endloop
        call DeleteGroup(g)
        
        if(GetUnitAbilityLevel(target, udg_Buff_maladiesvirulentes) > 0) then
            set interval = interval / 2
        endif
        
        call HTSaveInteger(t, INDEX, i-1)
        call SpellDamageTarget(caster, target, 0.25 * GetSpellDamage(caster, target, PorteurDePesteStr, STAT_STR))
        call TimerStart(t, interval, false, function AAfflictionPandemiqueTick)
    endif
    set u = null
    set target = null
    set caster = null
endfunction

function AVapeursAttachantesTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit picked = HTLoadUnitHandle(t, UNIT)
    local unit u = null
    local group g = null
    local integer i = HTLoadInteger(t, INDEX)
    if(i<=0) then
        call CleanTimer(t)
        call ShowUnit(picked, false)
        call KillUnit(picked)
        call RemoveUnit(picked)
    else
        set g = NewGroup()
        call DefineUnitGroup(g, GetUnitX(picked), GetUnitY(picked), 400., GetOwningPlayer(picked), true, 10)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            call SpellDamageTarget(caster, u, 0.2 * GetSpellDamage(caster, u, PorteurDePesteInt, STAT_INT))
        endloop
        call HTSaveInteger(t, INDEX, i - 1)
        call DeleteGroup(g)
        call TimerStart(t, 1., false, function AVapeursAttachantesTick)
    endif
    set u = null
    set picked = null
    set caster = null
endfunction
function AVapeursAttachantes takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local unit u = CreateUnit(GetOwningPlayer(caster), 'n01C', GetSpellTargetX(), GetSpellTargetY(), 0.)
    call UnitApplyTimedLife(u, 'BTLF', 6.5)
    call SetUnitVertexColor(u, 255, 255, 255, 128)
    call SetUnitAbilityLevel(u, 'A08E', GetUnitAbilityLevel(caster, PorteurDePesteInt))
    call HTSaveInteger(t, INDEX, 6)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveUnitHandle(t, UNIT, u)
    call TimerStart(t, 1., false, function AVapeursAttachantesTick)
    set u = null
    set caster = null
endfunction

function APlaiesInfectieusesTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit target = HTLoadUnitHandle(t, TARGET)
    local unit u = null
    local group g = null
    local integer i = HTLoadInteger(t, INDEX)
    local real interval = 2.
    if(i <= 0 or GetUnitState(target, UNIT_STATE_LIFE) < 0. or GetUnitAbilityLevel(target, udg_Buff_plaiesinfectieuses) <= 0) then
        call UnitRemoveAbility(target, udg_Abil_plaiesinfectieuses)
        call UnitRemoveAbility(target, udg_Buff_plaiesinfectieuses)
        call CleanTimer(t)
    else
        set g = NewGroup()
        call DefineUnitGroup(g, GetUnitX(target), GetUnitY(target), 250., GetOwningPlayer(caster), true, 10)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            if(u != target and GetRandomInt(0, 100) < 10 * GetUnitAbilityLevel(caster, PorteurDePesteAgi)) then
                call FearTarget(u, 1.)
            endif
        endloop
        call DeleteGroup(g)
        
        if(GetUnitAbilityLevel(target, udg_Buff_maladiesvirulentes) > 0) then
            set interval = interval / 2
        endif
        
        call HTSaveInteger(t, INDEX, i-1)
        call SpellDamageTarget(caster, target, 0.25 * GetSpellDamage(caster, target, PorteurDePesteAgi, STAT_AGI))
        call TimerStart(t, interval, false, function APlaiesInfectieusesTick)
    endif
    set u = null
    set target = null
    set caster = null
endfunction

function APlaiesInfectieuses takes unit caster, unit target returns nothing
    local timer t = NewTimer()
    call UnitAddAbility(target, udg_Abil_plaiesinfectieuses)
    call HTSaveInteger(t, INDEX, 5)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveUnitHandle(t, TARGET, target)
    call TimerStart(t, 2., false, function APlaiesInfectieusesTick)
endfunction

function AIncubationTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit target = HTLoadUnitHandle(t, TARGET)
    local integer i = HTLoadInteger(t, INDEX)
    local real interval = 2.
    if(i <= 0 or GetUnitState(target, UNIT_STATE_LIFE) < 0. or GetUnitAbilityLevel(target, udg_Buff_incubation) <= 0) then
        call UnitRemoveAbility(target, udg_Abil_incubation)
        call UnitRemoveAbility(target, udg_Buff_incubation)
        call CleanTimer(t)
        if(GetUnitState(target, UNIT_STATE_LIFE) > 0.) then
            call HTRemoveSavedHandle(target, INCUBATION)
        endif
    else
        if(GetUnitAbilityLevel(target, udg_Buff_maladiesvirulentes) > 0) then
            set interval = interval / 2
        endif
        
        call HTSaveInteger(t, INDEX, i-1)
        call SpellDamageTarget(caster, target, 0.1 * GetSpellDamage(caster, target, PorteurDePesteUlt, STAT_ULT))
        call TimerStart(t, interval, false, function AIncubationTick)
    endif
    set target = null
    set caster = null
endfunction

function AIncubation takes unit caster, unit target returns nothing
    local timer t = NewTimer()
    call UnitAddAbility(target, udg_Abil_incubation)
    call HTSaveInteger(t, INDEX, 15)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveUnitHandle(t, TARGET, target)
    call HTSaveUnitHandle(target, INCUBATION, caster)
    call TimerStart(t, 2., false, function AIncubationTick)
endfunction

function CIncubation takes nothing returns boolean
    return GetUnitAbilityLevel(GetTriggerUnit(), udg_Abil_incubation) > 0
endfunction
function AIncubationProcTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit picked = HTLoadUnitHandle(t, UNIT)
    local unit u = null
    local group g = null
    local integer i = HTLoadInteger(t, INDEX)
    local integer count = HTLoadInteger(t, INTEGER1)
    if(i<=0 or GetUnitState(picked, UNIT_STATE_LIFE) <= 0.) then
        call CleanTimer(t)
        call ShowUnit(picked, false)
        call KillUnit(picked)
        call RemoveUnit(picked)
    else
        set g = NewGroup()
        call DefineUnitGroup(g, GetUnitX(picked), GetUnitY(picked), 200., GetOwningPlayer(picked), true, 10)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            call SpellDamageTarget(caster, u, 0.16 * I2R(count + GetUnitAbilityLevel(u, udg_Buff_vapeursattachantes)) * GetSpellDamage(caster, u, PorteurDePesteUlt, STAT_ULT))
        endloop
        call HTSaveInteger(t, INDEX, i - 1)
        call DeleteGroup(g)
        call TimerStart(t, 1., false, function AIncubationProcTick)
    endif
    set u = null
    set picked = null
    set caster = null
endfunction
function AIncubationProc takes nothing returns nothing
    local timer t = null
    local unit target = GetTriggerUnit()
    local unit caster = null
    local unit u = null
    if(HTHaveSavedHandle(target, INCUBATION)) then
        set t = NewTimer()
        set caster = HTLoadUnitHandle(target, INCUBATION)
        set u = CreateUnit(GetOwningPlayer(caster), 'n026', GetUnitX(target), GetUnitY(target), 0.)
        call UnitApplyTimedLife(u, 'BTLF', 6.5)
        call HTSaveInteger(t, INDEX, 6)
        call HTSaveInteger(t, INTEGER1, GetUnitAbilityLevel(target, udg_Abil_maladiesvirulentes) + GetUnitAbilityLevel(target, udg_Abil_incubation) + GetUnitAbilityLevel(target, udg_Abil_afflictionpandemique) + GetUnitAbilityLevel(target, udg_Abil_plaiesinfectieuses))
        call HTSaveUnitHandle(t, CASTER, caster)
        call HTSaveUnitHandle(t, UNIT, u)
        call HTRemoveSavedHandle(target, INCUBATION)
        set caster = null
    endif
    set target = null
    if(t != null) then
        call TimerStart(t, 1., false, function AIncubationProcTick)
    endif
endfunction

function AMaladiesVirulentes takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local unit u = null
    local group g = null
    call AddAbilityTimed(target, 1., udg_Abil_maladiesvirulentes)
    if(GetUnitAbilityLevel(target, udg_Buff_afflictionpandemique) > 0 or GetUnitAbilityLevel(target, udg_Buff_incubation) > 0 or GetUnitAbilityLevel(target, udg_Buff_plaiesinfectieuses) > 0) then
        set g = NewGroup()
        call DefineUnitGroup(g, GetUnitX(target), GetUnitY(target), 450., GetOwningPlayer(caster), true, 10)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            if(u != target) then
                if(GetUnitAbilityLevel(target, udg_Buff_afflictionpandemique) > 0) then
                    call AAfflictionPandemique(caster, u)
                endif
                if(GetUnitAbilityLevel(target, udg_Buff_plaiesinfectieuses) > 0) then
                    call APlaiesInfectieuses(caster, u)
                endif
                if(GetUnitAbilityLevel(target, udg_Buff_incubation) > 0) then
                    call AIncubation(caster, u)
                endif
            endif
        endloop
        call DeleteGroup(g)
    endif
    set target = null
    set caster = null
endfunction

function APorteurDePeste takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid=='A08H') then
        call ExecuteFunc("AMaladiesVirulentes")
    elseif(abilid==PorteurDePesteStr) then
        call AAfflictionPandemique(GetTriggerUnit(), GetSpellTargetUnit())
    elseif(abilid==PorteurDePesteInt) then
        call ExecuteFunc("AVapeursAttachantes")
    elseif(abilid==PorteurDePesteAgi) then
        call APlaiesInfectieuses(GetTriggerUnit(), GetSpellTargetUnit())
    elseif(abilid==PorteurDePesteUlt) then
        call AIncubation(GetTriggerUnit(), GetSpellTargetUnit())
    endif
endfunction

globals
    boolexpr CondIncubation
endglobals
function InitTrig_PorteurDePeste takes nothing returns nothing
    set gg_trg_PorteurDePeste = CreateTrigger()
    set CondIncubation = Condition(function CIncubation)
    call TriggerRegisterAnyUnitEventBJ(gg_trg_PorteurDePeste, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(gg_trg_PorteurDePeste, CondIncubation)
    call TriggerAddAction(gg_trg_PorteurDePeste, function AIncubationProc)
endfunction//===========================================================================
// Trigger: MageDesElements
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function ABouleDeGivre takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, MageDesElementsStr, STAT_STR))
    set target = null
    set caster = null
endfunction

function ANovaDeFeu takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local group g = NewGroup()
    call CreateEffectTimed(caster, "FireNova2.mdx", "origin", 0.0)
    call DefineUnitGroup(g, GetUnitX(caster), GetUnitY(caster), 400.0, GetOwningPlayer(caster), true, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, MageDesElementsInt, STAT_INT))
    endloop
    call DeleteGroup(g)
    set u = null
    set caster = null
endfunction

function APropulsionArcanique takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, MageDesElementsAgi, STAT_AGI))
    call CreateEffectTimed(target, "PropulsionArcanique.mdx", "overhead", 0.0)
    call SlideUnit(target, 200.0+I2R(GetUnitAbilityLevel(caster, MageDesElementsAgi)*50), AngleBetweenXY(GetUnitX(caster), GetUnitY(caster), GetUnitX(target), GetUnitY(target)), 0.4, true)
    call DisarmTarget(target, 2.0)
    set target = null
    set caster = null
endfunction

function ACoeurDeGivreFlammes takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local group g = NewGroup()
    call DefineUnitGroup(g, GetUnitX(caster), GetUnitY(caster), 400., GetOwningPlayer(caster), true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
    call CreateEffectTimed(caster, "Doodads\\Cinematic\\TownBurningFireEmitterBlue\\TownBurningFireEmitterBlue.mdl", "origin", 4.0)
    call CreateEffectTimed(caster, "Doodads\\Cinematic\\TownBurningFireEmitter\\TownBurningFireEmitter.mdl", "origin", 4.0)
    call NoPathingTimed(caster, 4.0)
    call VertexColorTarget(caster, 4.0, 25)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call CreateEffectTimed(u, "Doodads\\Cinematic\\TownBurningFireEmitterBlue\\TownBurningFireEmitterBlue.mdl", "origin", 4.0)
        call CreateEffectTimed(u, "Doodads\\Cinematic\\TownBurningFireEmitter\\TownBurningFireEmitter.mdl", "origin", 4.0)
        call DoT(caster, u, 1., 4, STAT_ULT, MageDesElementsUlt)
    endloop
    call DeleteGroup(g)
    set u = null
    set caster = null
endfunction

function AMageDesElements takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid==MageDesElementsStr) then
        call ExecuteFunc("ABouleDeGivre")
    elseif(abilid==MageDesElementsInt) then
        call ExecuteFunc("ANovaDeFeu")
    elseif(abilid==MageDesElementsAgi) then
        call ExecuteFunc("APropulsionArcanique")
    elseif(abilid==MageDesElementsUlt) then
        call ExecuteFunc("ACoeurDeGivreFlammes")
    endif
endfunction//===========================================================================
// Trigger: TortionnaireFoudroyant
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function ATonnerre takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local real xt = GetUnitX(target)
    local real yt = GetUnitY(target)
    local real xp = 0.00
    local real yp = 0.00
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, TortionnaireFoudroyantStr, STAT_STR))
    call CreateEffectXYTimed(xt, yt, "Abilities\\Spells\\Human\\Thunderclap\\ThunderClapCaster.mdl", 0.0)
    call CreateEffectXYTimed(xt, yt, "Doodads\\Cinematic\\Lightningbolt\\Lightningbolt.mdl", 0.5)
    call DefineUnitGroup(g, xt, yt, 300., p, true, 20)
    call DefineUnitGroup(g, xt, yt, 300., p, false, 20)
    loop
        set u = FirstOfGroup(g)
        exitwhen u == null
        call GroupRemoveUnit(g, u)
        if(u!=target) then
            set xp = GetUnitX(u)
            set yp = GetUnitY(u)
            call SlideUnit(u, 350.0-DistanceBetweenXY(xp, yp, xt, yt) , AngleBetweenXY(xt, yt, xp, yp), 0.4, false)
        endif
    endloop
    call DeleteGroup(g)
    set p = null
    set u = null
    set target = null
    set caster = null
endfunction

function CChampElectromagnetique takes nothing returns boolean
    return GetSpellAbilityId()==TortionnaireFoudroyantInt
endfunction
function AChampElectromagnetiqueTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local integer i = HTLoadInteger(t, INDEX)
    local real x = HTLoadReal(t, REAL1)
    local real y = HTLoadReal(t, REAL2)
    if(i<=0 or HTHaveSavedBoolean(t, ENDCHANNELSTOP)) then
        call CleanTimer(t)
    else
        call UnitApplyTimedLife(CreateUnit(p, 'n020', x, y, 0.0), 'BTLF', 1.0)
        call DefineUnitGroup(g, x, y, 450.0, p, true, 10)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, TortionnaireFoudroyantInt, STAT_INT)*0.25)
        endloop
        call HTSaveInteger(t, INDEX, i-1)
    endif
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction
function AChampElectromagnetique takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local real x = GetSpellTargetX()
    local real y = GetSpellTargetY()
    local unit u = CreateUnit(GetOwningPlayer(caster), 'n020', x, y, 0.)
    call SetUnitVertexColor(u, 255, 255, 255, 128)
    call UnitApplyTimedLife(u, 'BTLF', 1.)
    call HTSaveInteger(t, INDEX, 4)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveReal(t, REAL1, x)
    call HTSaveReal(t, REAL2, y)
    call EndChannelTrigger(caster, t, CondChampElectromagnetique)
    call TimerStart(t, 1., true, function AChampElectromagnetiqueTick)
    set u = null
    set caster = null
endfunction

function ARageFoudroyanteTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local integer i = HTLoadInteger(t, INDEX)
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)
    local real dist = GetRandomReal(50., 600.)
    local real angle = GetRandomReal(0., 360.)
    local real polx = PolarX(x, dist, angle)
    local real poly = PolarY(y, dist, angle)
    local real xp = 0.
    local real yp = 0.
    if(i<=0) then
        call CleanTimer(t)
    else
        call DefineUnitGroup(g, polx, poly, 400., p, true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
        call CreateEffectXYTimed(polx, poly, "Abilities\\Spells\\Human\\Thunderclap\\ThunderClapCaster.mdl", 0.)
        call UnitApplyTimedLife(CreateUnit(p, 'n00Y', polx, poly, 0.), 'BTLF', 0.33)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            call UltimateDamageTarget(caster, u, GetSpellDamage(caster, u, TortionnaireFoudroyantUlt, STAT_ULT)*0.5)
            call StunTarget(u, 2.)
            set xp = GetUnitX(u)
            set yp = GetUnitY(u)
            call SlideUnit(u, 300. - DistanceBetweenXY(polx, poly, xp, yp), AngleBetweenXY(polx, poly, xp, yp), 0.4, false)
        endloop
        call HTSaveInteger(t, INDEX, i-1)
    endif
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction
function ARageFoudroyante takes nothing returns nothing
    local timer t = NewTimer()
    call HTSaveInteger(t, INDEX, 9)
    call HTSaveUnitHandle(t, CASTER, GetTriggerUnit())
    call TimerStart(t, 0.33, true, function ARageFoudroyanteTick)
endfunction

function ATortionnaireFoudroyant takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid==TortionnaireFoudroyantStr) then
        call ExecuteFunc("ATonnerre")
    elseif(abilid==TortionnaireFoudroyantInt) then
        call ExecuteFunc("AChampElectromagnetique")
    elseif(abilid==TortionnaireFoudroyantAgi) then
        call AddDurationBar(GetTriggerUnit(), 4, STAT_AGI, true)
    elseif(abilid==TortionnaireFoudroyantUlt) then
        call ExecuteFunc("ARageFoudroyante")
    endif
endfunction
globals
    boolexpr CondChampElectromagnetique
endglobals
function InitTrig_TortionnaireFoudroyant takes nothing returns nothing
    set CondChampElectromagnetique = Condition(function CChampElectromagnetique)
endfunction//===========================================================================
// Trigger: TunneleurDesVents
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function APorteParLeVent takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    call NoPathingTimed(caster, 5.)
    call ChangeHeightOverTime(caster, 5., 300.)
    call CreateEffectTimed(caster, "Models\\Cyclone.mdx", "origin", 5.)
    set caster = null
endfunction

function ACyclone takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, TunneleurDesVentsStr, STAT_STR))
    set target = null
    set caster = null
endfunction

function ABourrasqueTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group tornades = HTLoadGroupHandle(t, GROUP2)
    local group damaged = HTLoadGroupHandle(t, GROUP)
    local group kb = NewGroup()
    local group temp = NewGroup()
    local integer i = HTLoadInteger(t, INDEX)
    local real angle = HTLoadReal(t, REAL1)
    if(i<=0) then
        call CleanTimer(t)
        loop
            set u = FirstOfGroup(tornades)
            exitwhen u==null
            call GroupRemoveUnit(tornades, u)
            call KillUnit(u)
            call RemoveUnit(u)
        endloop
        call DeleteGroup(tornades)
        call DeleteGroup(damaged)
    else
        call GroupAddGroup(tornades, temp)
        loop
            set u = FirstOfGroup(temp)
            exitwhen u==null
            call GroupRemoveUnit(temp, u)
            call DefineUnitGroup(kb, GetUnitX(u), GetUnitY(u), 128.0, p, true, 10)
        endloop
        loop
            set u = FirstOfGroup(kb)
            exitwhen u==null
            call GroupRemoveUnit(kb, u)
            if(IsUnitInGroup(u, tornades)==false) then
                call SetUnitXY(u, PolarX(GetUnitX(u), 20.0, angle), PolarY(GetUnitY(u), 20.0, angle))
                if(IsUnitInGroup(u, damaged)==false) then
                    if(CountUnitsInGroup(damaged)<10) then
                        call GroupAddUnit(damaged, u)
                        call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, TunneleurDesVentsInt, STAT_INT))
                        call SlowTarget(u, 2.)
                    endif
                endif
            endif
        endloop
        call HTSaveInteger(t, INDEX, i-1)
    endif
    call DeleteGroup(kb)
    call DeleteGroup(temp)
    set p = null
    set u = null
    set caster = null
endfunction
function ABourrasque takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group tornades = NewGroup()
    local integer i = 1
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)
    local real angle = AngleBetweenXY(x, y, GetSpellTargetX(), GetSpellTargetY())
    set u = CreateUnit(p, 'n01O', PolarX(x, 92., angle), PolarY(y, 108., angle), 0.)
    call SetUnitVertexColor(u, 255, 255, 255, 128)
    call GroupAddUnit(tornades, u)
    call SlideUnit(u, 550., angle, 0.55, true)
    loop
        exitwhen i>=3
        set u = CreateUnit(p, 'n01O', PolarX(x, 108., angle+(I2R(i*36))), PolarY(y, 108., angle+(I2R(i*36))), 0.)
        call SetUnitVertexColor(u, 255, 255, 255, 128)
        call GroupAddUnit(tornades, u)
        call SlideUnit(u, 550.0, angle, 0.55, true)
        set u = CreateUnit(p, 'n01O', PolarX(x, 108., angle-(I2R(i*36))), PolarY(y, 108., angle-(I2R(i*36))), 0.)
        call SetUnitVertexColor(u, 255, 255, 255, 128)
        call GroupAddUnit(tornades, u)
        call SlideUnit(u, 550.0, angle, 0.55, true)
        set i = i + 1
    endloop
    call HTSaveInteger(t, INDEX, 20)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveGroupHandle(t, GROUP2, tornades)
    call HTSaveGroupHandle(t, GROUP, NewGroup())
    call HTSaveReal(t, REAL1, angle)
    call TimerStart(t, 0.03, true, function ABourrasqueTick)
    set p = null
    set u = null
    set caster = null
endfunction

function ACourantAerienTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group tornades = HTLoadGroupHandle(t, GROUP)
    local group temp = NewGroup()
    local group kb = NewGroup()
    local integer i = HTLoadInteger(t, INDEX)
    local real angle = HTLoadReal(t, REAL1)
    if(i<=0) then
        loop
            set u = FirstOfGroup(tornades)
            exitwhen u==null
            call GroupRemoveUnit(tornades, u)
            call KillUnit(u)
            call RemoveUnit(u)
        endloop
        call CleanTimer(t)
        call DeleteGroup(tornades)
    else
        call GroupAddGroup(tornades, temp)
        loop
            set u = FirstOfGroup(temp)
            exitwhen u==null
            call GroupRemoveUnit(temp, u)
            call DefineUnitGroup(kb, GetUnitX(u), GetUnitY(u), 140.0, p, true, 20)
            call DefineUnitGroup(kb, GetUnitX(u), GetUnitY(u), 140.0, p, false, 20)
        endloop
        loop
            set u = FirstOfGroup(kb)
            exitwhen u==null
            call GroupRemoveUnit(kb, u)
            if(IsUnitInGroup(u, tornades)==false) then
                if(IsUnitEnemy(u, p)==true) then
                    if(ModuloInteger(i, 14)==0) then
                        call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, TunneleurDesVentsAgi, STAT_AGI)*0.4)
                    endif
                endif
                call SetUnitXY(u, PolarX(GetUnitX(u), 15.0, angle), PolarY(GetUnitY(u), 15.0, angle))
            endif
        endloop
        call HTSaveInteger(t, INDEX, i-1)
    endif
    call DeleteGroup(kb)
    call DeleteGroup(temp)
    set p = null
    set u = null
    set caster = null
endfunction
function ACourantAerien takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group tornades = NewGroup()
    local integer i = 1
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)  
    local real angle = AngleBetweenXY(x, y, GetSpellTargetX(), GetSpellTargetY())
    loop
        exitwhen i>=5
        set u = CreateUnit(p, 'n01N', PolarX(x, I2R(i*160), angle), PolarY(y, I2R(i*160), angle), angle)
        call GroupAddUnit(tornades, u)
        set i = i + 1
    endloop
    call HTSaveInteger(t, INDEX, 40 + 10*GetUnitAbilityLevel(caster, TunneleurDesVentsAgi))
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveGroupHandle(t, GROUP, tornades)
    call HTSaveReal(t, REAL1, angle)
    call TimerStart(t, 0.05, true, function ACourantAerienTick)
    set p = null
    set u = null
    set caster = null
endfunction

function ALamesDeVentTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit u = null
    local group anim = HTLoadGroupHandle(t, GROUP)
    local group g = NewGroup()
    local integer i = HTLoadInteger(t, INDEX)
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)
    if(i<=0) then
        call CleanTimer(t)
        loop
            set u = FirstOfGroup(anim)
            exitwhen u==null
            call GroupRemoveUnit(anim, u)
            call KillUnit(u)
            call RemoveUnit(u)
        endloop
        call DeleteGroup(anim)
    else
        call GroupAddGroup(anim, g)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            call SetUnitPosition(u, x, y)
        endloop
        if(ModuloInteger(i, 12)==0) then
            call DefineUnitGroup(g, x, y, 450.0, GetOwningPlayer(caster), true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
            loop
                set u = FirstOfGroup(g)
                exitwhen u==null
                call GroupRemoveUnit(g, u)
                call UltimateDamageTarget(caster, u, GetSpellDamage(caster, u, TunneleurDesVentsUlt, STAT_ULT)*0.25)
            endloop
        endif
        call HTSaveInteger(t, INDEX, i-1)
    endif
    call DeleteGroup(g)
    set u = null
    set caster = null
endfunction
function ALamesDeVent takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)
    call AddDurationBar(caster, 4, STAT_ULT, true)
    call GroupAddUnit(g, CreateUnit(p, 'n01P', x, y, 0.00))
    call GroupAddUnit(g, CreateUnit(p, 'n01P', x, y, 0.00))
    call GroupAddUnit(g, CreateUnit(p, 'n01P', x, y, 0.00))
    call HTSaveInteger(t, INDEX, 50)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveGroupHandle(t, GROUP, g)
    call TimerStart(t, 0.08, true, function ALamesDeVentTick)
    set p = null
    set caster = null
endfunction

function ATunneleurDesVents takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid=='A07V') then
        call ExecuteFunc("APorteParLeVent")
    elseif(abilid==TunneleurDesVentsStr) then
        call ExecuteFunc("ACyclone")
    elseif(abilid==TunneleurDesVentsInt) then
        call ExecuteFunc("ABourrasque")
    elseif(abilid==TunneleurDesVentsAgi) then
        call ExecuteFunc("ACourantAerien")
    elseif(abilid==TunneleurDesVentsUlt) then
        call ExecuteFunc("ALamesDeVent")
    endif
endfunction//===========================================================================
// Trigger: ExpiateurDeMagie
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function ADissipationDeMagie takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local real factor = 1.+I2R(DispelTarget(caster, target, true, false))*0.1
    call SpellDamageTarget(caster, target, factor*GetSpellDamage(caster, target, ExpiateurDeMagieStr, STAT_STR))
    set target = null
    set caster = null
endfunction

function AZoneDinstalbiliteMagiqueTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit picked = HTLoadUnitHandle(t, UNIT)
    local unit u = null
    local group g = NewGroup()
    local integer i = HTLoadInteger(t, INDEX)
    local real damage = 0.
    if(i<=0) then
        call CleanTimer(t)
        call KillUnit(picked)
        call RemoveUnit(picked)
    else
        call SetUnitVertexColor(picked, 255, 255, 255, 128)
        call DefineUnitGroup(g, GetUnitX(picked), GetUnitY(picked), 400.0, GetOwningPlayer(picked), true, 10)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            set damage = GetSpellDamage(caster, u, ExpiateurDeMagieInt, STAT_INT)*0.25
            call SpellDamageTarget(caster, u, damage)
            if(GetUnitState(u, UNIT_STATE_LIFE)>0) then
                if(GetUnitState(u, UNIT_STATE_MANA)>0) then
                    call ModMana(u, -0.5*damage)
                endif
            endif
        endloop
        call HTSaveInteger(t, INDEX, i-1)
    endif
    call DeleteGroup(g)
    set u = null
    set picked = null
    set caster = null
endfunction
function AZoneDinstalbiliteMagique takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local real x = GetSpellTargetX()
    local real y = GetSpellTargetY()
    call CreateEffectXYTimed(x, y, "Objects\\Spawnmodels\\Undead\\UCancelDeath\\UCancelDeath.mdl", 1.0)
    call HTSaveInteger(t, INDEX, 4)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveUnitHandle(t, UNIT, CreateUnit(GetOwningPlayer(caster), 'e009', x, y, 0.0))
    call TimerStart(t, 1.0, true, function AZoneDinstalbiliteMagiqueTick)
    set caster = null
endfunction

function ASilence takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local group g = NewGroup()
    local real x = GetSpellTargetX()
    local real y = GetSpellTargetY()
    call CreateEffectXYTimed(x, y, "Abilities\\Spells\\Other\\Silence\\SilenceAreaBirth.mdl", 0.5)
    call DefineUnitGroup(g, x, y, 450.0, GetOwningPlayer(caster), true, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call MuteTarget(u, I2R(GetUnitAbilityLevel(caster, ExpiateurDeMagieAgi))*0.5)
        call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, ExpiateurDeMagieAgi, STAT_AGI)*0.6)
    endloop
    call DeleteGroup(g)
    set u = null
    set caster = null
endfunction

function AExpiationEnd takes nothing returns nothing
    local timer t = GetExpiredTimer()
    call ModMana(HTLoadUnitHandle(t, UNIT), 0.5*HTLoadReal(t, REAL1))
    call CleanTimer(t)
endfunction
function AExpiation takes nothing returns nothing
    local timer t = null
    local unit caster = GetTriggerUnit()
    local unit u = null
    local group g = NewGroup()
    local real x = GetSpellTargetX()
    local real y = GetSpellTargetY()
    call CreateEffectXYTimed(x, y, "WaterMagic.mdx", 0.)
    call DefineUnitGroup(g, x, y, 500.0, GetOwningPlayer(caster), true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call UltimateDamageTarget(caster, u, GetSpellDamage(caster, u, ExpiateurDeMagieUlt, STAT_ULT))
        if(GetUnitState(u, UNIT_STATE_MANA)>0.0) then
            if(GetUnitState(u, UNIT_STATE_LIFE)>0.0) then
                set t = NewTimer()
                call CreateEffectTimed(u, "SoundTrauma.mdx", "origin", 4.)
                call HTSaveUnitHandle(t, UNIT, u)
                call HTSaveReal(t, REAL1, ModMana(u, -(GetUnitState(u, UNIT_STATE_MAX_MANA)*0.3)))
                call TimerStart(t, 4.0, false, function AExpiationEnd)
            endif
        endif
    endloop
    call DeleteGroup(g)
    set u = null
    set caster = null
endfunction

function AExpiateurDeMagie takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid==ExpiateurDeMagieStr) then
        call ExecuteFunc("ADissipationDeMagie")
    elseif(abilid==ExpiateurDeMagieInt) then
        call ExecuteFunc("AZoneDinstalbiliteMagique")
    elseif(abilid==ExpiateurDeMagieAgi) then
        call ExecuteFunc("ASilence")
    elseif(abilid==ExpiateurDeMagieUlt) then
        call ExecuteFunc("AExpiation")
    endif
endfunction//===========================================================================
// Trigger: SemeurDeSouffrances
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function CFouetDeLesprit takes nothing returns boolean
    return GetSpellAbilityId()==SemeurDeSouffrancesStr
endfunction
function AFouetDeLespritTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit target = HTLoadUnitHandle(t, TARGET)
    local integer i = HTLoadInteger(t, INDEX)
    if(i<=0 or HTHaveSavedBoolean(t, ENDCHANNELSTOP)) then
        if(i > 0) then
            call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, SemeurDeSouffrancesStr, STAT_STR) * (0.25 * I2R(i)))
        endif
        call CleanTimer(t)
    else
        call SlowTarget(target, 1.2)
        call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, SemeurDeSouffrancesStr, STAT_STR)*0.33)
        call HTSaveInteger(t, INDEX, i-1)
    endif
    set target = null
    set caster = null
endfunction
function AFouetDeLesprit takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call HTSaveInteger(t, INDEX, 4)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveUnitHandle(t, TARGET, target)
    call SlowTarget(target, 1.2)
    call EndChannelTrigger(caster, t, CondFouetDeLesprit)
    call TimerStart(t, 1., true, function AFouetDeLespritTick)
    set target = null
    set caster = null
endfunction

function APesteDevorante takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local integer i = 0
    local real x = GetSpellTargetX()
    local real y = GetSpellTargetY()
    call DefineUnitGroup(g, x, y, 450.0, p, true, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g,u)
        call CreateEffectTimed(u, "Abilities\\Spells\\Undead\\AnimateDead\\AnimateDeadTarget.mdl", "origin", 0.)
        call AddAbilityTimed(u, 2.5, udg_Abil_pestedevorante)
        call DoTMatchingBuff(caster, u, 1., 5, STAT_INT, SemeurDeSouffrancesInt, udg_Buff_pestedevorante)
    endloop
    loop
        exitwhen i>=10
        call UnitApplyTimedLife(CreateUnit(p, 'e000', PolarX(x, 200., I2R(i*36)), PolarY(y, 200., I2R(i*36)), 0.0), 'BTLF', 1.0)
        set i=i+1
    endloop
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction

function ASemeurDeSouffrances takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid==SemeurDeSouffrancesStr) then
        call ExecuteFunc("AFouetDeLesprit")
    elseif(abilid==SemeurDeSouffrancesAgi) then
        call AddDurationBar(GetTriggerUnit(), 5, STAT_AGI, true)
    elseif(abilid==SemeurDeSouffrancesInt) then
        call ExecuteFunc("APesteDevorante")
    endif
endfunction

globals
    boolexpr CondFouetDeLesprit
endglobals
function InitTrig_SemeurDeSouffrances takes nothing returns nothing
    set CondFouetDeLesprit = Condition(function CFouetDeLesprit)
endfunction//===========================================================================
// Trigger: ChasseuseCrepusculaire
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function AVisee takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local real angle = AngleBetweenUnits(caster, target)
    local real distance = DistanceBetweenUnits(caster, target)
    local unit u = CreateUnit(GetOwningPlayer(caster), 'n017', GetUnitX(caster), GetUnitY(caster), angle)
    call UnitApplyTimedLife(u, 'BTLF', distance / 2000)
    call SlideUnit(u, distance, angle, distance / 2000, true)
    
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, GetSpellAbilityId(), STAT_AGI))
    call MortalStrikeTarget(target, 5.)
    set u = null
    set target = null
    set caster = null
endfunction

function AFlecheDeDispersion takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local real factor = 1.
    if(IsUnitTakenHealsReduced(target)) then
        set factor=factor+0.1
    endif
    call SpellDamageTarget(caster, target, factor*GetSpellDamage(caster, target, ChasseuseCrepusculaireStr, STAT_STR))
    call DisorientTarget(target, 1.)
    set target = null
    set caster = null
endfunction

function ATirDeBarrage takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local integer i = 1
    local integer j = 1
    local real x = GetSpellTargetX()
    local real y = GetSpellTargetY()
    call DefineUnitGroup(g, x, y, 350.0, p, true, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, ChasseuseCrepusculaireInt, STAT_INT))
        call MortalStrikeTarget(u, 3.)
        call StopTarget(u)
    endloop
    loop
        exitwhen j>=5
        set i = 0
        loop
            exitwhen i==15
            set u = CreateUnit(p, 'n00L', PolarX(x, 90.0*I2R(j), 24.0*I2R(i)), PolarY(y, 90.0*I2R(j), 24.0*I2R(i)), 0.0)
            call UnitApplyTimedLife(u, 'BTLF', 0.5)
            call ChangeTargetHeightOverTime(u, 1.0, 250.0)
            set i = i + 1
        endloop
        set j = j + 1
    endloop
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction

function ADesengagement takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, ChasseuseCrepusculaireAgi, STAT_AGI))
    call CreateEffectTimed(caster, "Abilities\\Spells\\Orc\\MirrorImage\\MirrorImageDeathCaster.mdl", "origin", 0.0)
    call SlideUnit(caster, 200.0+I2R(GetUnitAbilityLevel(caster, ChasseuseCrepusculaireAgi)*50), AngleBetweenXY(GetUnitX(target), GetUnitY(target), GetUnitX(caster), GetUnitY(caster)), 0.2, true)
    call StunTarget(target, 1.0)
    set target = null
    set caster = null
endfunction

function APourchasseTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit target = HTLoadUnitHandle(t, TARGET)
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local integer i = HTLoadInteger(t, INDEX)
    local integer j = 0
    local real x = GetUnitX(target)
    local real y = GetUnitY(target)
    if(GetUnitState(target, UNIT_STATE_LIFE)<=0) then
        set i = 0
    endif
    if(GetUnitState(caster, UNIT_STATE_LIFE)<=0) then
        set i = 0
    endif
    if(i<=0) then
        call CleanTimer(t)
    else
        call SetUnitXY(caster, PolarX(x, -350.0, GetUnitFacing(target)), PolarY(y, -350.0, GetUnitFacing(target)))
        call DefineUnitGroup(g, x, y, 450.0, p, true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            call UltimateDamageTarget(caster, u, GetSpellDamage(caster, u, ChasseuseCrepusculaireUlt, STAT_ULT)*0.25)
        endloop
        set j = 24
        loop
            exitwhen j<=0
            set u = CreateUnit(p, 'n017', x, y, I2R(j*15))
            call UnitApplyTimedLife(u, 'BTLF', 0.35)
            call SlideUnit(u, 400., I2R(j*15), 0.3, true)
            set j = j - 1
        endloop
        call HTSaveInteger(t, INDEX, i-1)
    endif
    call DeleteGroup(g)
    set p = null
    set u = null
    set target = null
    set caster = null
endfunction
function APourchasse takes nothing returns nothing
    local timer t = NewTimer()
    call HTSaveInteger(t, INDEX, 4)
    call HTSaveUnitHandle(t, CASTER, GetTriggerUnit())
    call HTSaveUnitHandle(t, TARGET, GetSpellTargetUnit())
    call TimerStart(t, 1.0, true, function APourchasseTick)
endfunction

function AChasseuseCrepusculaire takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid=='A02C') then
        call ExecuteFunc("AVisee")
    elseif(abilid==ChasseuseCrepusculaireStr) then
        call ExecuteFunc("AFlecheDeDispersion")
    elseif(abilid==ChasseuseCrepusculaireInt) then
        call ExecuteFunc("ATirDeBarrage")
    elseif(abilid==ChasseuseCrepusculaireAgi) then
        call ExecuteFunc("ADesengagement")
    elseif(abilid==ChasseuseCrepusculaireUlt) then
        call ExecuteFunc("APourchasse")
    endif
endfunction//===========================================================================
// Trigger: MarineDeLespace
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function AFiletElectrifie takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, MarineDeLespaceStr, STAT_STR))
    set target = null
    set caster = null
endfunction

function ABombardementTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit picked = HTLoadUnitHandle(t, UNIT)
    local unit u = null
    local group damaged = HTLoadGroupHandle(t, GROUP)
    local group g = NewGroup()
    local integer i = HTLoadInteger(t, INDEX)
    local real x = GetUnitX(picked)
    local real y = GetUnitY(picked)
    if(i<=0) then
        call CleanTimer(t)
        call DeleteGroup(damaged)
        call KillUnit(picked)
        call RemoveUnit(picked)
    else
        call CreateEffectXYTimed(x, y, "Abilities\\Spells\\Human\\Thunderclap\\ThunderClapCaster.mdl", 0.)
        call DefineUnitGroup(g, x, y, 160., GetOwningPlayer(picked), true, 10)
        loop
            set u = FirstOfGroup(g)
            exitwhen u==null
            call GroupRemoveUnit(g, u)
            if(IsUnitInGroup(u, damaged)==false) then
                if(CountUnitsInGroup(damaged)<10) then
                    call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, MarineDeLespaceInt, STAT_INT))
                    call GroupAddUnit(damaged, u)
                    call StunTarget(u, 0.5)
                endif
            endif
        endloop
        call HTSaveInteger(t, INDEX, i-1)
    endif
    call DeleteGroup(g)
    set u = null
    set picked = null
    set caster = null
endfunction
function ABombardement takes nothing returns nothing
    local timer t = NewTimer()
    local unit caster = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)
    local real angle = AngleBetweenXY(x, y, GetSpellTargetX(), GetSpellTargetY())
    set u = CreateUnit(p, 'n02S', PolarX(x, 50., angle), PolarY(y, 50., angle), angle-180.)
    call SetUnitVertexColor(u, 255, 255, 255, 128)
    call SlideUnit(u, 900., angle, 0.75, true)
    call HTSaveInteger(t, INDEX, 10)
    call HTSaveUnitHandle(t, CASTER, caster)
    call HTSaveUnitHandle(t, UNIT, u)
    call HTSaveGroupHandle(t, GROUP, NewGroup())
    call TimerStart(t, 0.08, true, function ABombardementTick)
    set p = null
    set u = null
    set caster = null
endfunction

function AMissileTactiqueEnd takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local real x = HTLoadReal(t, REAL1)
    local real y = HTLoadReal(t, REAL2)
    call DefineUnitGroup(g, x, y, 600., p, true, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        call UltimateDamageTarget(caster, u, GetSpellDamage(caster, u, MarineDeLespaceUlt, STAT_ULT)*1.5)
    endloop
    set u = CreateUnit(p, 'n02V', x, y, 0.)
    call UnitApplyTimedLife(u, 'BTLF', 15.)
    call SetUnitVertexColor(u, 255, 255, 255, 128)
    call CleanTimer(t)
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction
function AMissileTactique takes nothing returns nothing
    local timer t = NewTimer()
    local real x = GetSpellTargetX()
    local real y = GetSpellTargetY()
    call CreateEffectXYTimed(x, y, "AuraNuke.mdx", 4.)
    set bj_lastPlayedSound = gg_snd_NuclearLaunchDetected
    call StartSound(gg_snd_NuclearLaunchDetected)
    call HTSaveUnitHandle(t, CASTER, GetTriggerUnit())
    call HTSaveReal(t, REAL1, x)
    call HTSaveReal(t, REAL2, y)
    call TimerStart(t, 4., false, function AMissileTactiqueEnd)
endfunction

function AMarineDeLespace takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid==MarineDeLespaceStr) then
        call ExecuteFunc("AFiletElectrifie")
    elseif(abilid==MarineDeLespaceInt) then
        call ExecuteFunc("ABombardement")
    elseif(abilid==MarineDeLespaceAgi) then
        call AddDurationBar(GetTriggerUnit(), 7, STAT_AGI, true)
    elseif(abilid==MarineDeLespaceUlt) then
        call ExecuteFunc("AMissileTactique")
    endif
endfunction//===========================================================================
// Trigger: Archidruide
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function AHorionDeNature takes nothing returns nothing
    local unit target = GetSpellTargetUnit()
    call CreateEffectTimed(target, "Earthshock.mdx", "origin", 1.)
    call StopTarget(target)
    call BlindTarget(target, 3.)
    set target = null
endfunction

function APresenceProtectrice takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    call DoTMatchingBuff(caster, target, 1., 5, STAT_STR, ArchidruideStr, udg_Buff_presenceprotectrice)
    set target = null
    set caster = null
endfunction

function AFleurDeLameBurst takes unit caster, unit target returns nothing
    local unit u = null
    local group g = NewGroup()
    call DefineUnitGroup(g, GetUnitX(target), GetUnitY(target), 450., GetOwningPlayer(target), false, 10)
    call CreateEffectTimed(target, "EarthRender.mdx", "origin", 1.)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        if(u==target) then
            call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, ArchidruideInt, STAT_INT)*0.5)
        else
            call SpellDamageTarget(caster, u, GetSpellDamage(caster, u, ArchidruideInt, STAT_INT))
        endif
    endloop
    call DeleteGroup(g)
    set u = null
endfunction
function AFleurDeLameTick takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit target = HTLoadUnitHandle(t, TARGET)
    local integer i = HTLoadInteger(t, INDEX)
    if(GetUnitAbilityLevel(target, udg_Buff_fleurdelame)<=0) then
        set i = 0
    endif
    if(i<=0) then
        call CleanTimer(t)
        call AFleurDeLameBurst(caster, target)
    else
        if(ModuloInteger(i, 9)==0) then
            call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, ArchidruideInt, STAT_INT)*0.12)
            call CreateEffectTimed(target, "LifeBloom.mdx", "origin", 1.0)
        endif
        call HTSaveInteger(t, INDEX, i-1)
    endif
    set target = null
    set caster = null
endfunction
function AFleurDeLame takes nothing returns nothing
    local timer t = NewTimer()
    local unit target = GetSpellTargetUnit()
    call CreateEffectTimed(target, "LifeBloom.mdx", "origin", 1.0)
    call HTSaveInteger(t, INDEX, 40)
    call HTSaveUnitHandle(t, CASTER, GetTriggerUnit())
    call HTSaveUnitHandle(t, TARGET, target)
    call TimerStart(t, 0.1, true, function AFleurDeLameTick)
    set target = null
endfunction

function ACroissanceVegetale takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local real x = GetSpellTargetX()
    local real y = GetSpellTargetY()
    call DefineUnitGroup(g, x, y, 400.0, p, false, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u == null
        call GroupRemoveUnit(g, u)
        call DoT(caster, u, 1., 3, STAT_AGI, ArchidruideAgi)
        call CreateEffectTimed(u, "Wild Growth.mdx", "origin", 3.0)
    endloop
    set u = CreateUnit(p, 'o00D', x, y, 0.0)
    call UnitApplyTimedLife(u, 'BTLF', 3.0)
    call SetUnitAbilityLevel(u, 'A047', GetUnitAbilityLevel(caster, ArchidruideAgi))
    call SetUnitVertexColor(u, 255, 255, 255, 128)
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction

function AArchidruide takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid=='A05K') then
        call ExecuteFunc("AHorionDeNature")
    elseif(abilid==ArchidruideStr) then
        call ExecuteFunc("APresenceProtectrice")
    elseif(abilid==ArchidruideInt) then
        call ExecuteFunc("AFleurDeLame")
    elseif(abilid==ArchidruideAgi) then
        call ExecuteFunc("ACroissanceVegetale")
    elseif(abilid==ArchidruideUlt) then
        call AddDurationBar(GetTriggerUnit(), 15, STAT_ULT, true)
    endif
endfunction//===========================================================================
// Trigger: PretreDeLespoir
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function AVigueurNouvelle takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local unit u = CreateUnit(GetOwningPlayer(caster), 'e002', GetUnitX(target), GetUnitY(target), 0.)
    call UnitApplyTimedLife(u, 'BTLF', 0.8)
    call UnitAddAbility(u, 'A07K')
    call IssueTargetOrder(u, "innerfire", target)
    call DoTMatchingBuff(caster, target, 1., 4, STAT_STR, PretreDeLespoirStr, udg_Buff_vigueurnouvelle)
    set u = null
    set target = null
    set caster = null
endfunction

function AEsperance takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local player p = GetOwningPlayer(caster)
    local group g = NewGroup()
    local real x = GetUnitX(caster)
    local real y = GetUnitY(caster)
    local real factor = 1.
    call CreateEffectTimed(caster, "HolyTornado.mdx", "origin", 1.5)
    call DefineUnitGroup(g, x, y, 650., p, false, 10)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        if(GetUnitState(u, UNIT_STATE_LIFE)<GetUnitState(u, UNIT_STATE_MAX_LIFE)*0.25) then
            set factor = factor + 0.5
        endif
        call SpellDamageTarget(caster, u, factor * GetSpellDamage(caster, u, PretreDeLespoirInt, STAT_INT))
        if(u!=caster) then
            call NoPathingTimed(u, 0.45)
            call ChangeTargetHeightOverTime(u, 0.4, 400.)
            call SlideUnit(u, DistanceBetweenXY(GetUnitX(u), GetUnitY(u), x, y), AngleBetweenXY(GetUnitX(u), GetUnitY(u), x, y), 0.4, false)
            call CreateLightningBetweenUnitsTimed(caster, u, "HWPB", 0.4)
        endif
    endloop
    call DeleteGroup(g)
    set p = null
    set u = null
    set caster = null
endfunction

function AEspoirDivin takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit u = null
    local group g = NewGroup()
    local integer i = 0
    local real dur = 0.
    call DefineUnitGroup(g, GetUnitX(caster), GetUnitY(caster), 600., GetOwningPlayer(caster), false, HERO_SPELLS_ULTIMATE_TARGET_LIMIT)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        set dur = 1.
        call CreateEffectTimed(u, "Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl", "origin", 0.0)
        call UltimateDamageTarget(caster, u, GetSpellDamage(caster, u, PretreDeLespoirUlt, STAT_ULT))
        if(GetUnitAbilityLevel(u, udg_Buff_renouveau)>0) then
            call UnitRemoveAbility(u, udg_Buff_renouveau)
            set dur = dur + 3.
        endif
        call ImmuneTarget(u, dur)
        call CreateEffectTimed(u, "Abilities\\Spells\\Human\\DivineShield\\DivineShieldTarget.mdl", "origin", dur)
    endloop
    call DeleteGroup(g)
    set u = null
    set caster = null
endfunction

function APretreDeLespoir takes nothing returns nothing
    local integer abilid = GetSpellAbilityId()
    if(abilid==PretreDeLespoirStr) then
        call ExecuteFunc("AVigueurNouvelle")
    elseif(abilid==PretreDeLespoirInt) then
        call ExecuteFunc("AEsperance")
    elseif(abilid==PretreDeLespoirAgi) then
        call AddDurationBar(GetTriggerUnit(), 10, STAT_AGI, true)
    elseif(abilid==PretreDeLespoirUlt) then
        call ExecuteFunc("AEspoirDivin")
    endif
endfunction//===========================================================================
// Trigger: OnAttackSpells
//===========================================================================
//TESH.scrollpos=3
//TESH.alwaysfold=0
function AOnAttackSpells takes nothing returns nothing
    local unit caster = GetAttacker()
    local unit target = GetTriggerUnit()
    local unit owner = udg_Hero[GetPlayerId(GetOwningPlayer(caster))]
    
    if(IsUnitType(caster, UNIT_TYPE_STRUCTURE)==false) then
        // Errant de l'ombre : Sombre invocation
        if(GetUnitTypeId(caster)=='u000') then
            call FearTarget(target, 1.)

        // Errant de l'ombre : Brume du Styx
        elseif(GetUnitTypeId(caster)=='n00W' or GetUnitTypeId(caster)=='n01U') then
            call SpellDamageTarget(owner, target, GetSpellDamage(owner, target, ErrantDeLombreUlt, STAT_ULT)*0.3)
            call BlindTarget(target, 4.)

        // Necromancien : Armee des morts
        elseif(GetUnitTypeId(caster)=='n013') then
            call UltimateDamageTarget(owner, target, GetSpellDamage(owner, target, NecromancienUlt, STAT_STR))
        elseif(GetUnitTypeId(caster)=='n019') then
            call UltimateDamageTarget(owner, target, GetSpellDamage(owner, target, NecromancienUlt, STAT_INT))
        elseif(GetUnitTypeId(caster)=='n012') then
            call UltimateDamageTarget(owner, target, GetSpellDamage(owner, target, NecromancienUlt, STAT_AGI))
        elseif(GetUnitTypeId(caster)=='n01T') then
            call UltimateDamageTarget(owner, target, GetSpellDamage(owner, target, NecromancienUlt, STAT_STR))
        elseif(GetUnitTypeId(caster)=='n01L') then
            call UltimateDamageTarget(owner, target, GetSpellDamage(owner, target, NecromancienUlt, STAT_INT))
        elseif(GetUnitTypeId(caster)=='n01D') then
            call UltimateDamageTarget(owner, target, GetSpellDamage(owner, target, NecromancienUlt, STAT_AGI))
        endif
    endif
    
    set owner = null
    set target = null
    set caster = null
endfunction

function InitTrig_OnAttackSpells takes nothing returns nothing
    set gg_trg_OnAttackSpells = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_OnAttackSpells, EVENT_PLAYER_UNIT_ATTACKED)
    call TriggerAddAction(gg_trg_OnAttackSpells, function AOnAttackSpells)
endfunction//===========================================================================
// Trigger: OnCastSpells
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function AOnCastSpells takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local unit owner = udg_Hero[GetPlayerId(GetOwningPlayer(caster))]
    
    set owner = null
    set target = null
    set caster = null
endfunction

function InitTrig_OnCastSpells takes nothing returns nothing
    set gg_trg_OnCastSpells = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_OnCastSpells, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddAction(gg_trg_OnCastSpells, function AOnCastSpells)
endfunction//===========================================================================
// Trigger: WhenSpelledSpells
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function AWhenSpelledSpells takes nothing returns nothing
    local unit caster = GetSpellTargetUnit()
    local unit target = GetTriggerUnit()
    local unit owner = udg_Hero[GetPlayerId(GetOwningPlayer(caster))]
    
    if(IsUnitType(caster, UNIT_TYPE_STRUCTURE)==false) then
        if(IsUnitEnemy(target, GetOwningPlayer(caster))==true) then
            // Tortionnaire foudroyant - Protection statique
            if(GetUnitAbilityLevel(caster, udg_Buff_protectionstatique)>0) then
                call CreateLightningBetweenUnitsTimed(caster, target, "CLPB", 0.4)
                call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, TortionnaireFoudroyantAgi, STAT_AGI))
                call SlideUnit(target, 200. + 50.*I2R(GetUnitAbilityLevel(caster, TortionnaireFoudroyantAgi)), AngleBetweenXY(GetUnitX(caster), GetUnitY(caster), GetUnitX(target), GetUnitY(target)), 0.4, false)
                call StunTarget(target, 1.)
            // Semeur de souffrances - Peur de la douleur
            elseif(GetUnitAbilityLevel(caster, udg_Buff_peurdeladouleur)>0) then
                if(GetRandomInt(0, 100)<(GetUnitAbilityLevel(caster, 'A03H')*15)) then
                    call AddAbilityTimed(target, 1.5, udg_Abil_peurdeladouleur)
                    call DoTMatchingBuff(caster, target, 1., 4, STAT_AGI, 'A03H', udg_Buff_peurdeladouleur)
                    call FearTarget(target, 1.)
                endif
            endif
        endif
    endif
    
    set owner = null
    set target = null
    set caster = null
endfunction

function InitTrig_WhenSpelledSpells takes nothing returns nothing
    set gg_trg_WhenSpelledSpells = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_WhenSpelledSpells, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    call TriggerAddAction(gg_trg_WhenSpelledSpells, function AWhenSpelledSpells)
endfunction//===========================================================================
// Trigger: WhenAttackedSpells
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function AWhenAttackedSpells takes nothing returns nothing
    local unit caster = GetTriggerUnit()
    local unit target = GetAttacker()
    local unit owner = udg_Hero[GetPlayerId(GetOwningPlayer(caster))]

    if(IsUnitType(target, UNIT_TYPE_STRUCTURE)==false) then
        if(IsUnitEnemy(target, GetOwningPlayer(caster))==true) then
            // Tortionnaire foudroyant - Protection statique
            if(GetUnitAbilityLevel(caster, udg_Buff_protectionstatique)>0) then
                call CreateLightningBetweenUnitsTimed(caster, target, "CLPB", 0.4)
                call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, TortionnaireFoudroyantAgi, STAT_AGI))
                call SlideUnit(target, 200. + 50.*I2R(GetUnitAbilityLevel(caster, TortionnaireFoudroyantAgi)), AngleBetweenXY(GetUnitX(caster), GetUnitY(caster), GetUnitX(target), GetUnitY(target)), 0.4, false)
                call StunTarget(target, 1.)
            // Semeur de souffrances - Peur de la douleur
            elseif(GetUnitAbilityLevel(caster, udg_Buff_peurdeladouleur)>0) then
                if(GetRandomInt(0, 100)<(GetUnitAbilityLevel(caster, 'A03H')*15)) then
                    call AddAbilityTimed(target, 1.5, udg_Abil_peurdeladouleur)
                    call DoTMatchingBuff(caster, target, 1., 4, STAT_AGI, 'A03H', udg_Buff_peurdeladouleur)
                    call FearTarget(target, 1.)
                endif
            elseif(GetUnitAbilityLevel(caster, udg_Buff_nuagedesang)>0) then
                call SpellDamageTarget(caster, target, GetSpellDamage(caster, target, VampireAgi, STAT_AGI)*0.5)
            endif
        endif
    endif

    set owner = null
    set target = null
    set caster = null
endfunction

function InitTrig_WhenAttackedSpells takes nothing returns nothing
    set gg_trg_WhenAttackedSpells = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_WhenAttackedSpells, EVENT_PLAYER_UNIT_ATTACKED)
    call TriggerAddAction(gg_trg_WhenAttackedSpells, function AWhenAttackedSpells)
endfunction//===========================================================================
// Trigger: Classes Initialisations
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
//! textmacro CLASS takes NAME, ID, STR, INT, AGI, ULT
scope CLASS$NAME$ initializer init
    globals
        constant integer $NAME$ID = $ID$
        constant integer $NAME$Str = $STR$
        constant integer $NAME$Int = $INT$
        constant integer $NAME$Agi = $AGI$
        constant integer $NAME$Ult = $ULT$
        trigger $NAME$SpellTrigger
        boolexpr $NAME$Filter
    endglobals
    function F$NAME$ takes nothing returns boolean
        return GetUnitTypeId(GetFilterUnit())==$NAME$ID
    endfunction
    private function init takes nothing returns nothing
        set $NAME$Filter = Filter(function F$NAME$)
        set $NAME$SpellTrigger = CreateTrigger()
        call TriggerRegisterAnyUnitEvent($NAME$SpellTrigger, EVENT_PLAYER_UNIT_SPELL_EFFECT, $NAME$Filter)
        call TriggerAddAction($NAME$SpellTrigger, function A$NAME$)
    endfunction
endscope
//! endtextmacro

//! runtextmacro CLASS("Archidruide", "'N01H'", "'A042'", "'A046'", "'A049'", "'A045'")
//  runtextmacro CLASS("ArtificierGobelin", "''", "''", "''", "''", "''")
//! runtextmacro CLASS("Assassin", "'N00K'", "'A044'", "'A04Q'", "'A048'", "'A04F'")
//! runtextmacro CLASS("Barbare", "'N01B'", "'A03I'", "'A000'", "'A040'", "'A041'")
//! runtextmacro CLASS("Chaman", "'N01J'", "'A00E'", "'A03U'", "'A085'", "'A06V'")
//! runtextmacro CLASS("ChasseuseCrepusculaire", "'N001'", "'A003'", "'A02G'", "'A009'", "'A00A'")
//! runtextmacro CLASS("ChevalierNoir", "'N014'", "'A036'", "'A04E'", "'A037'", "'A04G'")
//! runtextmacro CLASS("DiscipleDuTemps", "'N00F'", "'A028'", "'A015'", "'A034'", "'A04D'")
//! runtextmacro CLASS("DrakeDeLaGuerre", "'N00Z'", "'A01T'", "'A04C'", "'A005'", "'A01U'")
//! runtextmacro CLASS("ErrantDeLombre", "'N00I'", "'A016'", "'A018'", "'A00J'", "'A00H'")
//! runtextmacro CLASS("ExpiateurDeMagie", "'N00D'", "'A084'", "'A00U'", "'A023'", "'A01Y'")
//! runtextmacro CLASS("GardienDeLaTerre", "'N015'", "'A03S'", "'A039'", "'A03D'", "'A03F'")
//! runtextmacro CLASS("HerautDeLaPaix", "'N01V'", "'A02A'", "'A02B'", "'A00S'", "'A02H'")
//! runtextmacro CLASS("Incinerateur", "'N00T'", "'A07W'", "'A04K'", "'A02W'", "'A02U'")
//! runtextmacro CLASS("Justicier", "'N00B'", "'A029'", "'A02Y'", "'A00B'", "'A030'")
//! runtextmacro CLASS("MageDesElements", "'N00C'", "'A00Q'", "'A00R'", "'A010'", "'A01P'")
//! runtextmacro CLASS("MarcheurDeLhiver", "'N002'", "'A00G'", "'A022'", "'A014'", "'A02L'")
//! runtextmacro CLASS("MarineDeLespace", "'N02O'", "'A04P'", "'A04W'", "'A04V'", "'A06Z'")
//! runtextmacro CLASS("Necromancien", "'N010'", "'A026'", "'A027'", "'A02D'", "'A01D'")
//! runtextmacro CLASS("PorteMort", "'N004'", "'A05M'", "'A006'", "'A00V'", "'A00X'")
//! runtextmacro CLASS("PorteurDePeste", "'N025'", "'A01R'", "'A05L'", "'A083'", "'A087'")
//! runtextmacro CLASS("PretreDeLespoir", "'N02W'", "'A07J'", "'A07L'", "'A07N'", "'A07O'")
//! runtextmacro CLASS("SemeurDeSouffrances", "'N01Q'", "'A03G'", "'A04I'", "'A03H'", "'A03O'")
//! runtextmacro CLASS("SorcierRenegat", "'N022'", "'A00K'", "'A00Y'", "'A04O'", "'A07Z'")
//! runtextmacro CLASS("TisseurDeLiens", "'N01G'", "'A04Y'", "'A06X'", "'A05E'", "'A05G'")
//! runtextmacro CLASS("TortionnaireFoudroyant", "'N00M'", "'A01O'", "'A017'", "'A02F'", "'A02E'")
//! runtextmacro CLASS("TunneleurDesVents", "'N01M'", "'A01X'", "'A01F'", "'A07R'", "'A03C'")
//! runtextmacro CLASS("Vampire", "'N00N'", "'A008'", "'A02I'", "'A02M'", "'A021'")

// ------------------------------ ORDERS GLOBALS DECLARATION --------------------------------------------

//! textmacro CLASSORDER takes NAME, STR, INT, AGI, ULT
globals
    constant string $NAME$OrderStr = "$STR$"
    constant string $NAME$OrderInt = "$INT$"
    constant string $NAME$OrderAgi = "$AGI$"
    constant string $NAME$OrderUlt = "$ULT$"
endglobals
//! endtextmacro

//! runtextmacro CLASSORDER("Archidruide", "rejuvination", "lightningshield", "healingward", "berserk")
//! runtextmacro CLASSORDER("Assassin", "firebolt", "fanofknives", "chainlightning", "berserk")
//! runtextmacro CLASSORDER("Barbare", "chainlightning", "howlofterror", "firebolt", "berserk")
//! runtextmacro CLASSORDER("Chaman", "firebolt", "healingward", "stasistrap", "moonsoon")
//! runtextmacro CLASSORDER("ChasseuseCrepusculaire", "acidbomb", "healingward", "chainlightning", "firebolt")
//! runtextmacro CLASSORDER("ChevalierNoir", "acidbomb", "taunt", "chainlightning", "berserk")
//! runtextmacro CLASSORDER("DiscipleDuTemps", "firebolt", "healingward", "stasistrap", "blizzard")
//! runtextmacro CLASSORDER("DrakeDeLaGuerre", "firebolt", "taunt", "stomp", "chainlightning")
//! runtextmacro CLASSORDER("ErrantDeLombre", "entanglingroots", "deathanddecay", "berserk", "stasistrap")
//! runtextmacro CLASSORDER("ExpiateurDeMagie", "firebolt", "healingward", "stasistrap", "blizzard")
//! runtextmacro CLASSORDER("GardienDeLaTerre", "firebolt", "shockwave", "stampede", "rainoffire")
//! runtextmacro CLASSORDER("HerautDeLaPaix", "firebolt", "howlofterror", "chainlightning", "divineshield")
//! runtextmacro CLASSORDER("Incinerateur", "firebolt", "healingward", "berserk", "divineshield")
//! runtextmacro CLASSORDER("Justicier", "firebolt", "unholyfrenzy", "taunt", "berserk")
//! runtextmacro CLASSORDER("MageDesElements", "firebolt", "thunderclap", "chainlightning", "berserk")
//! runtextmacro CLASSORDER("MarcheurDeLhiver", "firebolt", "healingward", "divineshield", "berserk")
//! runtextmacro CLASSORDER("MarineDeLespace", "ensnare", "shockwave", "berserk", "healingward")
//! runtextmacro CLASSORDER("Necromancien", "hex", "waterelemental", "banish", "berserk")
//! runtextmacro CLASSORDER("PorteMort", "firebolt", "healingward", "taunt", "berserk")
//! runtextmacro CLASSORDER("PorteurDePeste", "firebolt", "healingward", "chainlightning", "acidbomb")
//! runtextmacro CLASSORDER("PretreDeLespoir", "firebolt", "taunt", "berserk", "divineshield")
//! runtextmacro CLASSORDER("SemeurDeSouffrances", "healingward", "drain", "berserk", "manashield")
//! runtextmacro CLASSORDER("SorcierRenegat", "acidbomb", "creepthunderclap", "invisibility", "healingward")
//! runtextmacro CLASSORDER("TisseurDeLiens", "firebolt", "frostnova", "chainlightning", "Locustswarm")
//! runtextmacro CLASSORDER("TortionnaireFoudroyant", "firebolt", "deathanddecay", "berserk", "divineshield")
//! runtextmacro CLASSORDER("TunneleurDesVents", "cyclone", "shockwave", "stasistrap", "berserk")
//! runtextmacro CLASSORDER("Vampire", "firebolt", "taunt", "berserk", "divineshield")//===========================================================================
// Trigger: Players Initialisations
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
globals
    unit array Cercles
endglobals
function TargetCircles takes nothing returns nothing
    local player p = GetTriggerPlayer()
    if(GetLocal()==p) then
        call ClearSelection()
        call SelectUnit(Cercles[GetPlayerId(p)], true)
    endif
    set p = null
endfunction
function InitTrig_Players_Initialisations takes nothing returns nothing
    local integer i = 0
    set Cercles[0] = gg_unit_n00P_0061
    set Cercles[1] = gg_unit_n00P_0066
    set Cercles[2] = gg_unit_n00P_0067
    set Cercles[3] = gg_unit_n00P_0086
    set Cercles[4] = gg_unit_n00P_0087
    set Cercles[5] = gg_unit_n00P_0088
    set Cercles[6] = gg_unit_n00P_0056
    set Cercles[7] = gg_unit_n00P_0046
    set Cercles[8] = gg_unit_n00P_0053
    set Cercles[9] = gg_unit_n00P_0052
    set Cercles[10] = gg_unit_n00P_0047
    set Cercles[11] = gg_unit_n00P_0011
    set gg_trg_Players_Initialisations = CreateTrigger()
    loop
        call TriggerRegisterPlayerEvent(gg_trg_Players_Initialisations, GetPlayer(i), EVENT_PLAYER_END_CINEMATIC)
        set i=i+1
        exitwhen i>=11
    endloop
    call TriggerAddAction(gg_trg_Players_Initialisations, function TargetCircles)
endfunction//===========================================================================
// Trigger: Selection
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function CSelectionHeros takes nothing returns boolean
    return (IsUnitType(GetSoldUnit(), UNIT_TYPE_HERO)==true)
endfunction
function ASelectionHerosForForce takes nothing returns nothing
    call SetPlayerTechMaxAllowed(GetEnumPlayer(), GetUnitTypeId(bj_lastCreatedUnit), 0)
endfunction
function ASelectionHeros takes nothing returns nothing
    local unit u = GetSoldUnit()
    local player p = GetOwningPlayer(u)
    local item it = null
    local force allies = CreateForce()
    local integer i = 1
    local integer id = GetPlayerId(p)
    call ForceEnumAllies(allies, p, null)
    if(GetUnitTypeId(u)=='N01A') then // Random
        call DisableTrigger(gg_trg_DeathMessageAndRespawn) // Prevent dying events
        call DisableTrigger(gg_trg_UnitDieEvents)
        call KillUnit(u) // Remove properly the "dummy-random" unit
        call RemoveUnit(u)
        call EnableTrigger(gg_trg_UnitDieEvents)
        call EnableTrigger(gg_trg_DeathMessageAndRespawn)
        if(IsPlayerInTeam(p, 1)) then // Select hero on local team random table
            set u = CreateUnit(p, udg_RandomHumHeroesType[GetRandomInt(1, udg_RandomHumTotalHeroes)], GetStartLocationX(id), GetStartLocationY(id), 0.00)
        elseif(IsPlayerInTeam(p, 2)) then
            set u = CreateUnit(p, udg_RandomOrcHeroesType[GetRandomInt(1, udg_RandomOrcTotalHeroes)], GetStartLocationX(id), GetStartLocationY(id), 0.00)
        endif
        call SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + 5)
        call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED) + 1)
    endif
    if(GetLocal()==p) then // Select hero and center camera on it
        call ClearSelection()
        call SelectUnit(u, true)
        call SetCameraPosition(GetUnitX(u), GetUnitY(u))
    endif
    set udg_Hero[id] = u
    call DisplayTextToAll(0., GetColorByPlayerId(id) + GetPlayerName(p) + "|r|cfffccc66 joue avec : " + GetUnitName(u) + " !|r")
    set bj_lastCreatedUnit = u
    call ForForce(allies, function ASelectionHerosForForce) // Disallow this hero to allies
    call MultiboardSetItemIcon(MultiboardGetItem(udg_Board, udg_BoardLine[id], 0), GetIconPathFromUnit(u))
    call StartCombatState(u)
    if(GetUnitTypeId(u)=='N00B') then
        call SetUnitUserData(u, 1)
    endif
    if(IsPlayerInTeam(p, 1)) then
        set i=1
        loop
            exitwhen i > udg_RandomHumTotalHeroes
            if(GetUnitTypeId(u) == udg_RandomHumHeroesType[i]) then
                set udg_RandomHumHeroesType[i] = udg_RandomHumHeroesType[udg_RandomHumTotalHeroes]
                set udg_RandomHumTotalHeroes = (udg_RandomHumTotalHeroes - 1)
            endif
            set i=i+1
        endloop
    elseif(IsPlayerInTeam(p, 2)) then
        set i=1
        loop
            exitwhen i > udg_RandomOrcTotalHeroes
            if(GetUnitTypeId(u) == udg_RandomOrcHeroesType[i]) then
                set udg_RandomOrcHeroesType[i] = udg_RandomOrcHeroesType[udg_RandomOrcTotalHeroes]
                set udg_RandomOrcTotalHeroes = (udg_RandomOrcTotalHeroes - 1)
            endif
            set i=i+1
        endloop
    endif
    call DestroyForce(allies)
    set allies = null
    set it = null
    set p = null
    set u = null
endfunction

function InitTrig_Selection takes nothing returns nothing
    set gg_trg_Selection = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_Selection, EVENT_PLAYER_UNIT_SELL)
    call TriggerAddCondition(gg_trg_Selection, Condition(function CSelectionHeros))
    call TriggerAddAction(gg_trg_Selection, function ASelectionHeros)
endfunction//===========================================================================
// Trigger: Experience
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function PeriodicExp takes nothing returns nothing
    local integer i=0
    loop
        exitwhen i>11
        if(udg_Hero[i]!=null) then
            call SetHeroLevel(udg_Hero[i], GetHeroLevel(udg_Hero[i])+1, true)
            //call CreateEffectTimed(GetTriggerUnit(), "Abilities\\Spells\\Other\\Levelup\\LevelUpCaster.mdl", "origin", 0.)
        endif
        set i=i+1
    endloop
endfunction
function Experience takes nothing returns nothing
    local timer t = NewTimer()
    call TimerStart(t, 90., true, function PeriodicExp)
endfunction

function InitTrig_Experience takes nothing returns nothing
    call ExecuteFuncTimed("Experience",90.)
endfunction//===========================================================================
// Trigger: Repick
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function CRepick takes nothing returns boolean
    return (GetPlayerTechCount(GetTriggerPlayer(), 'R019', true)==0)and(GetPlayerTechCount(GetTriggerPlayer(), 'HERO', true)!=0)
endfunction
function ARepickForForceRestrict takes nothing returns nothing
    call SetPlayerTechMaxAllowed(GetEnumPlayer(), GetUnitTypeId(bj_lastCreatedUnit), 0)
endfunction
function ARepickForForceAllow takes nothing returns nothing
    call SetPlayerTechMaxAllowed(GetEnumPlayer(), GetUnitTypeId(bj_lastCreatedUnit), 1)
endfunction
function ARepick takes nothing returns nothing
    local player p = GetTriggerPlayer()
    local force allies = CreateForce()
    local unit hero = null
    local unit u = null
    local integer id = GetPlayerId(p)
    local integer i = 1
    set hero = udg_Hero[id]
    call ForceEnumAllies(allies, p, null)
    if(GetHeroStr(udg_Hero[id], false)>2) then
        call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED)+GetHeroStr(udg_Hero[id], false)-2)
    endif
    if(GetHeroAgi(udg_Hero[id], false)>2) then
        call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED)+GetHeroAgi(udg_Hero[id], false)-2)
    endif
    if(GetHeroInt(udg_Hero[id], false)>2) then
        call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED)+GetHeroInt(udg_Hero[id], false)-2)
    endif
    if(GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED)>0) then
        call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED)-1)
        if(GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD)>4) then
            call DisplayTextToOne(p, 0.0, "|cFFF00000Vous perdez 5 or et 1 point d'attribut pour changer de héros.|r")
            call SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD)-5)
        elseif(GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD)>0) then
            call DisplayTextToOne(p, 0.0, "|cFFF00000Vous perdez "+I2S(GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD))+" or et 1 point d'attribut pour changer de héros.|r")
            call SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, 0)
        else
            call DisplayTextToOne(p, 0.0, "|cFFF00000Vous perdez 1 point d'attribut pour changer de héros.|r")
        endif
    else
        if(GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD)>4) then
            call DisplayTextToOne(p, 0.0, "|cFFF00000Vous perdez 5 or pour changer de héros.|r")
            call SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD)-5)
        elseif(GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD)>0) then
            call DisplayTextToOne(p, 0.0, "|cFFF00000Vous perdez "+I2S(GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD))+" or pour changer de héros.|r")
            call SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, 0)
        endif
    endif
    call UnitRemoveItemFromSlot(udg_Hero[id], 0)
    call UnitRemoveItemFromSlot(udg_Hero[id], 1)
    call UnitRemoveItemFromSlot(udg_Hero[id], 2)
    call UnitRemoveItemFromSlot(udg_Hero[id], 3)
    call UnitRemoveItemFromSlot(udg_Hero[id], 4)
    call UnitRemoveItemFromSlot(udg_Hero[id], 5)
    call StopCombatState(udg_Hero[id])
    
    if(IsPlayerInTeam(p, 1)) then
        set u = CreateUnit(p, udg_RandomHumHeroesType[GetRandomInt(1, udg_RandomHumTotalHeroes)], GetStartLocationX(id), GetStartLocationY(id), 0.00)
    elseif(IsPlayerInTeam(p, 2)) then
        set u = CreateUnit(p, udg_RandomOrcHeroesType[GetRandomInt(1, udg_RandomOrcTotalHeroes)], GetStartLocationX(id), GetStartLocationY(id), 0.00)
    endif
    if(GetLocal()==p) then
        call ClearSelection()
        call SelectUnit(u, true)
        call SetCameraPosition(GetUnitX(u), GetUnitY(u))
    endif
    set udg_Hero[id] = u
    
    call DisplayTextToAll(0., GetColorByPlayerId(id) + GetPlayerName(p) + "|r|cfffccc66 change de héros et joue avec : " + GetUnitName(u) + " !|r")
    set bj_lastCreatedUnit = u
    call ForForce(allies, function ARepickForForceRestrict) // Disallow picked hero to allies
    set bj_lastCreatedUnit = hero
    call ForForce(allies, function ARepickForForceAllow) // Allow old hero to allies
    call MultiboardSetItemIcon(MultiboardGetItem(udg_Board, udg_BoardLine[id], 0), GetIconPathFromUnit(u))
    call StartCombatState(u)
    if(GetUnitTypeId(u)=='N00B') then
        call SetUnitUserData(u, 1)
    endif
    
    if(IsPlayerInTeam(p, 1)) then
        set i=1
        loop
            exitwhen i > udg_RandomHumTotalHeroes
            if(GetUnitTypeId(u)==udg_RandomHumHeroesType[i]) then
                set udg_RandomHumHeroesType[i] = GetUnitTypeId(hero)
            endif
            set i=i+1
        endloop
    elseif(IsPlayerInTeam(p, 2)) then
        set i=1
        loop
            exitwhen i > udg_RandomOrcTotalHeroes
            if(GetUnitTypeId(u)==udg_RandomOrcHeroesType[i]) then
                set udg_RandomOrcHeroesType[i] = GetUnitTypeId(hero)
            endif
            set i=i+1
        endloop
    endif
    call DisableTrigger(gg_trg_DeathMessageAndRespawn)
    call DisableTrigger(gg_trg_UnitDieEvents)
    call KillUnit(hero)
    call RemoveUnit(hero)
    call EnableTrigger(gg_trg_UnitDieEvents)
    call EnableTrigger(gg_trg_DeathMessageAndRespawn)
    call DestroyForce(allies)
    set u = null
    set hero = null
    set allies = null
    set p = null
endfunction

function InitTrig_Repick takes nothing returns nothing
    local integer i = 0
    set gg_trg_Repick = CreateTrigger()
    loop
        exitwhen i>=12
        call TriggerRegisterPlayerChatEvent(gg_trg_Repick, GetPlayer(i), "-repick", true)
        set i = i + 1
    endloop
    call TriggerAddCondition(gg_trg_Repick, Condition(function CRepick))
    call TriggerAddAction(gg_trg_Repick, function ARepick)
endfunction//===========================================================================
// Trigger: Cercle de choix
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function ASpendPoints takes nothing returns nothing
    local player p = GetOwningPlayer(GetTriggerUnit())
    local integer abilid = GetSpellAbilityId()
    local integer id = GetPlayerId(p)
    if(GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED)>0) then
        if(abilid=='A03Q') then
            if(GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED)>0) then
                call SetHeroStr(udg_Hero[id], GetHeroStr(udg_Hero[id], false) + 1, true)
                call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED) - 1)
            endif
        elseif(abilid=='A001' ) then
            if(GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED)>0) then
                call SetHeroAgi(udg_Hero[id], GetHeroAgi(udg_Hero[id], false) + 1, true)
                call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED) - 1)
            endif
        elseif(abilid=='A02N' ) then
            if(GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED)>0) then
                call SetHeroInt(udg_Hero[id], GetHeroInt(udg_Hero[id], false) + 1, true)
                call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED) - 1)
            endif
        elseif(abilid=='A04A') then
            if(GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED)>1) then
                call SetHeroStr(udg_Hero[id], GetHeroStr(udg_Hero[id], false) + 2, true)
                call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED) - 2)
            endif
        elseif(abilid=='A03N') then
            if(GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED)>1) then
                call SetHeroAgi(udg_Hero[id], GetHeroAgi(udg_Hero[id], false) + 2, true)
                call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED) - 2)
            endif
        elseif(abilid=='A04B') then
            if(GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED)>1) then
                call SetHeroInt(udg_Hero[id], GetHeroInt(udg_Hero[id], false) + 2, true)
                call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED) - 2)
            endif
        endif
    endif
    set p = null
endfunction
function ASwitchMode takes nothing returns nothing
    local player p = GetOwningPlayer(GetTriggerUnit())
    local integer id = GetPlayerId(p)
    if(GetIssuedOrderId()==OrderId("defend")) then
        set AUTODISTRIB[id]=true
        call UnitRemoveAbility(Cercles[id], 'A03Q')
        call UnitRemoveAbility(Cercles[id], 'A04A')
        call UnitRemoveAbility(Cercles[id], 'A001')
        call UnitRemoveAbility(Cercles[id], 'A03N')
        call UnitRemoveAbility(Cercles[id], 'A02N')
        call UnitRemoveAbility(Cercles[id], 'A04B')
    elseif(GetIssuedOrderId()==OrderId("undefend")) then
        set AUTODISTRIB[id]=false
        call UnitAddAbility(Cercles[id], 'A03Q')
        call UnitAddAbility(Cercles[id], 'A04A')
        call UnitAddAbility(Cercles[id], 'A001')
        call UnitAddAbility(Cercles[id], 'A03N')
        call UnitAddAbility(Cercles[id], 'A02N')
        call UnitAddAbility(Cercles[id], 'A04B')
    endif
    set p=null
endfunction

function InitTrig_Cercle_de_choix takes nothing returns nothing
    local trigger SpendPoints = CreateTrigger()
    local trigger SwitchMode = CreateTrigger()
    call TriggerRegisterAnyUnitEvent(SpendPoints, EVENT_PLAYER_UNIT_SPELL_EFFECT, Filter(function FCercleDeChoix))
    call TriggerRegisterAnyUnitEvent(SwitchMode, EVENT_PLAYER_UNIT_ISSUED_ORDER, Filter(function FCercleDeChoix))
    call TriggerAddAction(SpendPoints, function ASpendPoints)
    call TriggerAddAction(SwitchMode, function ASwitchMode)
endfunction//===========================================================================
// Trigger: AutoDistrib
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
globals
    boolean array AUTODISTRIB
endglobals

function SpendPointsAuto takes integer p returns nothing
    local integer i = GetPlayerState(GetPlayer(p), PLAYER_STATE_RESOURCE_FOOD_USED)
    if(i<=0) then
        return
    endif
    loop
        exitwhen i<=0
        if(GetHeroStr(udg_Hero[p], false)<GetHeroAgi(udg_Hero[p], false)) then
            if(GetHeroStr(udg_Hero[p], false)<GetHeroInt(udg_Hero[p], false)) then
                call SetHeroStr(udg_Hero[p], GetHeroStr(udg_Hero[p], false)+1, true)
                call SetPlayerState(GetPlayer(p), PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(GetPlayer(p), PLAYER_STATE_RESOURCE_FOOD_USED)-1)
            else
                call SetHeroInt(udg_Hero[p], GetHeroInt(udg_Hero[p], false)+1, true)
                call SetPlayerState(GetPlayer(p), PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(GetPlayer(p), PLAYER_STATE_RESOURCE_FOOD_USED)-1)
            endif
        else
            if(GetHeroAgi(udg_Hero[p], false)<GetHeroInt(udg_Hero[p], false)) then
                call SetHeroAgi(udg_Hero[p], GetHeroAgi(udg_Hero[p], false)+1, true)
                call SetPlayerState(GetPlayer(p), PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(GetPlayer(p), PLAYER_STATE_RESOURCE_FOOD_USED)-1)
            else
                call SetHeroInt(udg_Hero[p], GetHeroInt(udg_Hero[p], false)+1, true)
                call SetPlayerState(GetPlayer(p), PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(GetPlayer(p), PLAYER_STATE_RESOURCE_FOOD_USED)-1)
            endif
        endif
        set i=i-1
    endloop
endfunction
function AAutoDistrib takes nothing returns nothing
    local integer i = 0
    loop
        exitwhen i>=12
        if(AUTODISTRIB[i]) then
            call SpendPointsAuto(i)
        endif
        set i=i+1
    endloop
endfunction

function InitTrig_AutoDistrib takes nothing returns nothing
    local trigger AutoDistrib = CreateTrigger()
    local integer i = 0
    loop
        exitwhen i>=12
        set AUTODISTRIB[i]=false
        set i=i+1
    endloop
    call TriggerRegisterTimerEvent(AutoDistrib, 2., true)
    call TriggerAddAction(AutoDistrib, function AAutoDistrib) 
endfunction//===========================================================================
// Trigger: Levelling
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function ALevelling takes nothing returns nothing
    local player p = GetOwningPlayer(GetTriggerUnit())
    call CreateEffectTimed(GetTriggerUnit(), "Abilities\\Spells\\Other\\Levelup\\LevelUpCaster.mdl", "origin", 0.)
    if(GetPlayerController(p)==MAP_CONTROL_USER) then
        call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED)+8)
    elseif(GetPlayerController(p)==MAP_CONTROL_COMPUTER) then
        if(GetAIDifficulty(p)==AI_DIFFICULTY_NEWBIE) then
            call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED)+6)
        elseif(GetAIDifficulty(p)==AI_DIFFICULTY_NORMAL) then
            call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED)+8)
        elseif(GetAIDifficulty(p)==AI_DIFFICULTY_INSANE) then
            call SetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED, GetPlayerState(p, PLAYER_STATE_RESOURCE_FOOD_USED)+10)
        endif
    endif
    set p = null
endfunction
function InitTrig_Levelling takes nothing returns nothing
    local trigger exp=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(exp, EVENT_PLAYER_HERO_LEVEL)
    call TriggerAddAction(exp, function ALevelling)
    set exp=null
endfunction//===========================================================================
// Trigger: CritSystem
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function GetCriticalChances takes unit caster, unit target returns integer
    local player p = GetOwningPlayer(caster)
    local integer i = (GetHeroInt(caster, true) * 4 / 5) // Critical chances : 1 [Intelligence] <==> 0,8%cc
    if(IsUnitEnemy(target, p)) then // Si la cible est ennemie
        set i = i - (GetHeroStr(target, true) * 2 / 5) // Résistance cc : 1 [Force] <==> -0,4%cc
        if(UnitHasItemOfType(target, 'I01N')) then // Armure en chaînes de mailles
            //set i = i - 10 // -10%
        endif
        if(GetUnitAbilityLevel(target, udg_Buff_novadefeu)>0) then
            set i = i + 5
        elseif(GetUnitAbilityLevel(target, udg_Buff_novadegel)>0) then
            set i = i + 5
        elseif(GetUnitAbilityLevel(target, udg_Buff_explosiondejustice)>0) then
            set i = i + 5
        elseif(GetUnitAbilityLevel(target, udg_Buff_maindemort)>0) then
            set i = i + 5
        endif
        if(GetUnitAbilityLevel(caster, udg_Buff_coeurdegivreflammes)>0) then
            set i = i + 20
        elseif(GetUnitAbilityLevel(caster, udg_Buff_adrenaline) > 0) then
            set i = i + R2I(I2R(GetHeroAgi(caster, true)/3))
        elseif(GetUnitAbilityLevel(caster, udg_Buff_totemdepuissance)>0) then
            set i = i + 10
        endif
    else  // Sinon si elle est amicale
        if(GetUnitAbilityLevel(caster, udg_Buff_forcedelespoir) > 0) then
            set i = i + (3*GetUnitAbilityLevel(caster, 'A07N'))
        elseif(GetUnitAbilityLevel(caster, udg_Buff_cheminardent)>0) then
            set i = i + (3*GetUnitAbilityLevel(caster, 'A02W'))
        elseif(GetUnitAbilityLevel(caster, udg_Buff_totemdepuissance)>0) then
            set i = i + 10
        endif
    endif
    // Finalement, quelle qu'elle soit
    if(GetUnitAbilityLevel(caster, udg_Buff_runedesauvagerie) > 0) then
        set i = i + 40
    endif
    
    if(UnitHasItemOfType(caster, 'I01F')) then // Mitaines reposantes
        set i = i + 3
    elseif(UnitHasItemOfType(caster, 'I01G')) then // Paumelles runiques
        set i = i + 3
    elseif(UnitHasItemOfType(caster, 'I01H')) then // Gantelets du prédateur
        set i = i + 3
    endif

    if(IsUnitEnemy(target, p)) then
        if(GetUnitAbilityLevel(target, udg_Buff_anneauduconvalescent)>0) then
            set i = 0
        endif
    endif
    set p = null
    return i
endfunction
function GetCriticalFactor takes unit caster, unit target returns real
    local real i = 5.+(0.1*I2R(GetHeroAgi(caster, true))) // 1 [Agilité] <==> +1% dégats cc
    // Dégats critiques = 150% de base
    if(IsUnitEnemy(target, GetOwningPlayer(caster))) then // Si la cible est ennemie
        set i = i - (0.05*I2R(GetHeroStr(target, true))) // 1 [Force] <==> -0,5% dégats cc
    else // Sinon si elle est amicale
    endif // Finalement, quelle qu'elle soit
    
    if(GetUnitAbilityLevel(caster, udg_Buff_totemdefureurelementaire)>0) then
        set i = i + 3.5
    endif
    if(UnitHasItemOfType(target, 'I01W')) then // Anneau du démon
        set i = i + 5.
    endif
    
    set i = i * 0.1 // Nous travaillons décalés d'une dizaine pour faciliter la prise en compte de tous les facteurs
    return i
endfunction

function ALienDeSouffranceProc takes unit caster, real heal returns nothing
    local unit u = null
    local group g = NewGroup()
    call DefineUnitGroup(g, GetUnitX(caster), GetUnitY(caster), 800., GetOwningPlayer(caster), false, 5)
    loop
        set u = FirstOfGroup(g)
        exitwhen u==null
        call GroupRemoveUnit(g, u)
        if(u==caster) then
            call ModLife(u, heal)
        else
            call ModLife(u, heal*0.5)
        endif
        call CreateEffectTimed(u, "Abilities\\Spells\\Undead\\ReplenishMana\\SpiritTouchTarget.mdl", "chest", 0.)
    endloop
    call DeleteGroup(g)
    set u = null
endfunction
function FrappeColeriqueEnd takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit caster = HTLoadUnitHandle(t, CASTER)
    local unit dummy = HTLoadUnitHandle(t, DUMMY)
    call KillUnit(dummy)
    call RemoveUnit(dummy)
    call HTRemoveSavedHandle(caster, SKILL)
    call CleanTimer(t)
    set dummy = null
    set caster = null
endfunction
function DelayedDamageEnd takes nothing returns nothing
    local timer t = GetExpiredTimer()
    call SpellDamageTarget(HTLoadUnitHandle(t, CASTER), HTLoadUnitHandle(t, TARGET), HTLoadReal(t, REAL))
    call CreateEffectTimed(HTLoadUnitHandle(t, TARGET), "ArcaneTeleportation3.mdx", "origin", 0.)
    call CleanTimer(t)
endfunction
function DelayedDamage takes unit caster, unit target, real damage returns nothing
    local timer t = null
    if(GetUnitState(caster, UNIT_STATE_LIFE)>0.) then
        call ModifyLife(target, damage)
        set t = NewTimer()
        call HTSaveUnitHandle(t, CASTER, caster)
        call HTSaveUnitHandle(t, TARGET, target)
        call HTSaveReal(t, REAL, damage)
        call TimerStart(t, GetRandomReal(5.,7.), false, function DelayedDamageEnd)
    endif
endfunction

function OnDamage takes unit caster, unit target, real damage returns nothing
    local boolean displayDamage = true
    local real dmgFilt = GetUnitState(target, UNIT_STATE_MAX_LIFE)*0.05
    // Disciple du temps - Faille temporelle
    if(GetUnitTypeId(target)==DiscipleDuTempsID and GetUnitAbilityLevel(target, udg_Buff_failletemporelle)>0) then
        call DelayedDamage(caster, target, damage)
        set displayDamage=false
    endif
    // Semeur de souffrances - Lien de souffrance
    if(GetUnitTypeId(caster)==SemeurDeSouffrancesID and GetUnitAbilityLevel(target, udg_Buff_liendesouffrance)>0) then
        call ALienDeSouffranceProc(caster, damage*0.5)
    endif
    if(IsUnitType(target, UNIT_TYPE_HERO)==true and displayDamage) then
        if(damage>=dmgFilt) then
            call CombatText(I2S(R2I(damage)), 10., target, 100., 50., 50., 45., 135.)
        endif
    endif
endfunction
            
function OnCriticalDamage takes unit caster, unit target, real damage, real damageOut returns nothing
    local boolean displayDamage = true
    local timer t = null
    local unit u = null
    local real dmgFilt = GetUnitState(target, UNIT_STATE_MAX_LIFE)*0.05
    local real total = damage+damageOut
    // Barbare - Frappe colérique
    if(GetUnitTypeId(caster)==BarbareID) then
        set t = HTLoadTimerHandle(caster, SKILL)
        if(t==null) then
            set t = NewTimer()
            call HTSaveTimerHandle(caster, SKILL, t)
        endif
        set u = HTLoadUnitHandle(t, DUMMY)
        if(u==null) then
            call HTSaveUnitHandle(t, DUMMY, CreateUnit(GetOwningPlayer(caster), 'e004', 0., 0., 0.))
            call CombatText("Frappe colérique!", 8, caster, 100., 100., 50., 135., 225.)
        endif
        call HTSaveUnitHandle(t, CASTER, caster)
        call TimerStart(t, 5., false, function FrappeColeriqueEnd)
    endif
    // Disciple du temps - Faille temporelle
    if(GetUnitTypeId(target)==DiscipleDuTempsID and GetUnitAbilityLevel(target, udg_Buff_failletemporelle)>0) then
        call DelayedDamage(caster, target, total)
        set displayDamage=false
    endif
    // Mage des éléments - Bouclier de mana
    if(GetUnitAbilityLevel(caster, udg_Buff_bouclierdemana)>0) then
        call ModMana(caster, GetUnitState(caster, UNIT_STATE_MAX_MANA)*0.1)
    endif
    // Semeur de souffrances - Lien de souffrance
    if(GetUnitTypeId(caster)==SemeurDeSouffrancesID and GetUnitAbilityLevel(target, udg_Buff_liendesouffrance)>0) then
        call ALienDeSouffranceProc(caster, total*0.3)
    endif
     if(IsUnitType(target, UNIT_TYPE_HERO)==true and displayDamage) then
        if(total>=dmgFilt) then
            call CombatText(CC+I2S(R2I(total))+CC, 11., target, 100., 25., 25., 45., 135.)
        endif
    endif
endfunction

function OnHeal takes unit caster, unit target, real damage returns nothing
    local boolean displayDamage = true
    local real dmgFilt = GetUnitState(target, UNIT_STATE_MAX_LIFE)*-0.05
    if(IsUnitType(target, UNIT_TYPE_HERO)==true and displayDamage) then
        if(damage<=dmgFilt) then
            call CombatText(I2S(-1*R2I(damage)), 10., target, 50., 100., 50., 225., 315.)
        endif
    endif
endfunction

function OnCriticalHeal takes unit caster, unit target, real damage, real damageOut returns nothing
    local boolean displayDamage = true
    local unit u = null
    local real dmgFilt = GetUnitState(target, UNIT_STATE_MAX_LIFE)*-0.05
    local real total = damage+damageOut
    // Prêtre de l'espoir - Renouveau
    if(GetUnitTypeId(caster)==PretreDeLespoirID and IsUnitAlly(target, GetOwningPlayer(caster))==true) then
        set u = CreateUnit(GetOwningPlayer(caster), 'e002', GetUnitX(target), GetUnitY(target), 0.)
        call UnitApplyTimedLife(u, 'BTLF', 0.6)
        call UnitAddAbility(u, 'A04M')
        call IssueTargetOrder(u, "spiritlink", target)
        set u = null
        call ModMana(caster, I2R(GetHeroAgi(caster, true)))
    endif
    if(IsUnitType(target, UNIT_TYPE_HERO)==true and displayDamage) then
        if(total<=dmgFilt) then
            call CombatText(CC+I2S(-1*R2I(total))+CC, 11., target, 25., 100., 25., 225., 315.)
        endif
    endif
endfunction

function ACritical takes nothing returns nothing
    local unit target = GetTriggerUnit()
    local unit caster = GetEventDamageSource()
    local real damage = GetEventDamage()
    local integer CriticalChances = GetCriticalChances(caster, target)
    local real damageOut = damage*GetCriticalFactor(caster, target)
    call DisableTrigger(GetTriggeringTrigger())
    if(IsUnitType(caster, UNIT_TYPE_HERO)==true) then
        if(IsUnitType(target, UNIT_TYPE_STRUCTURE) == false) then
            if(damage>0.) then
                if(GetRandomInt(0, 100)<=CriticalChances) then
                    call UnitDamageTarget(caster, target, damageOut, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
                    call OnCriticalDamage(caster, target, damage, damageOut)
                else
                    call OnDamage(caster, target, damage)
                endif
            elseif(damage<0.) then
                if(GetRandomInt(0, 100)<=CriticalChances) then
                    call UnitDamageTarget(caster, target, damageOut, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
                    call OnCriticalHeal(caster, target, damage, damageOut)
                else
                    call OnHeal(caster, target, damage)
                endif
            endif
        endif
    elseif(IsUnitType(target, UNIT_TYPE_HERO)==true) then
        if(GetUnitTypeId(target)==DiscipleDuTempsID and GetUnitAbilityLevel(target, udg_Buff_failletemporelle)>0) then
        else
            if(damage>=(0.05*GetUnitState(target, UNIT_STATE_MAX_LIFE))) then
                call CombatText(I2S(R2I(damage)), 10., target, 100., 50., 50., 45., 135.)
            elseif(damage<=(-0.05*GetUnitState(target, UNIT_STATE_MAX_LIFE))) then
                call CombatText(I2S(-1*R2I(damage)), 10., target, 50., 100., 50., 225., 315.)
            endif
        endif
    endif
    set caster = null
    set target = null
    call EnableTrigger(GetTriggeringTrigger())
endfunction

function InitTrig_CritSystem takes nothing returns nothing
    set gg_trg_CritSystem=CreateTrigger()
    call TriggerRegisterAnyUnitDamaged(gg_trg_CritSystem)
    call TriggerAddAction(gg_trg_CritSystem, function ACritical)
endfunction//===========================================================================
// Trigger: DeathMessageAndRespawn
//===========================================================================
//TESH.scrollpos=-1
//TESH.alwaysfold=0
function CMortDeHeros takes nothing returns boolean
    return (IsUnitType(GetDyingUnit(), UNIT_TYPE_HERO)==true)
endfunction

function ResHero takes nothing returns nothing
    local timer t = GetExpiredTimer()
    local unit dying = HTLoadUnitHandle(t, UNIT)
    local player p = GetOwningPlayer(dying)
    local real heros_x = HTLoadReal(t, REAL1)
    local real heros_y = HTLoadReal(t, REAL2)
    local real APNrx = GetRectCenterX(gg_rct_ResAPN)
    local real APNry = GetRectCenterY(gg_rct_ResAPN)
    local real APSrx = GetRectCenterX(gg_rct_ResAPS)
    local real APSry = GetRectCenterY(gg_rct_ResAPS)
    local real APCrx = GetRectCenterX(gg_rct_ResAPC)
    local real APCry = GetRectCenterY(gg_rct_ResAPC)
    local real dist_CAS = 0.
    local real dist_APN = 0.
    local real dist_APS = 0.
    local real dist_APC = 0.
    local real x = 0.
    local real y = 0.
    if(IsPlayerInTeam(p, 1)) then
        if(GetPlayerId(GetOwningPlayer(APN))==13) then
            set dist_APN = DistanceBetweenXY(heros_x, heros_y, APNrx, APNry)
        endif
        if(GetPlayerId(GetOwningPlayer(APS))==13) then
            set dist_APS = DistanceBetweenXY(heros_x, heros_y, APSrx, APSry)
        endif
        if(GetPlayerId(GetOwningPlayer(APC))==13) then
            set dist_APC = DistanceBetweenXY(heros_x, heros_y, APCrx, APCry)
        endif
        set x = GetRectCenterX(gg_rct_ResHum)
        set y = GetRectCenterY(gg_rct_ResHum)
    elseif(IsPlayerInTeam(p, 2)) then
        if(GetPlayerId(GetOwningPlayer(APN))==14) then
            set dist_APN = DistanceBetweenXY(heros_x, heros_y, APNrx, APNry)
        endif
        if(GetPlayerId(GetOwningPlayer(APS))==14) then
            set dist_APS = DistanceBetweenXY(heros_x, heros_y, APSrx, APSry)
        endif
        if(GetPlayerId(GetOwningPlayer(APC))==14) then
            set dist_APC = DistanceBetweenXY(heros_x, heros_y, APCrx, APCry)
        endif
        set x = GetRectCenterX(gg_rct_ResOrc)
        set y = GetRectCenterY(gg_rct_ResOrc)
    endif
    set dist_CAS = DistanceBetweenXY(heros_x, heros_y, x, y)
    if(dist_APN<dist_CAS and dist_APN>0.) then
        set dist_CAS = dist_APN
        set x = APNrx
        set y = APNry
    endif
    if(dist_APS<dist_CAS and dist_APS>0.) then
        set dist_CAS = dist_APS
        set x = APSrx
        set y = APSry
    endif
    if(dist_APC<dist_CAS and dist_APC>0.) then
        set dist_CAS = dist_APC
        set x = APCrx
        set y = APCry
    endif
    call ReviveHero(dying, x, y, true)
    call SetUnitState(dying, UNIT_STATE_LIFE, GetUnitState(dying, UNIT_STATE_MAX_LIFE))
    call SetUnitState(dying, UNIT_STATE_MANA, GetUnitState(dying, UNIT_STATE_MAX_MANA))
    call ImmuneTarget(dying, 4.0)
    call CreateEffectTimed(dying, "Abilities\\Spells\\Items\\StaffOfSanctuary\\Staff_Sanctuary_Target.mdl", "chest", 4.0)
    call SetUnitMoveSpeed(dying, GetUnitDefaultMoveSpeed(dying))
    call SetUnitFlyHeight(dying, GetUnitDefaultFlyHeight(dying), 200.00)
    if(GetLocal()==p) then
        call ClearSelection()
        call SelectUnit(dying, true)
        call SetCameraPosition(x, y)
    endif
    call TimerDialogDisplay(udg_DeathTimerDialog[GetPlayerId(p)], false)
    call HTFlushChildHashtable(t)
    set p = null
    set dying = null
endfunction
function AMortDeHeros takes nothing returns nothing
    local unit dying = GetTriggerUnit()
    local unit killing = GetKillingUnit()
    local player p = GetOwningPlayer(dying)
    local player q = GetOwningPlayer(killing)
    local integer id = GetPlayerId(p)
    local real duration = 20.+I2R(GetHeroLevel(dying))*1.5
    if(q==null) then
        call DisplayTextToAll(0., GetColorByPlayerId(GetPlayerId(GetOwningPlayer(dying))) + GetUnitName(dying) + "|r|cfffccc66 est mort mystérieusement.|r")
    elseif(q==p) then
        call DisplayTextToAll(0., GetColorByPlayerId(GetPlayerId(GetOwningPlayer(dying))) + GetUnitName(dying) + "|r|cfffccc66 s'est suicidé.|r")
    else
        call DisplayTextToAll(0., GetColorByPlayerId(GetPlayerId(GetOwningPlayer(dying))) + GetUnitName(dying) + "|r|cfffccc66 a été tué par |r" + GetColorByPlayerId(GetPlayerId(GetOwningPlayer(killing))) + GetUnitName(killing) + "|r|cfffccc66.|r")
    endif
    call HTSaveUnitHandle(udg_DeathTimer[id], UNIT, dying)
    call HTSaveReal(udg_DeathTimer[id], REAL1, GetUnitX(dying))
    call HTSaveReal(udg_DeathTimer[id], REAL2, GetUnitY(dying))
    if(GetLocal()==p) then
        call TimerDialogDisplay(udg_DeathTimerDialog[GetPlayerId(p)], true)
    endif
    if(UnitHasItemOfType(dying, 'I02J')) then
        set duration = duration*0.5
    endif
    if(UnitHasItemOfType(dying, 'I00J')) then // Rune de l'éternel
        set duration = 1.
    endif
    call TimerStart(udg_DeathTimer[id], duration, false, function ResHero)
    set q = null
    set p = null
    set killing = null
    set dying = null
endfunction

function InitTrig_DeathMessageAndRespawn takes nothing returns nothing
    set gg_trg_DeathMessageAndRespawn = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_DeathMessageAndRespawn, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddCondition(gg_trg_DeathMessageAndRespawn, Condition(function CMortDeHeros))
    call TriggerAddAction(gg_trg_DeathMessageAndRespawn, function AMortDeHeros)
endfunction//===========================================================================
function InitCustomTriggers takes nothing returns nothing
    call InitTrig_Framework(  )
    call InitTrig_CastBar(  )
    call InitTrig_DurationBar(  )
    call InitTrig_CC_Conditions_functions(  )
    call InitTrig_Units_functions(  )
    call InitTrig_CC_functions(  )
    call InitTrig_Damage_functions(  )
    call InitTrig_DoT_functions(  )
    call InitTrig_Dispel(  )
    call InitTrig_CombatState(  )
    call InitTrig_AI(  )
    call InitTrig_Initialisation(  )
    call InitTrig_TimedEvents(  )
    call InitTrig_BeforeMapStart(  )
    call InitTrig_PeriodicEvents(  )
    call InitTrig_UnitDieEvents(  )
    call InitTrig_PlayerLeave(  )
    call InitTrig_Castles_destroyed(  )
    call InitTrig_Cheats(  )
    call InitTrig_ChangePatrolOrder(  )
    call InitTrig_ItemSpells(  )
    call InitTrig_ItemSystem(  )
    call InitTrig_UsingItems(  )
    call InitTrig_LearningAlchemy(  )
    call InitTrig_LearningEnchant(  )
    call InitTrig_InventorySwitch(  )
    call InitTrig_Enchants(  )
    call InitTrig_Tracking(  )
    call InitTrig_Waves(  )
    call InitTrig_CreepSpawn(  )
    call InitTrig_BossSpawn(  )
    call InitTrig_InactiveCreepsOrders(  )
    call InitTrig_Orders(  )
    call InitTrig_Capping_Avant_Postes(  )
    call InitTrig_Creep_Spells(  )
    call InitTrig_PorteMort(  )
    call InitTrig_DrakeDeLaGuerre(  )
    call InitTrig_MarcheurDeLhiver(  )
    call InitTrig_GardienDeLaTerre(  )
    call InitTrig_Justicier(  )
    call InitTrig_ChevalierNoir(  )
    call InitTrig_HerautDeLaPaix(  )
    call InitTrig_Barbare(  )
    call InitTrig_Vampire(  )
    call InitTrig_Assassin(  )
    call InitTrig_TisseurDeLiens(  )
    call InitTrig_DiscipleDuTemps(  )
    call InitTrig_Necromancien(  )
    call InitTrig_Chaman(  )
    call InitTrig_SorcierRenegat(  )
    call InitTrig_Incinerateur(  )
    call InitTrig_ErrantDeLombre(  )
    call InitTrig_PorteurDePeste(  )
    call InitTrig_MageDesElements(  )
    call InitTrig_TortionnaireFoudroyant(  )
    call InitTrig_TunneleurDesVents(  )
    call InitTrig_ExpiateurDeMagie(  )
    call InitTrig_SemeurDeSouffrances(  )
    call InitTrig_ChasseuseCrepusculaire(  )
    call InitTrig_MarineDeLespace(  )
    call InitTrig_Archidruide(  )
    call InitTrig_PretreDeLespoir(  )
    call InitTrig_OnAttackSpells(  )
    call InitTrig_OnCastSpells(  )
    call InitTrig_WhenSpelledSpells(  )
    call InitTrig_WhenAttackedSpells(  )
    call InitTrig_Classes_Initialisations(  )
    call InitTrig_Players_Initialisations(  )
    call InitTrig_Selection(  )
    call InitTrig_Experience(  )
    call InitTrig_Repick(  )
    call InitTrig_Cercle_de_choix(  )
    call InitTrig_AutoDistrib(  )
    call InitTrig_Levelling(  )
    call InitTrig_CritSystem(  )
    call InitTrig_DeathMessageAndRespawn(  )
endfunction

//===========================================================================
function RunInitializationTriggers takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_Initialisation )
endfunction

//***************************************************************************
//*
//*  Players
//*
//***************************************************************************

function InitCustomPlayerSlots takes nothing returns nothing

    // Player 0
    call SetPlayerStartLocation( Player(0), 0 )
    call ForcePlayerStartLocation( Player(0), 0 )
    call SetPlayerColor( Player(0), ConvertPlayerColor(0) )
    call SetPlayerRacePreference( Player(0), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(0), true )
    call SetPlayerController( Player(0), MAP_CONTROL_USER )

    // Player 1
    call SetPlayerStartLocation( Player(1), 1 )
    call ForcePlayerStartLocation( Player(1), 1 )
    call SetPlayerColor( Player(1), ConvertPlayerColor(1) )
    call SetPlayerRacePreference( Player(1), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(1), true )
    call SetPlayerController( Player(1), MAP_CONTROL_USER )

    // Player 2
    call SetPlayerStartLocation( Player(2), 2 )
    call ForcePlayerStartLocation( Player(2), 2 )
    call SetPlayerColor( Player(2), ConvertPlayerColor(2) )
    call SetPlayerRacePreference( Player(2), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(2), true )
    call SetPlayerController( Player(2), MAP_CONTROL_USER )

    // Player 3
    call SetPlayerStartLocation( Player(3), 3 )
    call ForcePlayerStartLocation( Player(3), 3 )
    call SetPlayerColor( Player(3), ConvertPlayerColor(3) )
    call SetPlayerRacePreference( Player(3), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(3), true )
    call SetPlayerController( Player(3), MAP_CONTROL_USER )

    // Player 4
    call SetPlayerStartLocation( Player(4), 4 )
    call ForcePlayerStartLocation( Player(4), 4 )
    call SetPlayerColor( Player(4), ConvertPlayerColor(4) )
    call SetPlayerRacePreference( Player(4), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(4), true )
    call SetPlayerController( Player(4), MAP_CONTROL_USER )

    // Player 5
    call SetPlayerStartLocation( Player(5), 5 )
    call ForcePlayerStartLocation( Player(5), 5 )
    call SetPlayerColor( Player(5), ConvertPlayerColor(5) )
    call SetPlayerRacePreference( Player(5), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(5), true )
    call SetPlayerController( Player(5), MAP_CONTROL_USER )

    // Player 6
    call SetPlayerStartLocation( Player(6), 6 )
    call ForcePlayerStartLocation( Player(6), 6 )
    call SetPlayerColor( Player(6), ConvertPlayerColor(6) )
    call SetPlayerRacePreference( Player(6), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(6), true )
    call SetPlayerController( Player(6), MAP_CONTROL_USER )

    // Player 7
    call SetPlayerStartLocation( Player(7), 7 )
    call ForcePlayerStartLocation( Player(7), 7 )
    call SetPlayerColor( Player(7), ConvertPlayerColor(7) )
    call SetPlayerRacePreference( Player(7), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(7), true )
    call SetPlayerController( Player(7), MAP_CONTROL_USER )

    // Player 8
    call SetPlayerStartLocation( Player(8), 8 )
    call ForcePlayerStartLocation( Player(8), 8 )
    call SetPlayerColor( Player(8), ConvertPlayerColor(8) )
    call SetPlayerRacePreference( Player(8), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(8), true )
    call SetPlayerController( Player(8), MAP_CONTROL_USER )

    // Player 9
    call SetPlayerStartLocation( Player(9), 9 )
    call ForcePlayerStartLocation( Player(9), 9 )
    call SetPlayerColor( Player(9), ConvertPlayerColor(9) )
    call SetPlayerRacePreference( Player(9), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(9), true )
    call SetPlayerController( Player(9), MAP_CONTROL_USER )

    // Player 10
    call SetPlayerStartLocation( Player(10), 10 )
    call ForcePlayerStartLocation( Player(10), 10 )
    call SetPlayerColor( Player(10), ConvertPlayerColor(10) )
    call SetPlayerRacePreference( Player(10), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(10), true )
    call SetPlayerController( Player(10), MAP_CONTROL_USER )

    // Player 11
    call SetPlayerStartLocation( Player(11), 11 )
    call ForcePlayerStartLocation( Player(11), 11 )
    call SetPlayerColor( Player(11), ConvertPlayerColor(11) )
    call SetPlayerRacePreference( Player(11), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(11), true )
    call SetPlayerController( Player(11), MAP_CONTROL_USER )

endfunction

function InitCustomTeams takes nothing returns nothing
    // Force: Bastion humain
    call SetPlayerTeam( Player(0), 0 )
    call SetPlayerState( Player(0), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(1), 0 )
    call SetPlayerState( Player(1), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(2), 0 )
    call SetPlayerState( Player(2), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(3), 0 )
    call SetPlayerState( Player(3), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(4), 0 )
    call SetPlayerState( Player(4), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(5), 0 )
    call SetPlayerState( Player(5), PLAYER_STATE_ALLIED_VICTORY, 1 )

    //   Allied
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(4), true )

    //   Shared Vision
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(4), true )

    // Force: Bastion orc
    call SetPlayerTeam( Player(6), 1 )
    call SetPlayerState( Player(6), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(7), 1 )
    call SetPlayerState( Player(7), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(8), 1 )
    call SetPlayerState( Player(8), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(9), 1 )
    call SetPlayerState( Player(9), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(10), 1 )
    call SetPlayerState( Player(10), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(11), 1 )
    call SetPlayerState( Player(11), PLAYER_STATE_ALLIED_VICTORY, 1 )

    //   Allied
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(8), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(10), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(8), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(10), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(8), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(8), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(8), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(8), Player(10), true )
    call SetPlayerAllianceStateAllyBJ( Player(8), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(8), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(10), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(10), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(10), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(10), Player(8), true )
    call SetPlayerAllianceStateAllyBJ( Player(10), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(10), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(8), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(10), true )

    //   Shared Vision
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(8), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(10), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(11), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(8), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(10), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(11), true )
    call SetPlayerAllianceStateVisionBJ( Player(8), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(8), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(8), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(8), Player(10), true )
    call SetPlayerAllianceStateVisionBJ( Player(8), Player(11), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(8), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(10), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(11), true )
    call SetPlayerAllianceStateVisionBJ( Player(10), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(10), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(10), Player(8), true )
    call SetPlayerAllianceStateVisionBJ( Player(10), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(10), Player(11), true )
    call SetPlayerAllianceStateVisionBJ( Player(11), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(11), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(11), Player(8), true )
    call SetPlayerAllianceStateVisionBJ( Player(11), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(11), Player(10), true )

endfunction

function InitAllyPriorities takes nothing returns nothing

    call SetStartLocPrioCount( 0, 2 )
    call SetStartLocPrio( 0, 0, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 0, 1, 4, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 1, 1 )
    call SetStartLocPrio( 1, 0, 0, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 2, 2 )
    call SetStartLocPrio( 2, 0, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 1, 4, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 3, 1 )
    call SetStartLocPrio( 3, 0, 2, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 4, 3 )
    call SetStartLocPrio( 4, 0, 0, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 4, 1, 2, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 4, 2, 5, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 5, 1 )
    call SetStartLocPrio( 5, 0, 4, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 6, 2 )
    call SetStartLocPrio( 6, 0, 7, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 6, 1, 10, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 7, 1 )
    call SetStartLocPrio( 7, 0, 6, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 8, 2 )
    call SetStartLocPrio( 8, 0, 9, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 8, 1, 10, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 9, 1 )
    call SetStartLocPrio( 9, 0, 8, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 10, 3 )
    call SetStartLocPrio( 10, 0, 6, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 10, 1, 8, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 10, 2, 11, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 11, 1 )
    call SetStartLocPrio( 11, 0, 10, MAP_LOC_PRIO_HIGH )
endfunction

//***************************************************************************
//*
//*  Main Initialization
//*
//***************************************************************************

//===========================================================================
function main takes nothing returns nothing
    call SetCameraBounds( -8576.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), -7552.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 6528.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 7552.0 - GetCameraMargin(CAMERA_MARGIN_TOP), -8576.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), 7552.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 6528.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), -7552.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM) )
    call SetDayNightModels( "Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl", "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl" )
    call SetTerrainFogEx( 0, 1000.0, 2500.0, 0.500, 0.251, 0.251, 0.251 )
    call SetWaterBaseColor( 64, 64, 64, 255 )
    call NewSoundEnvironment( "Default" )
    call SetAmbientDaySound( "SunkenRuinsDay" )
    call SetAmbientNightSound( "SunkenRuinsNight" )
    call SetMapMusic( "Music", true, 0 )
    call InitSounds(  )
    call CreateRegions(  )
    call CreateAllUnits(  )
    call InitBlizzard(  )
    call InitGlobals(  )
    call InitCustomTriggers(  )
    call RunInitializationTriggers(  )

endfunction

//***************************************************************************
//*
//*  Map Configuration
//*
//***************************************************************************

function config takes nothing returns nothing
    call SetMapName( "TRIGSTR_001" )
    call SetMapDescription( "TRIGSTR_003" )
    call SetPlayers( 12 )
    call SetTeams( 12 )
    call SetGamePlacement( MAP_PLACEMENT_TEAMS_TOGETHER )

    call DefineStartLocation( 0, -8064.0, 6912.0 )
    call DefineStartLocation( 1, -8192.0, 6912.0 )
    call DefineStartLocation( 2, -7808.0, 6912.0 )
    call DefineStartLocation( 3, -7680.0, 6912.0 )
    call DefineStartLocation( 4, -7936.0, 6784.0 )
    call DefineStartLocation( 5, -7936.0, 6656.0 )
    call DefineStartLocation( 6, 5760.0, -6912.0 )
    call DefineStartLocation( 7, 5632.0, -6912.0 )
    call DefineStartLocation( 8, 6016.0, -6912.0 )
    call DefineStartLocation( 9, 6144.0, -6912.0 )
    call DefineStartLocation( 10, 5888.0, -7040.0 )
    call DefineStartLocation( 11, 5888.0, -7168.0 )

    // Player setup
    call InitCustomPlayerSlots(  )
    call InitCustomTeams(  )
    call InitAllyPriorities(  )
endfunction

